{"knowledge_relations":[{"id":1,"source_id":"b75c3e61-29d8-493f-913e-27462d1f5ea2","target_id":"e53eb385-5a23-457c-b9e2-5e25f41b0635","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b75c3e61-29d8-493f-913e-27462d1f5ea2 -\u003e e53eb385-5a23-457c-b9e2-5e25f41b0635","gmt_create":"2025-09-16T12:45:50.093969+08:00","gmt_modified":"2025-09-16T12:45:50.093969+08:00"},{"id":2,"source_id":"b75c3e61-29d8-493f-913e-27462d1f5ea2","target_id":"35358452-6af2-4f9a-95f9-d06b5041c82a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b75c3e61-29d8-493f-913e-27462d1f5ea2 -\u003e 35358452-6af2-4f9a-95f9-d06b5041c82a","gmt_create":"2025-09-16T12:45:50.096601+08:00","gmt_modified":"2025-09-16T12:45:50.096601+08:00"},{"id":3,"source_id":"b75c3e61-29d8-493f-913e-27462d1f5ea2","target_id":"1aabc41e-5051-4fe4-afd5-8281e74ec1cb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b75c3e61-29d8-493f-913e-27462d1f5ea2 -\u003e 1aabc41e-5051-4fe4-afd5-8281e74ec1cb","gmt_create":"2025-09-16T12:45:50.101749+08:00","gmt_modified":"2025-09-16T12:45:50.101749+08:00"},{"id":4,"source_id":"b75c3e61-29d8-493f-913e-27462d1f5ea2","target_id":"ff9b2af6-4031-482c-8d2c-57acbb8fae16","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b75c3e61-29d8-493f-913e-27462d1f5ea2 -\u003e ff9b2af6-4031-482c-8d2c-57acbb8fae16","gmt_create":"2025-09-16T12:45:50.105558+08:00","gmt_modified":"2025-09-16T12:45:50.105558+08:00"},{"id":5,"source_id":"c198fda9-92b0-4041-bfe0-a962199d7b55","target_id":"6962925f-1bf5-47d2-886a-7e8366bd52f6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c198fda9-92b0-4041-bfe0-a962199d7b55 -\u003e 6962925f-1bf5-47d2-886a-7e8366bd52f6","gmt_create":"2025-09-16T12:45:50.106683+08:00","gmt_modified":"2025-09-16T12:45:50.106683+08:00"},{"id":6,"source_id":"c198fda9-92b0-4041-bfe0-a962199d7b55","target_id":"3e73f5c1-54b1-4f2f-b58d-a709f6365144","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c198fda9-92b0-4041-bfe0-a962199d7b55 -\u003e 3e73f5c1-54b1-4f2f-b58d-a709f6365144","gmt_create":"2025-09-16T12:45:50.112664+08:00","gmt_modified":"2025-09-16T12:45:50.112664+08:00"},{"id":7,"source_id":"c198fda9-92b0-4041-bfe0-a962199d7b55","target_id":"fc64b745-828d-475f-9da7-7c6b05cc7f12","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c198fda9-92b0-4041-bfe0-a962199d7b55 -\u003e fc64b745-828d-475f-9da7-7c6b05cc7f12","gmt_create":"2025-09-16T12:45:50.118225+08:00","gmt_modified":"2025-09-16T12:45:50.118225+08:00"},{"id":8,"source_id":"c198fda9-92b0-4041-bfe0-a962199d7b55","target_id":"5940f50f-b47d-4ca7-bc8d-d6c161cff8d1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c198fda9-92b0-4041-bfe0-a962199d7b55 -\u003e 5940f50f-b47d-4ca7-bc8d-d6c161cff8d1","gmt_create":"2025-09-16T12:45:50.12569+08:00","gmt_modified":"2025-09-16T12:45:50.12569+08:00"},{"id":9,"source_id":"c198fda9-92b0-4041-bfe0-a962199d7b55","target_id":"14bb63c8-7b1e-478f-a995-445b5eb9ee08","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c198fda9-92b0-4041-bfe0-a962199d7b55 -\u003e 14bb63c8-7b1e-478f-a995-445b5eb9ee08","gmt_create":"2025-09-16T12:45:50.12964+08:00","gmt_modified":"2025-09-16T12:45:50.12964+08:00"},{"id":10,"source_id":"c198fda9-92b0-4041-bfe0-a962199d7b55","target_id":"1910fd6e-288b-4eab-9762-d4fc24078af2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c198fda9-92b0-4041-bfe0-a962199d7b55 -\u003e 1910fd6e-288b-4eab-9762-d4fc24078af2","gmt_create":"2025-09-16T12:45:50.131247+08:00","gmt_modified":"2025-09-16T12:45:50.131247+08:00"},{"id":11,"source_id":"c198fda9-92b0-4041-bfe0-a962199d7b55","target_id":"e1aacfe6-076e-46ea-9a34-d2dd8a7b1f0d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c198fda9-92b0-4041-bfe0-a962199d7b55 -\u003e e1aacfe6-076e-46ea-9a34-d2dd8a7b1f0d","gmt_create":"2025-09-16T12:45:50.136422+08:00","gmt_modified":"2025-09-16T12:45:50.136422+08:00"},{"id":12,"source_id":"76ea424b-ee76-4f8e-b012-4602bb03de1e","target_id":"7ae77fb1-a7de-44a7-8cf1-108f58cca211","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 76ea424b-ee76-4f8e-b012-4602bb03de1e -\u003e 7ae77fb1-a7de-44a7-8cf1-108f58cca211","gmt_create":"2025-09-16T12:45:50.143048+08:00","gmt_modified":"2025-09-16T12:45:50.143048+08:00"},{"id":13,"source_id":"76ea424b-ee76-4f8e-b012-4602bb03de1e","target_id":"d7fb8bc6-2f34-46b1-b706-53428c950d2f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 76ea424b-ee76-4f8e-b012-4602bb03de1e -\u003e d7fb8bc6-2f34-46b1-b706-53428c950d2f","gmt_create":"2025-09-16T12:45:50.147575+08:00","gmt_modified":"2025-09-16T12:45:50.147575+08:00"},{"id":14,"source_id":"76ea424b-ee76-4f8e-b012-4602bb03de1e","target_id":"5f18de72-9258-4aaa-aa6a-dab993c3ae20","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 76ea424b-ee76-4f8e-b012-4602bb03de1e -\u003e 5f18de72-9258-4aaa-aa6a-dab993c3ae20","gmt_create":"2025-09-16T12:45:50.151736+08:00","gmt_modified":"2025-09-16T12:45:50.151736+08:00"},{"id":15,"source_id":"900d9558-f42b-4439-91ad-053181a91043","target_id":"9f9eff7f-ff7f-4bda-b384-8a223607642e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 900d9558-f42b-4439-91ad-053181a91043 -\u003e 9f9eff7f-ff7f-4bda-b384-8a223607642e","gmt_create":"2025-09-16T12:45:50.153278+08:00","gmt_modified":"2025-09-16T12:45:50.153278+08:00"},{"id":16,"source_id":"900d9558-f42b-4439-91ad-053181a91043","target_id":"bc08d2cb-d26a-4646-9500-3d4f03c43eb2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 900d9558-f42b-4439-91ad-053181a91043 -\u003e bc08d2cb-d26a-4646-9500-3d4f03c43eb2","gmt_create":"2025-09-16T12:45:50.15909+08:00","gmt_modified":"2025-09-16T12:45:50.15909+08:00"},{"id":17,"source_id":"2e8b8ca4-6715-4b00-808f-ce43011f1260","target_id":"d4b5172d-03d4-4afe-932b-90b84e938fb2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2e8b8ca4-6715-4b00-808f-ce43011f1260 -\u003e d4b5172d-03d4-4afe-932b-90b84e938fb2","gmt_create":"2025-09-16T12:45:50.159492+08:00","gmt_modified":"2025-09-16T12:45:50.159492+08:00"},{"id":18,"source_id":"2e8b8ca4-6715-4b00-808f-ce43011f1260","target_id":"00fd460e-6bc3-41ff-b3b3-3c615e1b2e81","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2e8b8ca4-6715-4b00-808f-ce43011f1260 -\u003e 00fd460e-6bc3-41ff-b3b3-3c615e1b2e81","gmt_create":"2025-09-16T12:45:50.16508+08:00","gmt_modified":"2025-09-16T12:45:50.16508+08:00"},{"id":19,"source_id":"2e8b8ca4-6715-4b00-808f-ce43011f1260","target_id":"5738857d-e17a-4ce7-a867-8614d1a7a466","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2e8b8ca4-6715-4b00-808f-ce43011f1260 -\u003e 5738857d-e17a-4ce7-a867-8614d1a7a466","gmt_create":"2025-09-16T12:45:50.168502+08:00","gmt_modified":"2025-09-16T12:45:50.168502+08:00"},{"id":20,"source_id":"47b392e9-6791-4375-ae6f-05d4b639e22c","target_id":"517c70ae-bf8b-4c1b-bc45-60341039485a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 47b392e9-6791-4375-ae6f-05d4b639e22c -\u003e 517c70ae-bf8b-4c1b-bc45-60341039485a","gmt_create":"2025-09-16T12:45:50.170028+08:00","gmt_modified":"2025-09-16T12:45:50.170028+08:00"},{"id":21,"source_id":"47b392e9-6791-4375-ae6f-05d4b639e22c","target_id":"d2e0e57c-9727-4812-96fe-e663288f73bd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 47b392e9-6791-4375-ae6f-05d4b639e22c -\u003e d2e0e57c-9727-4812-96fe-e663288f73bd","gmt_create":"2025-09-16T12:45:50.176+08:00","gmt_modified":"2025-09-16T12:45:50.176+08:00"},{"id":22,"source_id":"47b392e9-6791-4375-ae6f-05d4b639e22c","target_id":"aa89b74f-f07c-4c4c-93d8-99678b84046c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 47b392e9-6791-4375-ae6f-05d4b639e22c -\u003e aa89b74f-f07c-4c4c-93d8-99678b84046c","gmt_create":"2025-09-16T12:45:50.176463+08:00","gmt_modified":"2025-09-16T12:45:50.176463+08:00"},{"id":23,"source_id":"a9920815-a397-43bc-95c2-5ec4bce97d5c","target_id":"a2bdf841-daee-4f59-a42c-2e8ab624956e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a9920815-a397-43bc-95c2-5ec4bce97d5c -\u003e a2bdf841-daee-4f59-a42c-2e8ab624956e","gmt_create":"2025-09-16T12:45:50.182263+08:00","gmt_modified":"2025-09-16T12:45:50.182263+08:00"},{"id":24,"source_id":"a9920815-a397-43bc-95c2-5ec4bce97d5c","target_id":"d95b7ddc-d75e-45f6-991b-ed493be901d1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a9920815-a397-43bc-95c2-5ec4bce97d5c -\u003e d95b7ddc-d75e-45f6-991b-ed493be901d1","gmt_create":"2025-09-16T12:45:50.185227+08:00","gmt_modified":"2025-09-16T12:45:50.185227+08:00"},{"id":25,"source_id":"a9920815-a397-43bc-95c2-5ec4bce97d5c","target_id":"07106eb1-551a-459e-ac0a-17c56085abe7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a9920815-a397-43bc-95c2-5ec4bce97d5c -\u003e 07106eb1-551a-459e-ac0a-17c56085abe7","gmt_create":"2025-09-16T12:45:50.185591+08:00","gmt_modified":"2025-09-16T12:45:50.185591+08:00"}],"wiki_catalogs":[{"id":"cf4e0eba-8bc7-4ac0-9639-c20754360b9c","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Project Overview","description":"project-overview","prompt":"Create comprehensive content for this section focused on the novitai backend application. Explain its purpose as a RESTful API service for managing GPU instances on the Novita.ai platform through automated lifecycle workflows. Describe the core value proposition: enabling users to programmatically create, monitor, and manage GPU instances with optimal pricing and webhook notifications. Document the high-level architecture including the Express.js server, service layer pattern, middleware pipeline, and integration with external APIs. Illustrate the main data flow from API request to instance provisioning and webhook delivery. Include a system context diagram showing external clients, the application, and integrated services (Novita.ai API, webhook endpoints). Provide a brief explanation of each major directory in the codebase (src/, client-examples/, scripts/, etc.) and their roles. Highlight key features such as health checks, metrics exposure, and job queue-based workflows. Make this section accessible to new developers while providing enough technical depth for system integrators. Include links to key entry points like API endpoints, configuration, and client examples.","parent_id":"","order":0,"progress_status":"completed","dependent_files":"README.md,package.json","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.475921+08:00","gmt_modified":"2025-09-16T12:26:30.108015+08:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02dqzTho5arqNtbUziutSzUZOqm7yOpCxfwhmmzZqG/lBD3pMVXunyKmPUgiOnGRUOBaiu4NoJ2bqNizKafQrY+y7qDkAO1jvItvmu5zOxhAI8LDYUidDHOzlMWGRiAoBeTxOSM2SUT6uO0Fo9eNp9IVfP9VRNsA5NoimV1+jdJwRBRQRxycgKlC7GmQ4u+QhSqWZa5FLIotI0Yttwuq+0xhNhahwNxIiWGYQj//k8EGuQyLWRmGV2/3alIEwD9KivxJoRzhVp/kLZA0Z2i5egFXyXveOZn2YsUBE1ZKoYET49lkPDqbU1uK74QnD2VsgJv7+7EPA1wb90e2QB5zA7F4N2mBlr7XmjylzEF1Dqu4N1A4v45Nnk1gPG+G+WyFRos7iEAKudADa/b1dI4v09tWeH1feFVBOSDoE7w4MmAbLyrGZPZMRr/NFNEquK3z1MIGqJxAP+fdVI1TPDixsfJPV73m+Vyig/H2mvUiQdfeU+rOBOSatDE+e8eYF1OLGbzP74RWSeueOvYgZOB7GOYxFpjPWgeD6uplmIh8ARtDDVrJY4eJTo0Fa+yNh2+ZzQUT6ehW9NSwMWSnDsTZik7Y8lIjQdWRDoM3DZM0IVGL9jxpub+eTPH1Nv+XhAhXwgTqIHuaDMaAjpNzLO1ynh0MtjbP3M2SnsT4tRVy1Wa5SEG9M/Uhu2qgZAYmUjAh6C2Gu2qaNzy4qoWPjfAsyL0llobOhec386afsuepKAKkFiXN/fJ+rL/GR3hCSo21Nw/95qN0qcJVtnxxNiZgtsHmnET6JbmFf/rQuaVDCrcyabiiq899bYcv0T9Ydp7zDWGs9Am6Yi43pNQ+kXxfzjQsIp2myzVUR/eZWgLFq0wrI9YqX50bx1RX9Ipetha+WViJADJCkULt2oyUaMyzWbWKuyT2VbKOLVNaNyQyuVtTGsvUFNyIdrIiA/U4INU1OhP3QKElBUBYaD5Fm4BB4kh/JzcluRhNu6ODsLUwprpUmWeFxqRKN1GuFblxlQNdZqYzfAx1sm7BsCytczl9nUIXylt1AzB2ttKwPrF/I9UZv8C9dyGvITdNcRfwzAM7rrY48kQ3xzKpqeVDV/EGzzpAHhklPNGaEvVT/6ast61AFTp1IM+wpUoBz7GCHCSMwAsh3woc1Kzy5BPu8h4Bbv16ayfFrWm8r8/cDCbsEJUej76tQn4iEIHRRr94be6tn00U6++M2EChKvB22NSf8gh6Sd+2W9zh43XyXqgCjfZybPOtyDb64Kd30GmUO8HSTUYrmrYayyGzvZp4XBdKRs7SU7JaOjimRuXAvab2MnR5epzSkhei4YKEalwCn4NsXdII0+ZLbHMIdUjZ/0+M82evL92hEdd5Jgy6cS5KQXmdSy1C2EalDVoctSLBEwJhTVeeFNtf55doGsPhV8Zp/xoeAvfIbtCsRaq3ftXY8nJxrJro+b8xfbnYDQYONA0XGXxRQKd8C5Zbub3XNRd00KndaTgNleWLomBucIbite20IAsO8Hn9N8sJ9nwNNCkGSxuDVO52qupsr2QgwkWbfDYD4YQmp2XOIKOsOYNxWoKJydWNzi8PKCoxzbj9eJ26sw8tEl5ZA+fAJw5zhzVWPH4ewHz6oHnrqckuNfUwK8mdk3GqFvZJQVRgeopW/tjhdLvJPObChq8ff+SLKN5+J9YxZkvoHr9BGePj4bQKylR7Hcu4OgKoo71k+QRNxcl2O4pQptAHZfDo+VAUe6mT7cVFD+Enl4M5oQz/yy0legJmaozSZDMZgtnkdIVVJArRD2eV9fCFnqNJLq5Vz0dlyvl2fcHhBgTI7DqXwQpfto812A7P/mzjI6M1jujgIRvj/ZVGEAsNcs2RCOSQ6DAaUJPn","layer_level":0},{"id":"2eac8f4d-02b5-40d9-a1d3-2fea1c5d90c8","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Instance Creation Workflow","description":"instance-creation-workflow","prompt":"Develop detailed content for this sub-feature focused on the instance creation workflow. Thoroughly explain the end-to-end process from API request to job queuing, including the validation of CreateInstanceRequest parameters, generation of unique instance IDs, and retrieval of optimal product and template configurations. Detail how InstanceService coordinates with ProductService and TemplateService to determine the best GPU configuration and template settings. Document the role of JobQueueService in handling asynchronous processing through the addJob method with HIGH priority for creation tasks. Explain the CreateInstanceJobPayload structure and its serialization in the job system. Include the error handling strategy for validation failures and service unavailability. Provide sequence diagrams showing the interaction between InstanceService, JobQueueService, and external dependencies during creation. Address performance considerations such as parallel execution of product and template lookups, and the impact of job queue processing intervals on responsiveness.","parent_id":"ef82e9a1-7273-4190-8ee5-1896a534f77d","order":0,"progress_status":"completed","dependent_files":"src/services/instanceService.ts,src/services/jobQueueService.ts,src/services/novitaApiService.ts,src/clients/novitaClient.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:23.92561+08:00","gmt_modified":"2025-09-16T12:33:45.33328+08:00","raw_data":"WikiEncrypted:H40IG3QTETlFfL+Gte6dXi4HmaKl0o2wmg+t6fSuxfHO0+UXiT/y5HN/SvUz9VxYhgMgtnjIqadgWW7OaJ65lJp+7ghqe0PTkNZksjoNf3jH91/Ur8TxUJp9fW+Cy1Vy5u2p0GwMWRHkf0Sv3oZRvMGbbQdTtqZK1fUNEApGo0JA0rNL5RDeUWudCSfm6wPOGf0aEyvpzLCGhw1+3JUplVT79KbRHr9KXq5SOVXxCRZzlGCujOebD5yfgwY8ijBgVpVzcLu4x3WbxQSD27AMqCftyIGRg38nMkhre0i/KX8lG/iOkGb7M29lAmB9i+LiKzd9au2oePupSQyiKdmAUJENDwxoiI6UeSuRuirYWK+VR3u/panUuhCXhNV37lygqcF5YaON8wBXjp3pTke+ppRcfaX73UHwNnuum8Vc4dmygsMPXwGzIkb/eQl7EZ4WKmFiH+FudWVn+DDq14xG3Hyf3OoKsfUqddRW2l8rODKow3WN32kxHEuKWvHVIPbNuYXuNBHsSdsv5za4SO3vJ+FkQwoA7KhcZh4J18T8erwddZ5+BXqnhBqiSVUQaYtc0/MJebtQHoeKy1HaWWkeFMhMfrdIN4fXn21FesxbLACou+FKLrBa40bP+TAkyE+jMurdneYquSucd/U44I5bPGA+KfIjS5ogkz1HxD0ysf6uehqSJYkgv+ayrm813MxMUduFPdAxuMRqCXBJ2ciw+46G9DeQ3zC+T5R2XaP4NdtliD6HPEN51+ozfHCUlrp+TxJXg+YY6IuTWHCvN+vmboM1Je0v4hZlyttMG4AfRpBx+r0Q/NStoQo4J2lhLDGej5CyHM0yok6K+Edl+NBzeBeM4tW7E6L8zrFTGLb6BpzHtBy7WBTi6vR3xuKd2Ybcd8gi531PL6I7X0no6yq85Na5AMRTw78G/Us+Rw29Y/S3jOojCs6TzlNehw85FnUHz2eY7yBz1pYw2HMRRoRuqwW2O2NvPXv0O8l+gp9iGvrXeejQNcAVJStNwYM48EDwD6bGr6m443MZPyX6lFy5BjLsZu+YgCfqfHyVktWNOKRt5ORY7YCuIX8uoVCdnRdVFa++S4PQUWzPDj2neM15NzBXeBW9IjH51LAWhPbZjFB/abegvY0XDZfQvj/IWsb3KRV6LHHreomINpP+Ga2wrhnemxrmvlSrhgsycDur0qMsmQqvoW0PDMEKdm4xT9wPv46uJHarGvQUKUsOuDvQHI+iEw1hXObV/ORSp0H3mKStZOxSSzVBMcCNkonNMsaSqq+ozK1iXSCe5I6Sg2HRzp46VNeI4yE1tXYaZSzcpqkFrOvErjwNEkqoNKrX4Y2RjeHcugfolU9isPy9e2lnJOnSYoZGXPMFTN/g/i7Jsecq1YHm6SqFa4uU/hNZdVMHN6BaG5Lq59sNKZjKUEVb9vuMNsK/wCA9mjgZGGUScarY9DTzbICfX5n6I/+2HZMo6dLFAcnzBjnPiD2FNL0CcbLBQFzPdxoBLoCkjDRdpeINoOLbqRsj+NY/9c1r1N8DD7eeFAuWiWD7KCV35/cffZ1HjjvMnXO7kTAfFO0icRVvUcqCXjMGpDMWxK0CKCL6AqzS5eXDs3D4olgZOCvfy6NPnVbHS8VXcrzRqTa3Xv6FB5UXXRUsqFlwcRDHC6IafplTRbUvTcw7QnSzIyj5Dm0GzwWABk1r0G6YafWJ73h396d+kmjKI8myzyBKOfa9CYWnFnZdirGPwOZQA1sMnDQyHh5gBzjrDbJACSgOQnGCZEoUZsymdzfoCB4rW+EhQSxIdCfZEalKwGP1GLNMjDC7IcsiQlwPM811KEsPC3/l9T96jHgii9c46N5wgnK+yBkM4fpYcBG/3VbxrS7u66mXH7oTmq5Pzlb44txrclUAgqGJWoP/Eqw3bmR0Qp+7/TZ8MDLVlb2p93FZcUw5zgHFrZ8b6lMBlyoy4LKiHGk=","layer_level":1},{"id":"01edb04b-e365-426b-af85-3a82fd563cfa","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Instances API","description":"instances-api","prompt":"Create API documentation for the Instances API endpoints (POST /api/instances, GET /api/instances/:instanceId, GET /api/instances). Document the POST request body schema (CreateInstanceRequest) with required fields (name, productName, templateId) and optional parameters (gpuNum, rootfsSize, region, webhookUrl), including default values. Detail the 201 Created response with CreateInstanceResponse schema (instanceId, status, message, estimatedReadyTime). For GET /api/instances/:instanceId, document the InstanceDetails response schema with id, status, gpuNum, region, portMappings, connectionDetails, and timestamps. Explain the polling pattern for tracking instance readiness from 'creating' to 'running' status. Include example requests and responses for successful creation and status retrieval. Document error codes (400 for validation errors with ValidationErrorResponse format, 404 for non-existent instances) and their JSON response structures. Address authentication via API key in Authorization header, rate limiting considerations, and webhook integration for instance ready notifications.","parent_id":"c5689f41-973e-4c47-93d2-7b57c1521c20","order":0,"progress_status":"completed","dependent_files":"src/routes/instances.ts,src/types/api.ts,API_ENDPOINTS_SUMMARY.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:27.139687+08:00","gmt_modified":"2025-09-16T12:34:32.81019+08:00","raw_data":"WikiEncrypted:H40IG3QTETlFfL+Gte6dXkDYw2w9A7NZ3DbZVJbOMex9BAETbtIrpGgdodnJrOu9EDXNNsGhdMsPeKwLnaBtd6q9hunntpqyMZi/KlogxPCOK9+yjSKPH4N9fgrq0/VOdMKVujTo4hB9tJQ/ee0gXMq6qEro4S07BUd3lP3fc5nUPSVfnKkY8acrj1l+WpsNR3SmSY4ncTt2GHnZceZByu61Ns6kePX+6BGZE1nMwR5QA9tgUfmHY6IxkpTO4QXauj5d2DqjX8eY3hw6bGH8pCR2uzpVv6BOtmrEiuZih+cDZFJDcN1EsKGnxsJm3NkXNIIAqYA0d08FONqugC2zaT4DxtZ8zzQy1qdYd9m+Sudb56a9c0qE8MhV2L/evaD0aepObWsnFPAmll/k8gKyP8P9zRSxEKJ+NlbLOC039Eg5wxWji9UHLOXZExlYZOFLj1B9oV8WwnDA2ByiKoN5IMAg1khRpwvr7M3H+dcZh8xOPzQaB5h3KcPdRopGrOtRvm59+XfmA3Ce6CRRokpCIKDE8kacF42oxOiaI0qKee4WqWKV78d9R49BeRF7JAyXalJvAmGV6O9GIFMS2yb0RqUmte9m4QZiGi29DuRuUwDrccv75AOFAemzGHn39qXFVqax/McVvz6S0OUZX1bWK1ZO1Rio/eaQnsJUBoOwEh0hPDRhVZGpC3Ki4ILIIeQIlv/cmPZyVgItWQbody1HjdBZG0fuoazUID9BQM7uGe5w/i0uHlpvb11zsvA9hsc9GMibFP1NaK88loQwC5l3Af9yhzZYbdVbZWM8zb5sQbv9DNrOTeN32gJMfbrtkS85htBDivhyvqRFYMd0CVzYAzO3vJjp907bEuhQVRxgL2MClV3uqC0kYpczKAkONYeQlRwYfEeRRtAf0Scg/jJ6TA1Q4KTNt7SSzBD0MDWcq3XAm59QZ2S+oclzx++hzpNLDc/RjNtZCr1GIu7pYeSycDLo7tqyQThcgCPYU5u50IJrunsDFglQb6yVTRmpWSgMS/qlpLCItLsW95Ap6BYqlhmVYpCsYr1YE6wvwbURDKMYr+Qa3c+EzU0clu4xWv/zly2+2HpofytaTApflu6sALaE53J72UXdIPt3DgjzXyQFvc9ThhCFe4GnrWpkfi+t0CYXPoRkY9ZT8yTSHzFnKNkdyc7cniDxMi+GBV4wUbmwYBFpOsx4nqLNuVloU6OqdacOd2kB3RyhlFd29NK0ZNUW4aO6faj3PDx5n2iRI6z0zrzfKN5Rj6nTG+6OGKiE+FP20CgrDLig2PUm6yMZZduG7wNRiRC2IozPLMuozt0s4piAwFGBPMtS8nnx0F0TrCR6u8u0+pZNRKOVjnXRdAt6iSJOiQaQ8brq1gcVgceh2D/m4FHn8s2t/NT9aAuCv1PymnnE6rcLjO3/HcbjMVRg/Z/oJA7pSRPMZ24meE/OwmygRKFPu5e4LUYJqNn1RjvtL4ZoFj7W2Qbe4sH+onqxTKEdZpXnrKBS9C1uKMfbyLajeNnQFkK2Yeh2/ewqqMsQh5HtL1BKcYcpOE25hl8U2xHciMRz8YARnjf98rr5B57qPK7fdotngJfFZ8La6cYEfeVwrG7qx8tbfL0NBKt391iiEJMqctGdyTlMH89h8m/7plG0aMnbECMoteQTFPft097Q+zGY05BCVhzgm/6fOe08LiPD+4gJuilcJeN5e2VSlQthG4Ym6fHWA41YRoU3TstiJXrln/t0Bev8NZyZzZYvL3mbpxigK73R3It6Ui+vtLF72B/FPlss5jaTvtrstobwB2aVgp7EL088Zx8SEq/DN0xb8hLm52zxi7v7KcmbPF+CTLutYd2nXDSNA31C60CS6bLYVE+b4WbGTg==","layer_level":1},{"id":"cfcf129a-fd8b-4064-963c-76429aad3355","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Novita.ai API Integration","description":"novita-api-integration","prompt":"Develop detailed content for this sub-feature focused on the Novita.ai API integration. Thoroughly explain the implementation of the NovitaClient HTTP client wrapper, including its use of Axios with request/response interceptors for logging, correlation IDs, and error handling. Document the circuit breaker pattern implementation with states (CLOSED, OPEN, HALF_OPEN), failure thresholds, and recovery timeouts to prevent cascading failures. Detail the rate limiting mechanism that enforces 100 requests per minute with sliding window enforcement and queue-based processing. Explain the retry logic with exponential backoff for network errors, 5xx responses, and 429 rate limit responses. Describe the authentication mechanism using Bearer tokens with API keys from configuration. Cover the service layer abstraction in NovitaApiService that transforms raw API responses into typed domain models, handles error mapping to custom error types (RateLimitError, CircuitBreakerError, etc.), and provides methods for product filtering, optimal pricing selection, and instance lifecycle management. Include concrete examples from the codebase showing how getOptimalProduct selects the lowest spot-priced GPU instance and how createInstance handles request/response transformation. Explain the health check integration and monitoring endpoints that expose circuit breaker state and request queue metrics. Address common issues such as API key misconfiguration, rate limiting strategies, and handling of transient network failures, providing solutions and debugging guidance. Make content accessible to beginners while providing sufficient technical depth for experienced developers regarding fault tolerance and resilience patterns.","parent_id":"2b660a96-0bc1-425b-9d17-8c19a11d22d1","order":0,"progress_status":"completed","dependent_files":"src/clients/novitaClient.ts,src/services/novitaApiService.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:46.413371+08:00","gmt_modified":"2025-09-16T12:35:36.225907+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"6dd4bedc-a111-43d7-9e22-bf9b6c017bba","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Instance Service","description":"service-architecture-instance","prompt":"Develop detailed content for the InstanceService component, which serves as the core orchestrator for GPU instance lifecycle management. Explain its responsibility in coordinating instance creation, monitoring, and termination workflows by integrating with NovitaApiService, JobQueueService, and CacheService. Document the key methods such as createInstance, getInstanceStatus, and terminateInstance, including their parameters, return types, and error conditions. Illustrate how it implements the instance creation workflow by delegating to job queues and polling mechanisms. Include examples from the codebase showing service composition and error handling patterns. Describe its interaction with the routes layer and how it transforms business logic into API-consumable responses. Address common issues like instance provisioning failures and timeouts, and explain mitigation strategies implemented in the service.","parent_id":"5cab9a17-b1b4-4ac2-9f23-da0cd91f3586","order":0,"progress_status":"completed","dependent_files":"src/services/instanceService.ts,src/services/__tests__/instanceService.test.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:53.55555+08:00","gmt_modified":"2025-09-16T12:35:40.310512+08:00","raw_data":"WikiEncrypted:vMsgMax61wW2sTWhXd8DHxBXo8d7ogNpfhiMp1ZJAv+oZ/4JKAK5LNtNcV/IUzW6idzTdrf5qK3zgRYIXdVZ4UBnmiOEoh+bgj9QuW6FZyyFfyNIi96lwA7XnFZupnfueNiih6O/w/+Wc9bhOjQNAvNAHUSMdq0KXf6ao9f5CCePxfP6/ED/Ntp383V7Ue1r6dJJ3AUziGv77veqgeMeQXDEIfAs8JJqkjphYNHuDv/KfW99TBE7c7/vxN7Z7ihQ1E9PSjpxFUh352amkVrGkEkNqA8ULC5WcM5bozUswHUN0fldCww9fFOudpz1dQzRQOrIrpggp/Js2XT60aU8pLtkOsKwT67jF9ZSjF0S8NkN48Fb2BVM4byUz7SkOINzRTvY/W5MOSSZi2RteOYrJewqgtZk9nUgxsn4ZfwDAi2ASZ0AmkBA3RfD6mtFpIhsEKasUiKZgjgGd09fBa+4DoCrARZxQpH+Flxwij+qQN88I0GGPIodL3mcNTZHeFErcoa/SI9xLt3j1VOwp0ZYau5jZ4BrsZYoAA3NIJCA8NFq8w+oB2j5iG0spB5sXgK8wqaqqMweEJgZAAeX80ciWA01eFJfIkE4R7bp8YZ90Q9PKnMA0vvTdtK8Uj+oQurR9pooYWsjL/BosCsK2HU/xM4pEBxt5HM0nEvNKUnq8GoOE9LaSwK2vOxwnP3v29M3S0BXdHYS1ECyjAn0OSraGLNzuBzzBtnVSo8sCU3Retnj7ur6+Vdhh/NeLnKiZi/aDVokFmxXUtqyx8y80IRpqrB+SKs6LAcnk8hn31XWP8ri6LfLF5l3R6CsyjSjqZpfcPSfKHcUaLBAcjhZFdzLLBB5iG6sJyJt5BQwq1KCRMKOjDgHRZnxzw7X8sGYOXoK5lPuzSJ1r7oZTM+Oi1y/9cqV6WeGoHk1LJcXXK64pODJd9CM02eyVjvKK/aCvEizKYo65cru3jj9VekiRqyjEKVtwI1DNd5daccUV2cN2sElXQ3RKcL0vKCD9fapdjvcps9ArMp/aOWCHgL0e0ckBa8JGWD8JwjL/NoHnwpTyyORGIn5mXUM+jAKbWDdwEocMcAFT7C6xmLPqICjQ6QYRVwRcI+WY9xUh7+fIohZFoTARzlrDYXvC/OFJturnR4kvaaCWVg4FYrcnZpksrJOD2UnJg+S9bG8RURS+P2zg2HSkqHgIwe3FW9oThEYBtUQHEeuYAZol4T5e8wpYpARZPQfqZMZ7Sa3bI1gMtzs1UhETXeKsWR77VtOkkGclU35qxSyCv7rYxm0vMhdmGvMXYsZx1VI78WX+7dg3ntbUqYfr+DLwxGAaRMo0hhETJkWRX8zCQ64xqNHFtSI8+7ugenSM4apHC8pchRW8C5XbQoWRWO0vF0QXmJIw6OftqdfYb0YrODr7xK7d5n/CHA0zBcujjEfZf24fYrPUlRms+oeIHZnqV07CVEyyfO6JZeLPXHHdhBTk+S8TXjt+752T7SvwB/8Tc+EVhYwfqt9PtN+cqEou3hux/d99uYRUTi0xFA/ZW3vQlu6MrxlQUXGPVwfzA1LwgppVHatgmpX2A8zsS32KgCBTcDZHOyYAJHtyoXsLDgHTJNI5ARi67L0YHZSOVGnTJ+aDtx/EnP6UioUzE4rgBpTVEHpTRo+OLYs","layer_level":1},{"id":"7525aabd-1da1-4ff6-8725-0f421eb1ae0a","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Request Logging","description":"request-logging","prompt":"Develop detailed content for the request logging subsystem in the novitai application. Thoroughly explain the implementation of requestLoggerMiddleware that captures incoming HTTP requests with correlation IDs for distributed tracing. Document how the middleware extracts or generates request identifiers (X-Request-ID, X-Correlation-ID) and propagates them through the response headers. Describe the structured logging format using Winston with JSON output that includes sanitized request details (method, URL, headers, query parameters, body). Explain the body logging conditions that prevent sensitive or large payloads from being logged. Cover the response logging mechanism that overrides res.json and res.send methods to capture response details. Include examples of log output for both successful and failed requests. Address the performance monitoring aspect that detects slow requests (\u003e5 seconds) and logs warnings. Provide guidance on configuring log levels and sensitive data redaction through the sanitizeLogData utility.","parent_id":"b51b9a62-2012-4de9-b4aa-b48ed1824998","order":0,"progress_status":"completed","dependent_files":"src/middleware/requestLogger.ts,src/utils/logger.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:25:08.684294+08:00","gmt_modified":"2025-09-16T12:36:36.483002+08:00","raw_data":"WikiEncrypted:ZGBkpWf02wc2udcy/W652mqSdTciMiCTzv1gpO/57ptu1dMhTiPn229ISUrYqC+ggqzcTPgZ6qy+8gTD3xgMbHvegnGUeagoKF2YiyhxNcEh4a0IOmb8HzPhoh9OEb28JEmy7UMsj5ihskMRq509yC/t7GeaCDAHWsFjmtkC5N+GCOGU2mLgVW1L9P9IBhppVLFsCR0H+FQqWFozh6o0EyeQj+8/s+ItQPZi4aVma2hfcmDdQe1NcDd65hQKjAuw2swMo260drM315qStEq7qOjs59ICWe1XfAAitbNgWVIMmQfuDjvpQ5jxSPviyxIytNTOB003WI+0ROAlrgWu9ku0EyH7O5++W+sqhiYBXsxZW2Fp4UH/6yVg3lVcTbFEGHfLBhZnVNU/slN579vokIiEFXWk9LHJeUVSns28ZZSbRFHg40376juI7eSUA6roRqVfOjCko/xdT5KVM1cU/AAmlDEA7EIYIRFoIVLJwK5bvZElvFD7PtCJD7OFuXlZgDP/ikcJLpExyWaRYQXUe8LgSbv7Sq3Euz0XEdL29OdZsAy5tn/qdbe2Z4BxCY/TN3iGHO9azFF1pL8VaaPpSQwU+oHJOhrQzQg15KyOHX8qh6TG1V3C4c4SkUPkHokY7ADC0MqXu9blrIiULp6bdKd4OdxXE/b1EEmidZT9F899iTewpCffWeGeVr+/BFHIg3f7Xy1nCyh3FCkjyLrG80a339qrzgzUBkPI/I7XQ3LB4BOvxVwi7CalEJjPYmMsSorkvmVosZidjR+B2d1I4FyKNTJUqnyVlRxGwvOibt/q3/AEA3cXtuMICKpxXWrPOSYxIuv/lXRUP9ecQZWOp89dXti4WhPaJY0xLwVe/KO9Sis8cDheo/0od6QKAyorhUTTIFEAkYfuY5V5tJqZQf7kr/X0sF5bY2zLl1IZ0mPiWucFK6swjw9UIKHNEFMqWPahlxUjyTCT1r93hvIJWZIEBLs8CCiXpwHA/m4B/f2uywJ9BNNeHRz3JqoWpGAVr8AgSxanQMua88xnuIoOhApHC5fJ6CUDQ3anbSBN27odtDcz3b1viYg7rbQpehwA+/EAqFrxFKdOi9BX8ADUIEuPSZqcIxNM4E6v7chm+OmZs2G2Lmk2oWqUBkm62hVuPRYOopOvVCjH1gIwwxxSg5iTDRLJhmhKoyTOOWru/k0acRrq7R7EeBwCeKjRvKc4dWGBvjf8Fi7sn/n0yueXzuMhAa8mFVlNFjZhU1C05dvOn8hKdDPy273TobKCaE5pRBvJXI5YYOAX5JR6M5ryd2+vrLyULbK+H5lA68OGE1PYx/zVa9HforljAAtW7okcTGWEGZpYMOjHjtrIn8FXBRtkayREs0EEeDuPgkPHxobXVHreWOTesXbE8maMELdNcULmhcUWtMx2AOZZkHJaPJQiuj+B8gMiUFYCiJ8N5mONJOTsUJmqn1Q7n+KmBtpr12CR+U41DU/lKaYrTuLLz2Wf51QIhq/uM/5SM5Rx1+EEISFQoJd+PnZCOiZ5w7ibM/s/AoxY2tTxZj8TEIYU6Q4GzM7q4t0bAf2gdmEiywHScmCclwl928X8WzwjMKGsUA+RYtrw8ErehxRTJAZA650zEYGjqCyG+/eHj9Wv1AMEHmyj4vssISvEleAu+GVRhOV0jRaJWN/DwWfFwVLSp/zIAOQLIKe3ovrenmqSOc+MelfBW78sq0OpyYu69TFj+T0benbAInLyEUSug4y0FcwMYW7ONGJhuRw0GJqF/wo=","layer_level":1},{"id":"cc684cb9-6a9c-4fd0-9f56-b4e77dc04bb3","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Docker Deployment","description":"docker-deployment","prompt":"Create comprehensive content for this section focused on the Docker-based deployment strategy of the novitai application. Explain the multi-stage Dockerfile build process that optimizes image size and enhances security by using Alpine Linux, non-root user execution (UID 1001), read-only filesystems, and dumb-init for proper signal handling. Detail the differences between development and production build targets, including resource allocation, dependency installation (dev vs production), and health check configurations. Document the Docker Compose setup with service orchestration, network isolation via novita-network, volume mounting for persistent logs, and environment variable injection. Cover the use of override files (docker-compose.override.yml) for environment-specific customization and docker-compose.prod.yml for production hardening. Include configuration best practices such as setting NOVITA_API_KEY, log levels, rate limiting, and resource constraints. Provide examples of customizing the deployment for different environments and scaling scenarios. Address common pitfalls like permission issues, port conflicts, and missing environment variables. Include performance considerations for container resource allocation and security implications of each configuration choice.","parent_id":"87a8f9aa-9481-4113-b82e-a99578c1325f","order":0,"progress_status":"completed","dependent_files":"Dockerfile,docker-compose.yml,docker-compose.prod.yml,DEPLOYMENT.md,DOCKER_DEPLOYMENT_SUMMARY.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:25:15.30156+08:00","gmt_modified":"2025-09-16T12:36:41.583974+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"d0699111-d1ab-4038-b737-1aacbdb1ec44","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Node.js Client Integration","description":"nodejs-client-integration","prompt":"Develop detailed content for Node.js client integration with the novitai API. Explain how to set up the Node.js environment using the provided package.json dependencies, focusing on axios as the HTTP client. Document step-by-step implementation of instance creation, status polling, and webhook handling using TypeScript/JavaScript examples. Include code snippets demonstrating proper error handling, retry mechanisms with exponential backoff, and secure API key management using environment variables. Show how to parse and validate webhook payloads with signature verification using cryptographic libraries. Provide performance optimization tips such as configuring axios with custom timeouts, connection pooling, and efficient polling intervals. Reference the httpClientExample.ts to illustrate best practices in HTTP communication patterns. Address common issues like ECONNREFUSED errors, timeout handling, and debugging strategies using request/response logging. Make the guide accessible to beginners while offering advanced configuration options for production deployments.","parent_id":"af30368d-cc3d-4dbd-91cf-b485f925714f","order":0,"progress_status":"completed","dependent_files":"client-examples/nodejs/package.json,src/examples/httpClientExample.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:25:25.498538+08:00","gmt_modified":"2025-09-16T12:37:34.336346+08:00","raw_data":"WikiEncrypted:z0sNrhjGf4XksJp4vEtMQpOYX3IIcmadVBHeXyGVvczARaGzJugydcX25zC30JU61yCRJk1i3x0w1qtLW8n9jM1qJQ1NW1B43vmexpBosvHiiNNn0xTsF/+47hPKJj45Q7Va8v8yyYOijUborKxCVYDxwfRjSf/gZ1ibrW5tykIkummFPCLTYbm6/2IEH+w9s6rQbBbAz9BTcX5J4192bmgX0zdDMVSODqQGdEFi3RRo6+o3NzlZxKHev/TOrn8CCUddU2mz0zO4B8qcKo2qSDAytlmA+2QDXMrIAWN6RF9iPPkksaH74Mp0m8dyuWgc8I4p9pijp4cAcd/5hTMaL8jAuUZuFTdczFw2J67LKQxQdelDREKlhW7AVD95R9f+3mpLnE9oRMvTr78aXjRrdhVV9t5a6dz0A7Ob8nrVN9v4W05tu8Ik1AyxWW0NlYctYreKrnDgcP7DxHI1kUXJ93ty8CSHIzA6xDa4KDEEqKwLbVExGin/tN2XlMpOtFAyP68KqFz3o67V/2L01gCrMq8X/sZmMUhIcWralIF4/IGmI6qwlN53UawwqZrWc08+Ti37+xfF6J4Ro9R03HeOooGPmHgy1nIT2aoNznfJ9nfB0SBM8rw1pRI+Axuph93strmigivXWXgT0d3fkfaXSgnk3dODoJsgNPpRrSPBgSNEAQk2QpFKIe0jI5zl77Qj+bdJOjCuD9qbzIOY6LICNkGgywezbpDYSbPeDYDkGTvXqlAPZeZIUmkOxAzabuC4z4yR2dv7lRt1Ye06Ld81V1mj2hXL02PKUKMC/MCZ1xvc39GYu5/zD00UFZ58vPaqIFQPGllXBY/MjQ30Q1PDwPATe3VzDNELPs6v48fCGN2rLGmxkM/+mBw3PRh1tA7mYKLwdRCA2mkxW3//96duAK+ci6Y5RTzA+Zhn68p3MYmWSH+/HqTzXbPLwJR69SAWLC/RHNVBOqwWBMibiZCTSCs5ncPJk66dco3Zf6hayweXj8vB0k5mCTXYZhwcqSL4eelUD5DwS1WzVdRISpIZ6vs/9jcyN88RDMB4Cl8dSIqt8/AQs16ZYtVBkkLr3LjfK22cqxvxlHxuIitFzk3z2li3I1T2/MfjaoNZ5I5opuWtZ+0/1fA4knkMRmk51/+iJwyQegJoMEBYoawK7ovM8W86XnlkXgfa6p17eaqikilIrnMZt1tOWzatkbkp3DJzwah/2HgW0fE7AwUBfiRd3gJBHWdrduEB3Aqz6xufDhlNavpGywmvUwDnOhcikYGj1XeawrC4L7giD0N/eYROYyo51nYNOZRiRlxzb0km4I3R3OZtM0JeNMNAMQmu2UXcjnu5SKaM0vatbTyrmV75GF7SBYIMZKz5JxM42vmrvWbk9A/tZJr/N1FmC3gEsIETnJMoIyxGrKphJpGeegdqQiXHkrsoDvc0QYCHg87zZuQtC7IW4yN+gF59JZutuS7yf5NaQPnBlaE+LKzCT+m1jVVCjchR8FdON+6iwfNAkKpetqI4bLnQ0O0rSJwG/Az5wQjV3wPi/3oUtX8V7xaRlFRRQud7oAudx7qk5cqGcacrrpWQzZh9oXBH71i9yru3ImYWYq7euAngHPEKXhVF/Y4+FvDvqAbXaTPrh8R/kbPixXaMrdDSYjjvMelVM1hH9tOikg0W8RoqXiz8Uy5AurDOuFZtrNIvXujdJAugzjwJe6Nbdf57yTUCNaLrEXmhlzpDez9hhiAg7Xl3VP9hIiSgZGJjkC0foZivVW59N/F4N9Vj8jWMxM6YEYAF4mhfkyW6sMXNfCFjreBPtU8dfyDvWTqvLvYCPXesPMk8kR/RCkadXo0AWvAGX8qkls/LmZuUhheVJ6pqXT8eCZ+LVw==","layer_level":1},{"id":"9f285980-4018-47fd-9061-20ce0504dc4b","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Getting Started","description":"getting-started","prompt":"Create comprehensive content for this section focused on onboarding new developers and operators. Provide step-by-step instructions for setting up the development environment, including Node.js and Docker prerequisites. Document multiple installation methods: direct Node.js execution and Docker-based deployment. Include commands for installing dependencies (npm install), building the application (npm run build), and running in development mode (npm run dev). Provide detailed Docker setup instructions using docker-compose with environment variable configuration. Walk through configuring a .env file using the provided docker-compose.example.yml. Include instructions for running the application in production mode using docker-compose.prod.yml. Add a quick-start example showing how to make a test API call to create a GPU instance using curl or a client library. Document common setup pitfalls and their solutions, such as port conflicts, missing environment variables, and Docker permission issues. Ensure the guide enables a developer to go from clone to running service in under 10 minutes.","parent_id":"","order":1,"progress_status":"completed","dependent_files":"README.md,Dockerfile,docker-compose.yml,DEPLOYMENT.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.47909+08:00","gmt_modified":"2025-09-16T12:26:12.276413+08:00","raw_data":"WikiEncrypted:qfgbutC7oyxR6nMxrwk1ODnNMBEQ3/sG78fQT1yXWjspqw7wFsgcSykO0UmGZY8QTKN7XNoRj5gLcQItLpCOKXutiG+6VCjcMYiCHQKLTKGstIocnD+drZykUnC9iVE8EFODRj6js1Lom/v+BBqXTiXFYz6qx+O2PzxFADutErV0DPTKueIzKxjiKF4o5CZaxV9L0VF8W2IPsIgBEgZ+3qjl4JgNxUcx5l5YiJsSJvcOTje5EFKXpDsW3RF5/aFDGDG66HPz0F/yHIsHxsSL83r8i/WAxd8Gz/WkfMO8orn8PrYDAUCQZVs6/xmcvP4NtA+//3rTtps7ZyXvQA+YHQonx9oOOP8z0L2dPzCg3trnFENu9ASUiFhye5PwgU+dRhTHr+jhCiZyMTulcU8lzDpZj51oLQLHVnrC7QMK7kmdIvvZHDRRG56iKl5KhpcMuYHlq4yDpf9bGnkTDB5/D45hUq58uPXQ2H4NtVaPOEZBZ00jzfV7ClktpwXQPdobFmMkYCGzORoyo46i79nC+gvm/5TjLxcwt4hGYFvfDXHkyPvS0iu7QWFcCg9mZWlAF0a1fDY7VqQ2QchwvEEm8+nycV+hcNzKUXn8VJHAeiD34MrLtesuBnqSgTbNAatUbc9ZajTrQj6oe3797081OhmTdNrZ8EKpVw1/jnjnZDWEL2sYJ1L7BHgdUuChpjwkh3/BeWhnKUmSkQai3WV4iJtDwqQlc2Xy6Yzw2kZgvKKhMlrte91cg5UySSRZ9VLViT2uS02v6X/4QV+OHU+lpHCwsSMkyJbkh5XeiL2AiQ5P2+rFDbGCOipPucUdkqjciK6b+n1bAAjndn3NYrbiC2hS+/DvGZdGXtFMasVKicMYk+NN34fJ7XzknnES/wvvPtJGcEtoFyoUzkEHgQ4IST5TiGfLTsflY28K2yKr3hNGSXRCswpMbDL0+iwjaBYW+Y0WIo/Z5dOn14rMB5dCqfIL8nZKzzh6oh+HcTc3vFXWVKOJzETa9vcrrueCudjWmSzI7EwwdueSLBvTCwCjLXP7d0GvcwkyHksveuAHYBsgE+nnlajI9AgDKco/Al6AoOJqA7togMTuyiu75ajAMW073qfBZi1uctHfqSofNtCE4BAgMwhmU6USl7sq6E7Uyl065hjxmnAoJ4gH4CP5vtBDTidaOoN5AWrwrbvuWr2dKiNT8Vh2ujXaRjOHYKjp/UYh2DK8h498J5ChzB0YqCDzeED8d5LP9JjI6UWsb3ammjtYa9gTVvw9nuV/NBCoMBTfaQX70eK1voV86es0VkZWOrzq7olFJPcJxCAvPnhxXitknAW+AJb5C36+E8jUEgaEuMvN7cvncaQmKBFE75bbX8kOlYEFeI5oq1+53sPUJdpLlDezCDqeK7i8F7UJCHS7SglYtK+PPjscMVnN6lvKmpEK63RAaSf+KA35cVAvny/E4VjJzvjTZAqti0GHnnV7cXR9y6rQ0Mwo1XVaobhDI4b55wUmUrVQYGqIpzwKdyPzHbv71q14TGOtPZSkYA191n97nN3qyGgilcnMbxVJyaw+w12G8CZmo9Kd+gT7MptfbSnfvuqRnWv7I1f+2QhuJRcaXcQZHbii7x8A8ON3I1v/K0z2NjKFzhRw8Q4j6I7/yRXsjPh5VcxcSB/9TpsmJ5V5rz4nN2NOVPNPyztFlFKZMCwkeyMGJT5rTz/3Yt1WhqbQGSoBRQWKAO4PKjGkXPElQAqH/Ydc1f6De5vi2R3OKnhzrnQOb6rt1Vzk3oBlnwV5sMJlIIpAJ1J0UkqzW4GH3bR/bsj12japGT/+qxuXXRYZIOJMD4cni3SpxU5SGtW2r5NtQYHimM6sJ458vQFPKKQ708aUeldqhQ==","layer_level":0},{"id":"954e6bf7-b6b7-4e03-bdf0-91c7a6667e51","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Instance Lifecycle Management","description":"lifecycle-management","prompt":"Develop detailed content for this sub-feature focused on the complete instance lifecycle management. Explain the state machine implementation in InstanceService using InstanceState objects stored in memory with TTL-based caching. Document the full lifecycle operations: creation, running, stopping, and termination, including the mapping between internal status (CREATING, RUNNING) and Novita.ai API states. Detail how updateInstanceState is used by job workers to modify instance state and trigger cache invalidation. Cover the implementation of listInstances with sorting by creation time and graceful error handling for individual instance failures. Explain the integration with NovitaApiService for start, stop, and delete operations, including error propagation and status synchronization. Include the cache invalidation strategy using invalidateInstanceCache when state changes occur. Address reliability concerns such as state consistency between internal tracking and external API, and the cleanup mechanism for removing instance states via removeInstanceState.","parent_id":"ef82e9a1-7273-4190-8ee5-1896a534f77d","order":1,"progress_status":"completed","dependent_files":"src/services/instanceService.ts,src/services/novitaApiService.ts,src/clients/novitaClient.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:23.927364+08:00","gmt_modified":"2025-09-16T12:37:23.159155+08:00","raw_data":"WikiEncrypted:xbmA/Un8S89yBKRMe6iygmPunGjAmZt5nR6C20hh8kDF3CEQsQpBAIOk8Y2f9NCignrpkGpAYOzqNNJzlAMvOFVoLG5obZC7uuXnM8y2hQY3idaB5t6dU84EbDoEZ+Aw5tfgSSXONCdVhnjpnE61b2x2yCYcMKlTVDfcW4vnWbkZkQipfo44NeInxlQlz3C0KiHWSD4uAqTkjNJvVzyLdimyunLZITOKcP3DYJoJDIM9Z0Ick4OyZpbt6Lm/Zi7cCVQZuuoEDYyZtWzPHTp9iWLnFpbSBAf1Wxa8t3JtE96qEi+pfmeVQmAPyT8qYA0Eo6eI7ehg3a/h/d7T2k20JjoEjLkey//SZyuEEFDx7WDg2GvsI8HCE5kZZ/bGOuHiPDPMCTt0oAWOlHlToxVDJTMgNoCzbb7Uoo/kvbumXxsHtUsAlPgi1WItLa6AlQWZqEz+/lDN2BusOVcufeazMqYgW9+IDF0HC68+RZ4MtKsXCwZnQt3vt0hDb0Dt5AOBMfdIM2XoLZsHdW3HkpHefRD0SdZ/KEkXMCUALExN93nSSM6huz56pPHzqfy5PiZd76c8X/XIsdiJqHlW30iebebWCNr34yYokQyP9FMqxeZjeT33AjLk9rod8DGA751VQoe8ZHj8T3Rl9ebGwK1Q5HLuhhJ2qPHrMHPBweK1y0U1FO4Kxopy0zmxx05jtWfl+EXtAVPGVGuiAWYiKrhifbXCsLZXNvVxVm2ZYyXABmI2Y7nSpHPckrt0WNqQTFneJ8nEYuQqE28yvxUJrxcwb+cN9ZTY4EkMu/z9Yc5cbjmWOIe1XbvpfyD4/T8u1iUEWoexWGMpeAMPyplajejbo0/q8PDPVKNBy+EbEzU4RGOUUrfwNpeUOoEcZptcbIpCGlSdEFQdyjmOBj9BeQb2SNMlyHDL8KifEVnJoOhK3gsWTfvY6fh2fCws40dNr+UZ/Xm7ji7OA5qLq1S5+KnHh624eW0RshYF89OY40RBZRJ8A/0OFKXO2nnhSAjB/6tbsoB0VWcA+boPhlXReKL2vyhgKssP3NCtw5elOvs6LZmPJa1Ug+Gb5f6QBPMbB1+XuC/pZkbFNlnsV/m4RNWAG3efWfiI4pu5RCE9OTPt0j7t7eJCFuUMgArKJqqJS6yMSSxGyNSQXiNuXlhtO7S5w3RgtLxf3kYC5bhrX57Wqt/qtEGDI76ookQki5naOgOhgOXV3so6yEk3Yv1Yn5fsYnyTO12bblBYuvrTx0SUnfnmv4bhuqFqE1NxMMQ2WJ57YMOaCo295dcr8JHI6bfwSBrhjrmd4CQ5OzRS54m/9e11sc7/MVxLFw7f9qH6+tsrqzKmzzT9kgljMqMRukSsHMJtbQpBgnEFBhcDx6cbKwPr3EJGaL+S74z+wTvWaCn/sXatq2qZObyyPwFd3zFgBm43Qzbv29dwQCtsUqYseXPigbMYIQwAKhNWNtLb1HAJqD2bLAGgza368c5dst4B+SxmMbvy+1Un1tDj0cIRtj47fRPotj8W8QCAd40j/HqXBCLdYOH54vm/9Ys621CLXJSlcpgY9AyIv0V7+rz7poI2VYGf3wadT3ojED+ukcnoeFKWLRHnkqS9/XpA96nhyAhu06n8gPbn6VGR9b5IVChPcuPHJtV3e97WJx9AdrFROefdSn/Q7hfLKhYnw62IjD/w9bofnhnZfvDLbuFNF7VdBeFiibjViKX5Bg64DjUrj6yC97ubrJFsQmRAsTvrFMHxpUlCRymJw1thC+X9z4ZlEwntPLRNaiJ7eQq9F4YJ4r2R6+mPhRzkNGSj8cgyifmQFwZVsCLkX6DkyYe01PBQi0rLVJaGG01/mv+MSzSsLZPenKHRyDjpbTVuEhY86fJlya2dGZWifQcjOHp6Dx0=","layer_level":1},{"id":"5038fd45-7e7b-4d50-97fb-4334a3460358","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Health API","description":"health-api","prompt":"Create API documentation for the Health API endpoint (GET /health). Document the 200 OK response with EnhancedHealthCheckResponse schema including status, timestamp, uptime, services (novitaApi, jobQueue, cache), performance metrics (requestsPerMinute, averageResponseTime, errorRate, jobProcessingRate), system metrics (memory usage in MB, CPU usage), and dependency details. Explain the health determination logic: service dependencies must be 'up' and memory usage \u003c 1GB for healthy status. Detail the 503 Service Unavailable response for unhealthy systems. Document the timeout mechanism (5 seconds) for external service checks and debug information available in development mode (version, nodeVersion, cacheStats, jobQueueStats). Include example responses for both healthy and unhealthy states. Address authentication requirements (API key), caching considerations (no caching recommended), and monitoring integration patterns. Provide guidance on interpreting health check results for production operations and troubleshooting.","parent_id":"c5689f41-973e-4c47-93d2-7b57c1521c20","order":1,"progress_status":"completed","dependent_files":"src/routes/health.ts,src/types/api.ts,API_ENDPOINTS_SUMMARY.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:27.142698+08:00","gmt_modified":"2025-09-16T12:38:05.703618+08:00","raw_data":"WikiEncrypted:hgeCLRgknFfXxBgFSS/77H5mOjF6F5Lgv/d6NO3xEDV6deEbGSJJ47dlh8XUkBnlfSgACjfk6SBi7lLvmRtvW2YQnw2nwlkrWKP8y6H3b+xqG2zJIV6p82QZ9POnrQ9zBpM0eGfV95pTE5/8hkG0qm7mIt2h/dQbXtrKySIWGIEIKBg/hgAhXLODWjqKZsy6PTcmHAACr74jnJFJ3RjVvoFOu8wHsKWcvpWh65p+oKVdbV6RqD4JsHFxqKb0VssMGTMmT7MwkbjuIYFfQ2ZYMWVkMmDBC8Ugw1M5MGqzgh56xnsjdlXgwFYTnQbECK7H8fJtEEdpXloeY+h5Sz06nXm7fyo6AKscg2eFcQjjuC6R5WcpPPFRYqNEFbxzp2TqtiD/flAZkqzwbbYzHRsbhPcIRFG5H7QAegzPj5Ipu0dOHMVin42ZK6YWLNleWG5uBcxZc127XhfrDUqxdQ1ck9Kb/lKJCjFmNK1IqHrM214p/2fTBALs9KdV5J/EUkdty1H/QRP0Dw3Cqb0WX8v7VT9fZkNIF9YoCuvZZ5ZhRjFF+lZ4uruXdSwtUmC9kqNlJe455b9m4Hq1+KJ8/+GmywUp97UPMpV5b7vuDF9nMKn27hk9uU1Y4N326kPm3CKb4baZoxMq+bZ4WQkmdYjqF3iBF/5CtH6Vjtgj+hoNpvyI/orxea79xqUYF316glb/dvv6r65hllvvmBcHQqPzcgt+5QWV5Cdjh/hW1rLcZQl7OTKzVV9aKe8qBRX4prc8FE22kR+pma0g10LiECqwG3SOv6yP7dDGCyU5ubdM0tP4WvG/ZJ5uHLIcygImw7N93c1g+KItWX+4pZEIR3HYLReFiDhBBRlore1hCfHGHP7qisxox4GswO80etHCBX4I8jITDVuOunaTyQgo6iz1JdvAKM6O+1CvRi2LJxBeS1OXRnyWvcLcE9u2q8JmTPaKvaeIm2Y9v1kIcEeQ7hjH+6k3OUU70P7X+7bPJ7P1o6IPJ3/lUlsZk5sdfdBK7i6+djVlfxsZhFLz1+6GO8oRMJMwA+SNaTygJTEt31cPFpnoOUOoyvLzFQakmGrkNb6baqTUJsu9WTRoJ6zyBwM5ioV0CnrGw1J18rnkDil4YjhVnuVsd7J8CHhRI4Cp3Ki/EvOj/gawpfMaUuDFm0xXIHxLU7xiTnxV7vy0VqoJwKK1ioBuiJJzDhVodppXRjykQxkmIL32sJ+uxqcmwEcq/62oWTeMx+f3kA1ssEIinj0/JZFEmY6u3Z+UXbnyG1t3rRR1FSscVUoUQGgMfh1gkwfjZMkKbrrfftfX1E1M8/kRapJ2++ben7UswlPLGvn8FL+U3ziwMNIIb1eqY7kiMhmY7YkqX1phHx9e2WTf4nxgry66ezi8CJP7LAFxlOxWHYaUgWlZ1HgpumDZkQ1vlUAUrRE/T+GwT6EOnXoFtk06dUz4c6l9qDU7TiZZzjFhgvBxYmcF8Fm0DWLc7MJuch26ZkLXm/5rCZwTPMzWHRk9wqe/gBRsCncwXLDouSPDhuEb7RHR4PmshqQ9VuGtC6kit+CZ31BGTAuwLzdFyG4OqcnfANzmMVEsQyiWtrmv9UU2ilJw2zyUqbtLtRz/m+Gni6ccXIFkx1xe88YOgl5xGVVAg2kczv8dNNd2mwwUkfrJoWSDNsL6CYfPqu44HCi/AFrAqTnW2fUAA8cPIWUUwJQldunrbYcsm/GamVbxmNYDaTIZbICt+fJduSXCISg6OjdRkuBOgjynjt3jluo=","layer_level":1},{"id":"b864c504-d380-4fef-a268-cea926de0742","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Webhook Notification System","description":"webhook-notification-system","prompt":"Develop detailed content for this sub-feature focused on the webhook notification system. Thoroughly explain the implementation of the WebhookClient class that sends POST notifications to user-provided endpoints when GPU instances reach terminal states (running, failed, timeout). Document the security features including HMAC-SHA256 signature generation using the WEBHOOK_SECRET, with signatures included in the X-Webhook-Signature header and timestamps in X-Webhook-Timestamp. Detail the retry mechanism with exponential backoff (1s, 2s, 4s) for up to 3 attempts, which only retries on 5xx server errors and network issues, not on 4xx client errors. Explain the payload structure of WebhookNotificationPayload including instanceId, status, timestamp, elapsedTime, and optional error and data fields. Describe the three specialized notification methods: sendSuccessNotification, sendFailureNotification, and sendTimeoutNotification, each creating appropriately structured payloads. Cover the error handling strategy that logs delivery attempts and throws after all retries are exhausted. Include concrete examples from the codebase showing how the client is used in instanceService to notify when an instance becomes ready. Explain the configuration options including customizable retry counts and timeout settings. Address common issues such as signature verification on the receiver side, handling of webhook delivery failures, and ensuring endpoint availability, providing solutions and debugging guidance. Make content accessible to beginners while providing sufficient technical depth for experienced developers regarding delivery guarantees and security best practices.","parent_id":"2b660a96-0bc1-425b-9d17-8c19a11d22d1","order":1,"progress_status":"completed","dependent_files":"src/clients/webhookClient.ts,src/services/instanceService.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:46.414719+08:00","gmt_modified":"2025-09-16T12:38:33.756198+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"1dd9518c-8fea-4b38-b955-0c9769c9c361","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Job Queue Service","description":"service-architecture-job-queue","prompt":"Develop detailed content for the JobQueueService, which manages asynchronous job processing for instance creation and monitoring workflows. Explain its role in decoupling request handling from long-running operations, enabling non-blocking API responses. Document the enqueueJob, processJob, and job retry mechanisms, including priority handling and failure recovery. Detail integration with the instance creation workflow and how jobs are consumed by JobWorkerService. Provide code examples demonstrating job payload structure and processing lifecycle. Explain the underlying technology assumptions (e.g., in-memory queue or external broker) and scalability implications. Address performance considerations such as concurrency limits, backpressure handling, and monitoring job throughput.","parent_id":"5cab9a17-b1b4-4ac2-9f23-da0cd91f3586","order":1,"progress_status":"completed","dependent_files":"src/services/jobQueueService.ts,src/services/__tests__/jobQueueService.test.ts,src/services/__tests__/jobIntegration.test.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:53.557546+08:00","gmt_modified":"2025-09-16T12:39:08.379868+08:00","raw_data":"WikiEncrypted:vMsgMax61wW2sTWhXd8DH0pKusOgl0oyROu/BpImDvHwSDTKGlI0IObUgyL66tC2/lUgPsIBtF1XupLbDUMAfwf+m3oBdh+13Z4KFodx5AYWnmsIIcw1BR3qUiHLxDBL+9LiEaSL0C1mP6weGGRw00gbRTuzAEWY1LSm7By/jYjokH0WaiLzdiwvGMLwISUKU0pqQ1Muf27RmfRpNJQFt1gL+0DDTQu+zQBX1zBvP0zXvvl5FMMdE619sH892KtbD6nm2KxsmViMpRMGIhU9zJWA1kIwPK2Qf7n8z/7YzRqp2Nl6QQ98DoqSJoyUuRk1ZncrTM6XW8pMfjEsfa4BXzz7/FOopTuAiuEC4LZ/NlMi16TEL5VMjuXkPo/GPr4HtF8xp67+mkXEPJT7aLzezkUPzUVUlVrXKCk/9JoG/47VhLzE2Msz401J4sG2qBgtD+IXZbwMJglVw8jlCIhFeFoLjxzEmCniv009X76bsgZQodm7AHA/CcDisDUGZ9QEhbV5Kfif0zi9IjwUmC7Mgnrww0afiEzR5t28mWlVPrw8MctzLppIbm42csuGS9DRSQJcmWLlKgtgxy0EgwSg7cml+WpnWghXLmAV9szVGGPa2If13nydlIoW4BXSUffYjLUKjkUOTElAgypC5CrivIXqVx9adk4Pw4LcpLoDiYwexutjOYr5QNVqAML6oPTMtsRHpwlPU9IdXxjzdAlXsgEs3aT5Nxa1fCbASkj+mqkFr98XhOGMb76/ZLacQwbEMBXg/i6PaD9WZaCTrJWOIDzcvo4g9qua2WJ7XMTYeyHUEZjs0/h/55sMZnQjRJ+l4jia8rJm7JYXmCfLr4pLOvrPNl4PKq9x+kb5K0177trkleWA/sWoGcr/a8UZa0uFqCTgOYzmri9sYYn2iGM/+hE+7ueMR4aFfbYzgFsgd6wrVRuDwFsA16BlH1+0hdXTtKNwz9U4KDK5JLKnw3eNbLYBeX9w1VdJYZbJO/Z8uIguSg8WK+iY8Mtjs19jcfQoVjr0rZKkutCvc+arfmTEjuA8MAb2TC9mGqFJidY9xW437ccEdhF73iZ1Bg5ccYyooYGlP3c1zPRtsBz86+MywNsZZxppjtaI6D/SNC9f4iDb8c2n8gS2UXhtAY1ak/iL67GGQnbbl7Q7Ggk0d5J6LY16W+GzlbXkk7ebdjkLnZJx13SwZMmt+wJMn+RPs9CVb0AkhSCg5rEZR9++nP+UlJMvFPJqXsyGaL5+qLgbrInujUa8K+4Xpl0inV5DhRd95B3cFT3bn3PDwSk6Uy66GV3F0BQ0j+pFKBmgvKvKCQUT0UxF3bS8QpsDOMfBN4ysjnQiwIcax2Gefkq7aeb42qO4cMcj0If1jwr8vB1sXoeAgi1K/vLV4YLEu/D0wf3yRNhSC9km4GsHsaw/OwoHY6bH0gQYquSOmhYlJOzgS8U5BsfSByenC0COjtRXv8jKX6KfEIw7fcIdr5J7F+4JmR5Ir0ZKHeGGRyIZZqVPyzKoSPvclCpt5cScpPVjcF9shBdej+aPBCQc1p5ACkdxnw==","layer_level":1},{"id":"c8bde886-5e9a-4eee-beba-4de2ef5d058a","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Error Handling","description":"error-handling","prompt":"Develop detailed content for the centralized error handling subsystem in the novitai application. Thoroughly explain the implementation of the errorHandler middleware that standardizes error responses across the API. Document the error classification system that categorizes errors into types such as ValidationError, InstanceNotFoundError, RateLimitError, and CircuitBreakerError. Describe the classifyError function that determines appropriate HTTP status codes, error codes, and retryability based on error type. Explain the structured error response format that includes code, message, timestamp, and request context. Cover the security considerations in error handling, such as sanitizing stack traces in production and providing generic error messages for server errors. Detail the logging strategy that captures error details with appropriate log levels (error for 5xx, warn for 4xx). Include the notFoundHandler middleware for 404 responses. Address the retry-after header handling for rate-limited requests. Provide examples of error responses for different error types and environments (development vs production).","parent_id":"b51b9a62-2012-4de9-b4aa-b48ed1824998","order":1,"progress_status":"completed","dependent_files":"src/middleware/errorHandler.ts,src/utils/errorHandler.ts,src/utils/logger.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:25:08.686962+08:00","gmt_modified":"2025-09-16T12:39:48.300756+08:00","raw_data":"WikiEncrypted:Jt2SeH9cQITjBGdB/YEfX3N8YSBxdShIw/8QWs/GeiLmzikytsZe8mQYzKYlEl2+k3Y7K/xkOpsQJKciPSsDIJeXfa7d/8Zm77I44r2zVQ1Ml0QaMEvwMnZqpCSQBwnVNWEBAWkzhFzEVkQELYv2oXVdwuAiayVrPiZZpXtDRy4L+FEzI1ovZ+yNc/i2dratTOq1gRlA9MQn8fP6d92uhhAgRAIZL1M7ADGkvZJyMcZ4IjGZTa+Se/7OE7jlDNL68ONmDGv2lNmKznU5XOdnc60EQvmIMVzXBOUTfnuQAwL8W70Sgd0SScM2JMRmqmNzzhWjyvbtL/tJUk69CZGL9LHCbC1WTJagbGoCknZHD3GuKi6X1/yjksRqj73/IfCNMnzx/3nMAkedYkGMmMSXcucpCgz8w1LQEqElW19kPrYsmXACF3gImVupB8dKhmMo+gqjs4r/q3GwwTYITf0f7R5pL3RvJICjw1LOsq16x/GHcvoQOEOoMvQSc28wKLYWeOF5QuZKLw3tGDl3ne4tivnbmCt475WG/Y59PlSiRTIwT1wrOBtG4LHXP2KA+UnlpiY70LDAqP7Slf3J1xX1SvavkOTijKK7v/ZWtrEF0gForXT3hl4GVYmfYgfOBxak1Bj+Hn8oQvagtPJNFLCsAnj5BPn9KkUCAXfFeiWf/eZKVOSdP5DgeFO4XqxrUIJsyfmCaitsL0kSES3l9xz0gD0uTn2PFjtIhk7HO66iR5/J42/1Y6mshduiGZwEj9o3O03Hai2fA6PobLtDAJh7bBLzMD+P/NLcaDk6GRbdf3RU3WN+OYNI+mqa+W6mNvDzOyzLeN9KPrTyKAdQT0ObuLuQzDZ0+CbQBgZCFGUcqbnGHC7IQ3dfKdPSt6fenpPcxAgYXaksTXzu0081jXQ/frBb02hFWdO5O06b5cnV+LB1aBFRdX3jvdiYqlcwBkIWBjeYGcXLVwFjgZdGpk2f8uVyIM/iZsT0PWgoXY8nQ72GUnH5zBILLpxfoilfXcbmexEUpE6mDJSiGUfiweMSuu1au4UPe4bVJcSp66KvyQ9+ZF2M2CYuRrcuc54AZyqFKx64CydrVlVVExhh/frlWFXdTuL9tjgcDRNSBgMJGs3NXj2+L9cVbJxVt2sHckKeoRZ53+/+e5HwQpyViEH2VE8tTzO4Z9k1zN5N/iIFdjP6labh0t16r3tlu4FaHQiruZsAwZbh0bnczselybB5YTFYcTEl+jWMHfr/cGsGlD3H6THDTnTuehxKT5zLqybN04E5RzYQp4QLRI2UCiViPmOMm4iqyVMS/BUpDm8/+Re59KXbHaXcVYc7oKEdA0NeJB6gbi4UOnkOyo28EmGWzh2nJY3OLrKq2gQNH6KBrE5mCT0q+w7AWGWF6Q+Kxx+9gPSUh4MPKv7XIaW8g7kfhQCMFxuXveVtrToQNIp0TfFJrEJlY96Nzu6KxftHeb6abBdIZvK+o89ajvgJi1RpU/D2ZOCg1x3P4PYq3/VmKG/1qgLaRXWYfrfJSc3YKBRkJc4jD6TEaZAg4xgmnEVBNEjI2xduj2hXanIvupme+FlHEz1+9eo4GwMwOktbKljPJnAnuIABSbznh+inpyXOLW13BBikNCDq3JkIHTWPneqfFwOCo7rhjUWQ5GyppK/Lz7QEyznRbs0uj1ZtTt0u1m5KTbBUYu3KOJ4cMz1yediTNOVbTMgfYCQU8n5j7NhKOU8sjx50TKUUtOkGQPFx6Vj5H3E8dGRfZ7LXIzmGRYysO8QrZL7rhM7cwh2HPkipAB2yMnaQmfhXds2RWo0TdqL5wx9FQOKgnGch2iViSRRvfo1WE2fASS15phgfw2TBtnb+UEGuEGYMQ7h3h6xp8Orb4egQjiBCEnxsvd1mBhDzcHPTJDv0MYcxnZADMBhz","layer_level":1},{"id":"971acfd1-54d5-4afb-9290-62825d0e6404","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Deployment Automation Scripts","description":"deployment-automation-scripts","prompt":"Develop detailed content for this sub-feature focused on the deployment automation scripts provided in the scripts directory. Explain the purpose and execution flow of deploy-dev.sh for local development setup, including Docker Compose invocation, environment validation, and startup verification. Document deploy-prod.sh for production deployments, covering image building, configuration validation, service startup with production overrides, and post-deployment health checks. Detail health-check.sh as a standalone script for verifying service readiness by querying the /health endpoint with retry logic and timeout handling, suitable for CI/CD pipelines and container orchestration systems. Describe backup.sh for creating comprehensive backups of configuration files, logs, and Docker images with timestamped archives and manifest generation. Explain how these scripts integrate with the Makefile to provide user-friendly commands (make dev, make prod, make backup, etc.) and standardize operations across environments. Include usage examples, error handling mechanisms within the scripts, and guidance on extending them for custom deployment workflows. Address security considerations such as script permissions and environment variable exposure during execution.","parent_id":"87a8f9aa-9481-4113-b82e-a99578c1325f","order":1,"progress_status":"completed","dependent_files":"scripts/deploy-dev.sh,scripts/deploy-prod.sh,scripts/health-check.sh,scripts/backup.sh,Makefile","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:25:15.30362+08:00","gmt_modified":"2025-09-16T12:39:45.606129+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"3001cabf-ddd9-4f1b-9441-df9037968caa","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Python Client Integration","description":"python-client-integration","prompt":"Develop detailed content for Python client integration with the novitai API. Guide users through setting up the Python environment using the requirements.txt and setup.py files, highlighting the use of requests library for HTTP operations. Provide comprehensive examples for creating GPU instances, monitoring their status via polling, and securely handling webhook callbacks. Include code samples demonstrating robust error handling, rate limit compliance, and retry logic using libraries like tenacity or backoff. Explain how to verify webhook signatures to authenticate incoming notifications and prevent spoofing attacks. Cover security best practices for storing credentials using environment variables or secret management tools. Reference the httpClientExample.ts to demonstrate equivalent patterns in Python, adapting asynchronous workflows appropriately. Offer performance recommendations such as session reuse, connection pooling with requests.Session(), and optimal polling intervals. Address common pitfalls like SSL verification issues, JSON parsing errors, and handling intermittent network failures in distributed environments.","parent_id":"af30368d-cc3d-4dbd-91cf-b485f925714f","order":1,"progress_status":"completed","dependent_files":"client-examples/python/requirements.txt,client-examples/python/setup.py,src/examples/httpClientExample.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:25:25.500965+08:00","gmt_modified":"2025-09-16T12:40:38.787163+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"a2b3301e-5343-4f2c-a13e-5feceeb17861","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Technology Stack \u0026 Dependencies","description":"technology-stack","prompt":"Create comprehensive content for this section focused on the technical foundation of the novitai application. Detail the primary technologies: TypeScript 4.x with Node.js 18.x runtime, Express.js 4.x for web framework, and Docker 20.x for containerization. List and explain the purpose of all production dependencies: Express (HTTP server), Axios (external API calls), Winston (structured logging), Joi (configuration validation), Helmet (security headers), CORS (cross-origin handling), and UUID (identifier generation). Document development dependencies including Jest (testing), Supertest (API testing), ESLint (code quality), and ts-node-dev (hot reloading). Explain the TypeScript configuration in tsconfig.json, including module resolution, target compilation, and strict type checking. Describe the multi-stage Docker build process that separates development and production environments. Include version compatibility requirements and upgrade considerations. Provide guidance on adding new dependencies following the project's security and maintenance policies.","parent_id":"","order":2,"progress_status":"completed","dependent_files":"package.json,Dockerfile,tsconfig.json","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.480203+08:00","gmt_modified":"2025-09-16T12:26:53.371934+08:00","raw_data":"WikiEncrypted:w0CkdCdnXCcvlN5xOpiEhEX3U68GI0Ngj6azFMJo9xSXD5adKnu6Qo1t8CLnFs+ZY0/59wSk5TSFXlSmTJZmrpXVgL8t85CsMGODU6uqFrRcwanII91qu/nEcphsyjJBPMunZJYlB7hX2Oi0xpG/FAYIWTPmjWdQutmyebdqtwbqHWZGkiy3/QaojdnakgKrHjYxfmVobiwYirDSETlET7sFcKoqYze8KG2GH6LS+3bqU5GSv4KttH7FYQSy01IoK+kc2urZEnSj5xjkOLXjiTc9Vxm7rFVm2+ZORW9UmUbPL1K68vPPhjOji2RicRfl7A/P86Dy7WNSQUiIOmCi4IqhnV2jwW4yhgetEOVcsDOfzEXt7rvl+F5e/pylTjFqcS7hm7YkUiymIUdPBeSOxFR1rdyaaXTrX71iG+iXNVQT/ADP4bVRkME8u/gZ51+2R+1j3AR7GlR54Kknj8qzkm/FfJWYRpJUYD51ut8CTlGhtpY2tp7y4StdLxenpaNseyBQo7vpLvxl86TJ54cgb0RVYWlWupD9v48U1ThTijmC6KW9ij05SNiwR/TIGNhIbYbG6EA1T8/rj5L8Sj7NbOtEz1wMD/GVTfb2vz05/Ar+CjMLBQ1apYvtZQOtCsQAgPqp4CY4DJF/+X3j7jFLstyh9aR+Yv+SBmDsC26wp+8N5sA2ohmtMSYfe2n9EgBZBfiPmZH7znuWUryKC1kE1tkmGACveTpUfsWkTvvF0votYIyyeYN/rJuFiJOYOXTWBihfWcm/R4jBNDesxCmSUNGQqcFdtf4OsZoO87EBwCQOZ8DKxROaU0mh7kNYua5GqqYrC76DgcPrayDKYmlXv04zsK4k5LLtaZbN6Y1iYjIxtX02hF1/KeP2UC8hXfvfp0q1iFHLvuWWlDevEeZS9NzQs8FYU5BcyFypzV9+LNJcrYuVJIoTF6RnPQjRV+njd1iJdGs0KXQGAzqSWABnMdNNlCmsvC69SXS9+rogfNtD2dUIl++2qO83406pe1SsBna9CH0XDA/m1eI6r84IP8UTgJwrtpB/i8uL0GMR21rUEwMOarTx3e9Ih02w9+MlDw1/uCsVUbWDBehxs3tEUiuFFsMtiKEcofOM39gZ9rF5nENe26oPjGwcmw7K9vK/wg0B3unHm/jnzhvP6hjii5pS4EUJCr8Lhr2JEAtAQPuPgF6F5HcePEvSEiZFRxAo3JJMVD7WpdO7vfJd49PxEeP4cV3Mp7zqLPxa649m8KBoAJIUnx1V3ZX1B7kraZMh/JcpqNQSO/Uo9weGRP1oG9tVcUq96tlP05iLGMa5klEPfvPo/yFSIkruFv2QU/FaODqcAFd9qVH82pvoneHpBrUp1DZTZyR9wYey6CITxPwxIY0T4Q8OwRH0rbW+te0TpfJVO6X2jcjPV7xiAGy85LdYgw3HQfnKTCGcPCdcSLhqilhyqPdgw5oQTg/JpPMFt2QNP42Iss9xUUudOhr3qjsvxobNnE0xK1eCq5uMHoOL6GeNWrPb+36u8YhgCzmv+4+JJbfLcMQkBl5bMnHvySerwGAmSeGGC6zmfn+g+nP7+Q38NTf3yGit3B6C56jXtgzYtfxSH5UpDihDLMHKsOfjMkJQ8qKQ+JskkgCQ30WyqXaAt6Z72CB6RbA4C2MtiFL5rFXyo91T5gCw8y5PTTBpnAw9khYObB9DSDuTN0w0OlczpLyIN6uUgadXgl9S7Nq8Z5CiO3ByQBD0tyF+tR+hyn9789SR/bnC99TU1aNCUPWqO80ssqrWusCf0OC62u3KC3bW/BqGMJ9RwNiFe/gKK3d4rR5RXtnSl1RicQs=","layer_level":0},{"id":"f788c676-98bb-4b0c-abc3-fe1886996e48","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Monitoring \u0026 Status Polling","description":"monitoring-subsystem","prompt":"Develop detailed content for this sub-feature focused on the monitoring and status polling subsystem. Explain how getInstanceStatus implements a dual-layer retrieval system using instanceCache for performance while maintaining freshness through periodic API calls via novitaApiService.getInstance. Document the caching strategy with 30-second TTL for instance details and 1-minute TTL for instance states, including cleanup mechanisms and hit ratio monitoring. Detail the fallback behavior when Novita API is unavailable, returning cached state information with appropriate logging. Cover the role of MonitorInstanceJobPayload in the job queue system for active polling of instance readiness. Explain the calculation of estimated ready time and how readyAt timestamp is set when transitioning to RUNNING status. Include the getCacheStats implementation for operational monitoring and the clearCache/clearExpiredCache maintenance functions. Address performance considerations such as polling frequency, cache hit ratios, and the balance between responsiveness and API rate limiting.","parent_id":"ef82e9a1-7273-4190-8ee5-1896a534f77d","order":2,"progress_status":"completed","dependent_files":"src/services/instanceService.ts,src/services/novitaApiService.ts,src/services/jobQueueService.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:23.928037+08:00","gmt_modified":"2025-09-16T12:40:43.156941+08:00","raw_data":"WikiEncrypted:HL3VqGjXq8A3aGeLxAjVPk0vSypvb1KIJ7WMknByppXN1ivDCO9fVZ4q9X8O5GT1kilGZWKamsgp01b7EXobMvDM+V5KvwlFe6xEjm/sr2alaRKDJbtN1b7nxuQaayJ0E5hC0Idk4TXxTkNW6XMpOq+A59OQ/6Bh53YgcHMfLFJMKNIlzICh7VR17SLrEm9zspNHKt7fkgf9Yvx6dJbMQt2c7TdOfa6asXNUK1ANRvkY0KptX7G0zHA4zRdWVrjOAAVXxRajq7R5wbcTL5C0k9pEFpbil8qEFpnJ1wW1bkOnshv1azK0z26iFWfdJ+QYfMzxDHxASWwUFb2AyrpTcYPNsJz4pYEIEqFoxeLXFhRci68vTNLj3yLNN8l0njEe1b1Tl1qd8EWTBNPAkcc8DVZikv5MTMwqXehCqtaDRHjU2WdeE/ZJKANQ8Z87KUjzguP0Emu/halwnv+F2D/48iBIn7U0hGdFlrdpOzKNwenRsneeKJRdd6VNTPJNpOW2fAhOmajdXO2GG1TxoZJ8Hh8MSVaAkIRlmW5tkkuAISPVaDuOjEE6sEVpPwDn/oG68AcgnLKSud9VkO6E7vq28Uujhm0VoOG4AP8NX/LjOksgqa9YGNw7d5Qw4tM9KJOCDClcKe2++9nRrrtbUsx811gUHQ4Gv2283q0kvNlNPjQWRz0cgpVnLPolNYwAQZnW3hdMVbXlfu2Ej3yU0TOBAuPniOqlv32aSM94xt+EJhh1HHUUq5fzkLXjbqE/WHQj8OIfsr6sYqj2yvb/um5OL7DP5zd+0zrp3G1ftGbnkQnT73mpZS2leaiKENb/Woj5prCe+KA8K3TeFefYHKbJvakiYSLO4oodokpzVchLr/Dd6Tby7Tj8KBWvi9KWoA51JrMc3YqCi40U7XZjD01/5rnzIixTHqN1w/0FT282gyjKSIUyPT6hFuRnVKlq+4hdy897xWY/aVuNg3OMLbcZJ5Gywuqqq7fKjb+q0RkOI7T+9nHJ1BTkVrnWJRC39VSjI2xFiYCNwgk/rZa/wb0v9mdyE3urCFl/r8z3AN1bXXKwS2k3iOq6G76359GrIf67am+haV179g6Whq1YeTRGs4k/SDtvUkL3Sdz5OHe4YYMH/5AvwQPf5XGUfyuOeYpRozdDLW7o43bgy9eNG3ntRFqx87+1Uf1+OEXoCjBOjnrmgTcePJezNTYrsMnRMGnHrKgnFjkJ4w6yL3TFH+2piEwnIrJUT6f+rMC0CESLdo6guPgmETSanpTSGeEVLsaHRQaRYrbVvOxwr1cpXYMlOS6OHp3eLyL8aXL+VOaBiZRTOOLy2KOPPSOYkCdHgUksGTdaTidoB5gr0iYGwjoQi7Lh+g9aPChBr1TqfsPElG5M+GE6Cqe9h6sXRaXe0kkkvxoxsWqXzB9VMlN9XK/H7XIVa+SAFHauXM/59HE1uISV+DX33/xa6/t6fJdIjsyaG5IzZNg4DodpxSKeCycmewSyWAQX892hLRgO+AoDFMtyfP/apjrKjVYJSrV+3o17THL95pA8Lr75tCPlZqCt3JjRUX4UtUsl4eudaAIbDSpjR/2BAs3S7lT2ubnzN5RV+uMluTFXWycNzddEW9FChyxMf+8bQGE9ILgeKng0xyX4mkNtAz3YgTqIsMkB2iUeOSggxMfo31GZpLiU7tb136RLuHnxKH1d9rRtTj8ztWWYJppoOn+7t7Di2u6FkKq6pl/i1ozpZdpIKXZzyGXWhEijYCZ+U99e0TQaQ30V8QgLJHSSCpXFGIB7+Ne4UwcWrGFLa2wlch/GK1EbI95tamwr91APgN8EjLKbA6hf0U81yRA8k2DitbAJ3R2mRltO5i6Hx6osVEG/BWl7gY9+T8rAoIJ+B8TZGsOF+VpS7XjVjziWLI+fOriPsWZz8GvZ","layer_level":1},{"id":"849ef228-7ee4-4a15-b29b-f1e9cccc0170","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Metrics API","description":"metrics-api","prompt":"Create API documentation for the Metrics API endpoints (GET /api/metrics, GET /api/metrics/summary, GET /api/metrics/system, POST /api/metrics/reset). For GET /api/metrics, document the comprehensive metrics response structure including request, job, cache, system, and error metrics. For GET /api/metrics/summary, detail the simplified response with key performance indicators (requestsPerMinute, averageResponseTimeMs, errorRatePercent, jobProcessingRatePerMinute, memoryUsageMB, cpuUsagePercent). For GET /api/metrics/system, document the Node.js process metrics (memory heapUsed/heapTotal, CPU usage, uptime). For POST /api/metrics/reset, explain the administrative function to reset all metrics counters (requires elevated privileges). Include example responses for each endpoint. Document authentication requirements, rate limiting (if applicable), and integration with monitoring tools like Prometheus or Grafana. Address security considerations for the reset endpoint and provide best practices for metrics collection intervals.","parent_id":"c5689f41-973e-4c47-93d2-7b57c1521c20","order":2,"progress_status":"completed","dependent_files":"src/routes/metrics.ts,src/services/metricsService.ts,src/types/api.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:27.144294+08:00","gmt_modified":"2025-09-16T12:41:27.62438+08:00","raw_data":"WikiEncrypted:wqMZoWM7JzuUrLNEmTF3PDQeVCfDFNvGepX4y7f4M6yxkt4DEs5Y2YiNN58qKN9L47bN2fLYJV7lRQ/y+ZC0JPUndteNh07sx4yuJ3CMiTKt/IxkPScMobUikV/VO+K34R8ZVzI1i01hJ7v8y0UbupaZEBYWU1qSGVi7hjYDkjnqwDNSwedvrp9yHujIRFkFQoFEEVYfBLufphmd5tIM9tWDsWV8mJQerQasP95rHrruo/YF2lrA9Q4DLJVfBDZ/nNuNbifh0LWH2f6dZNa5IGDwAdbjyG2YYMIP3ysyDS7WGSga17OQqe9Q6Zl5q+CUd8zSYnyCgFsxG6o4iXKtcrumNS36fZoS1bXju5vk09hXTuVPT3XRnGUJYIoY5kklnsoyl+12bg8dkkjrLyVBE3n9PM4XdbOFlsT8gbl8GwwiPd3cMAiVuTXPplqP2Xvx0Nw7WoKoVEehxBX1GfHuZ8gQM5xI3afVud68Lm7UIX0ipJ2FSjXDJs5VrxMD6tFzgBmqhygMdQzwXaqRMnVR/cNTkHt2Xi6mEDDpkrip7NQ+XpnA2SIqzHwN/1FapiqXYQo84dSFRJEXA0+XWl11V3cMNRppCIZp3Br6/wfri0Lw3Lcsa4ikvj2CxmbaW+PsBX3znWvL9Ia821w9K+O6dDtE1q4/I3eqwIbklYTS+yGcDS1ZJ9J3l/IZtNEq0ZTmrBtmOP1/04+NZyEIjbw4WYSir0ZAjpYrsH5kZ577VjQFlPGw1toMaoQJi3YcjXh8V6J7uPTkSI8alkZwupkGl08sJHnDTOGI5zm7LwAzVeQfvBwN2dCoOUHLVHC33GnybyIs/UvGwYCLkTYo80EzuyaaDsh1uXtJt4Pln/GfM6K9/72uXcTyNJ3nwexwf7/CjtHP4VcVKuUNA8YFTdkO9m4XhpAw5ycfHo16SDxB79mjJWGtT8X0rxRYFwYe8fuwIwS/4sIdXHzTXLAQdaOTuzw4qHiL7Kbp05asuc5xxkgEZALZJDe1rtQAVX/Lub3HE7Hzn41ZIPk375j8Y94evkw08HWRp/+D68xy+5erKKbTerWae9xGbTeVqKAKakoCsRM648CXTwQMlNFyEVAT2upBcGg/Im63MP0v55Zbhkk1Cs8WnHzKc+QildswifjGxcVXM/yKdebOOSW6XEJSco0seZnhOFTc/6FH5+UJCYgLJ9R0Z8NsXpb/ycZbkWzCtYuUe3x/sy23LrQO2RL/feMi4WWxgw4+5vXPvmBfSuftaJfhQWzRZO1bsyapXMhD71NsgUxP2Tb0i6AlXmwdHaJ57MlJnK3KZqciNQJLS3j75hgK9FYVTegdKj/vTdXRZAXp9EofQ+7QONNp0W7TXNYnAryIB6T95ATlQynaNo8V/dcGnZjjcNEdEoY3dMNclzOOqA/7D8L0UKoPxRs6uvnidVE+Vz0Tl1TY/9vRSXMFNMi96MqVvAuPaO7i5YMeziz2V5jieIHvpVnvBWcb7b+5DEpg46PmKYJ9zjrzw2uxpSllrO2Uuk9anxO/l2gXxFRBXiFQGy6RHCul8FKflOwdyKBH3PqhZy+QKU2zKGHWEfpPWESRSSTJliw1WkcgqE013Iov4zZNxqS3aT5MTs4Qb5LWQcrl+Mg+r3OqcVdzHmjk58nYOz2V86ASQRu6iv/Gn2Wy3sARUZhqBipDxF8qToAXv4RimDJbkEu5Ta6V7JxkI8v2fjOCYaYSurwbier7+yWQqN/zduOMvnfkV92CIJXoIzwxvlp746nEnjbN28Y44MSg5Trcspf2QRU7","layer_level":1},{"id":"2004814c-fed4-42c3-90ac-9c900f86a663","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Novita API Service","description":"service-architecture-novita-api","prompt":"Develop detailed content for the NovitaApiService, which encapsulates all interactions with the external Novita.ai API for GPU instance operations. Explain its responsibility in translating internal service calls into properly formatted HTTP requests via NovitaClient. Document methods such as createRemoteInstance, getInstanceDetails, and stopRemoteInstance, detailing request parameters, authentication handling, and response parsing. Illustrate error handling strategies for network failures, rate limiting, and API versioning. Include examples of retry logic and circuit breaker patterns implemented in the service. Describe how it integrates with InstanceService and handles sensitive credentials through the configuration system. Address security considerations and performance optimizations like request batching or caching.","parent_id":"5cab9a17-b1b4-4ac2-9f23-da0cd91f3586","order":2,"progress_status":"completed","dependent_files":"src/services/novitaApiService.ts,src/services/__tests__/novitaApiService.test.ts,src/clients/novitaClient.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:53.558709+08:00","gmt_modified":"2025-09-16T12:41:43.546275+08:00","raw_data":"WikiEncrypted:vMsgMax61wW2sTWhXd8DH385rEqrBu4kbXRTJnpb8ofHry6Lx7tffN2saZid7Vy5kA3EtOB++Ti4m1r1WNz5P6Ma2E417a+uoOQY5Glb6IUsJ1U6VilSmrZWjk0b1LR7Qy1iiIq4WCUI8QSEOu98bky50XR8lK3KLTOzX7HPGHVuMZEdGkqHqWsFfXJ3vg0RIre6WL04XNUNjtz8Y83/5rlE7aBiHEAzpMjVBdiucchBp/RARhGFP10+99g4QcfyYYl0+dkQHx6K5L5xB0/m+Lu9/TqO+U8bWT5PTvdbRj14VIw1GYO0v4+IeBBwst2w8wL6MVV6YiZ1pY1DhkXaKLDBrJ18jiPsH7FpWRubnr/hT0AhRjXgC2a0sTmDUCG6uW9Qhr9cIr0Yo8+dGsudyQsHq+nW639VJt5rrFpooru/zxwDqSMDGPkXi98VuA2G8R5qMnkXxDCB8I8bmC03YJPKJclHbYknpKY1nYIrTOfm4LeCoWi3MyN+Lr0UE3OOHmqfCFQtgoEN37XSb6U2p03rBzQNhmNKzE4lZreoJ98uKmw/1FuadXlv4XCAmdg4gA07mblJfK59Auuj/OtPWYIsT1wmNC21s1FnI1Y1jO1yWWPpzpDLcNwZHDVJsOJQCihg+MCSIoERFHp6zbjCS6saWEQg3StdrRbsNEfXpk9vw8+71JLH5rRWVK51Jbh8H9fGcCh7UTjc1llOUtiJdjzYHxELlL5lKeZZlK2CAvjZuS63ykfe1R8D6qh6tSYU1xF9pTiwmmaSk738Y+GuuWroDXDjWicuYveYsFMiThnw7wj9kOrR6cJoSIhuq1ADKfk4kXa2hOAaibks3D36C/JgiFpnvuB6qAd6mpMC9HP7YePGm7d1Aw66810x2XsoH6Knr4fE8XkxPva58jLwjm3WmUDYPKw7smVLVFQ+fKLvF3D4c7ZVmPKQ2pzt6wEEcuOag+zjU+87A8jAbxDpuOTHk2KKyT3Wpi/IMJfHW/lVNGakZzCPcdCgq/DZ75JFeCzabDqyZEBaQneptDVyPpN2qSQi5vkF27mFMQ/JjafpTNuirLE2lxON5DNmlQVJVZwsp/IiNL4ukp4+BL6S9j5C4v+CWs5PSiiEwiDcgjiigouAPzIqB6bqgoSLY5JuZ3mcxfScgULnxhXyedGFTu6AWuTadL6pCW4sLsmmouON02BOMHom1DgqLIWkfiMEO/geCP9JjIPXDwHwEF9gQ4JNV8iSDbgUetLz2BiYDI4jcOBrCKbwe0tBJ549uDdexmOuBIQcvDDUQ4+HNCd5AakSBMQr0Szd8KhFxz42zSD/Pzmq/UkkObk1m8GqpnA1Fo+gvohpJqpiJru77HVyapSLsfc1t+ONmygbzl5J/2VhtnIvDLjgRlqTdWTXTWJvZkrBDZW6EdPoSYhZ3ObdgesyzdIQCSLkfw19fyPsCjsG3Kx7oRpwEeoYPeDHP5OYxfhKZG7dC0OnOVQgNHyR/CB7hqyTJc/E3pa4Xjb3wOjHlByUKtEqkWKpu7n0TseOMb3eKKrkj54xALTo1aGaPdtVzozCsmDrZxLwZeuYfZ4LTySfHDS49J8QB3MTBGLk","layer_level":1},{"id":"9fb48643-9f67-4fb8-9ec8-eb20a089c76f","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Metrics Collection","description":"metrics-collection","prompt":"Develop detailed content for the metrics collection subsystem in the novitai application. Thoroughly explain the implementation of metricsMiddleware that captures HTTP request metrics for monitoring and observability. Document how the middleware records request duration, method, normalized endpoint (with parameter placeholders), and status code through the metricsService. Describe the endpoint normalization process that groups similar routes (e.g., /api/instances/123 → /api/instances/:id) for meaningful metric aggregation. Explain the integration with the metricsService for recording request metrics, cache hits/misses, and job processing metrics. Cover the performance warning system that logs slow requests exceeding 5-second threshold. Detail the cacheMetricsMiddleware helper functions for tracking cache performance. Address the error handling within metrics collection to prevent failures from affecting the main request flow. Provide examples of metric data structure and how it's used for system monitoring. Include guidance on interpreting metrics for performance optimization and capacity planning.","parent_id":"b51b9a62-2012-4de9-b4aa-b48ed1824998","order":2,"progress_status":"completed","dependent_files":"src/middleware/metricsMiddleware.ts,src/services/metricsService.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:25:08.688094+08:00","gmt_modified":"2025-09-16T12:42:20.234409+08:00","raw_data":"WikiEncrypted:wqMZoWM7JzuUrLNEmTF3PHnViG7gbEIFHLm0mKL7tnmxsHalPY/yDtD/PxAd2j0WyoX2gqvLV0Fa7RhtlZzHKtjTkE59pzYY6R5kswhDX6vYk7D4+HUFuAF8wO7FNSANyFBVF/K4UBmQIe0/M+Z/8F/P4Fp4HDOCy3zfQvzxsMUR/Nz5W0U5WDmDl/oWs8bSzbMi7+wHHJ/KD4868uqbeva8IPZKUCVLQeqlEe0qwjziwFlJuMNWYTgT/yOuFesW/Ufpj19hPXWfUV9SIad5howvE1zUkXGEC39AJpDNYbprTLK+Jhcodqog8bMOJNjPhv4as/F3RFwcIwJzieLCEbj6ValnupzykKdJRrqDFchoCWsGVvWgiLG0JR9Of/pvcNKAESRYNTRt7Z42LFl67uZbr2FrZU29sYJkpLsmdSCJzWknd+P3ERBrNDAbPtfeYbFwREYAg/IWaeOfJD/XVdnycZHXFBwx3dkp2aPWqUzrq103IpOx2Dx6FmXTRzeO8sKEfJDr0sGXVMIbPcuQx1ZACvwukoDB8uGmEpBpHSsK3WwuK37/NcMHiyLa2nbGAsZKrmmd4Ql4bp+4CPM3VOoMsV0hsYgzUm3rpWIxBLNOR6aUl7Ud/FZd8Dz77F3/Hpr0OUSlyRmYNt1TdMP0zUXb4i4K4Te7+nCrDltJlWtBYDBUl//IPkr0MceyyIMM0uBKdMe1xFB67bYvguQEUkNolbIcqo/weTERxvcFZqzpF5N0mJBD4jWW+K1j8FfgX/aGLC1kPuFiNJ6Ovn/uQjGTZCoLzxqoIk6OjcYRIQXUNS+2baQFA4UgnhW7cKCWgYNbIa29N7aS/IL2IJUrAp54cfnghA7kiJ9qAB+3QZteGPooLgApGt2Tuktyn4S8G9LMSzCMQnEBDGoc3V/sVsu6RJJrCaPI3HFHUf8ukflY3wJTHgc8fag1rOSyMF4MlE9KyWLMFcMcz43Q9SNpi8cS5jQQohJ1HMx4CxGEG+YeajaNfi381K8wt8MXzcetYL5TldReGrUVC9iW0tjU3iJ+LYpP44AF1OyHF3wYLusDHW7b/8+HJ21fSxF1Z19PFvCiKkRHT1a1hg57g397xEtBTFqexENDD9R9N3zYyT2WlE0Ijo4iTWJuLBRpiChAKOQCfo0FNwi3IwhGsdSEzdE/CBuH7BEr9+VMRClKmGeJICC/39L6SmX3MdiU0Xl85iziz8C1WOJK4IB3PdlxbxuhZ2lgjXMGml0ix6obc3F2kce12ihJONjhn+EjDnLH9BFQX+u1rOTHUYphee6mG61V11eTAt95B/L+TLYjDrwOe79laEDV4XS9IQEtnGYTYlH45YqBYXpKOvfO2bj2OPN3useciTOsHU872gI1f1B20CRCjCpk4QrxPbGUeWTFrOoyEBpcPE4BkwrzckT2YiS6jorZv6HWfVbP9KIM0R6L1w0U7DFrc5X6AfVsuQzVXfXqu097mzI7du9Vu3RPDSN8JIcFHsa7K+oVxrz9h/TQZNWd1bH5filDyjD+XD7H01r+varBBnjJ2smvvkm+phuq4BopePitRTuSnk4Yo2XUZG8UEteyV1GZw5EolZtE/i6xbv+ZcGx1zpbjC52MGFDufzv3joEU/rG+SiJJ5qid/OIHYaUK9CMAFfOx3fvxQrTSvtAUdsvBZFRRtH7PjfdwzOnceaoIUwvP5mSUCIwG3H9UoclyP2K4NMwBW6xXNa0kA7AKPvjVYrhfOoXv+J0smjU4uV3MJryThm3JhbYvePWCFkt8TPMd58CrAj19gU4qjF1v8EVYHRD/fZ+p9iIXIFsRGRj4KbqD4xqgRw1xJF6gXCtgCGyLJR6Y66zoGxbOLX+tXWi5yLFx2lwz5Fslw6rjwa1AnK8D5UQ53wo=","layer_level":1},{"id":"fb133b46-523e-4b16-ad70-8c9281b0e0a1","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Production Best Practices","description":"production-best-practices","prompt":"Create comprehensive content for this section focused on operating the novitai application in production environments. Cover production-specific configurations including environment variable management, log rotation strategies using Docker's json-file driver with size and file limits, and monitoring integration through the /metrics and /health endpoints. Document security hardening measures implemented in the Docker configuration: non-root user execution, read-only filesystems, no-new-privileges security option, tmpfs mounts for temporary directories, and network isolation. Explain resource tuning parameters such as CPU and memory limits/reservations in docker-compose.yml and their impact on stability and cost. Detail operational runbooks for routine tasks like zero-downtime updates, backup procedures using backup.sh, and disaster recovery steps. Include guidance on setting up external monitoring, alerting, reverse proxy (e.g., nginx), and SSL/TLS termination. Address scaling strategies—both vertical (resource adjustment) and horizontal (service replication with load balancing)—and their configuration in Docker Compose. Provide a production checklist covering configuration validation, health check testing, firewall rules, and support procedures. Include performance tuning tips for high-load scenarios and recommendations for CI/CD integration.","parent_id":"87a8f9aa-9481-4113-b82e-a99578c1325f","order":2,"progress_status":"completed","dependent_files":"DEPLOYMENT.md,DOCKER_DEPLOYMENT_SUMMARY.md,docker-compose.prod.yml,Dockerfile,scripts/health-check.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:25:15.304588+08:00","gmt_modified":"2025-09-16T12:42:52.83573+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"53762512-5786-4691-93d7-d2447139a68b","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Using Client Examples","description":"client-examples-usage","prompt":"Create comprehensive content focused on leveraging the provided client and service examples for real-world integrations. Explain how each example in the src/examples/ directory demonstrates specific aspects of the API: httpClientExample.ts for basic request patterns, jobQueueExample.ts for asynchronous workflow handling, productServiceExample.ts for product catalog interactions, and templateServiceExample.ts for configuration templating. Guide developers on adapting these examples to build custom integrations, emphasizing code reusability and separation of concerns. Document how to extend the examples with additional features like logging, monitoring, and error reporting. Show how the client-examples in Node.js and Python can be enhanced using patterns from the TypeScript examples. Provide troubleshooting guidance for common implementation issues such as incorrect payload formats, authentication failures, and unexpected response handling. Include tips for testing client integrations using mock servers and snapshot testing.","parent_id":"af30368d-cc3d-4dbd-91cf-b485f925714f","order":2,"progress_status":"completed","dependent_files":"client-examples/README.md,src/examples/jobQueueExample.ts,src/examples/productServiceExample.ts,src/examples/templateServiceExample.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:25:25.50223+08:00","gmt_modified":"2025-09-16T12:43:41.545841+08:00","raw_data":"WikiEncrypted:kSMJmF88qRkP2ukfVdKPFKOxVYEmjwZh0Fn3wt3oEhI0BKTiw6TvXLHNaPaHL3y+vAOgBdg6elRpbsAIMXbZKizouVTYCR0mT/evQYHVplrJp8uqUebuvPIU7sh0baTl7jINsmZyBor4ZJCPkKWL+uRrvRTMdDU+nuQpNRd5UgAJ7nQM9/QR65W/G6fI1wa8hgkpNhIkPSkNBcHpqeJ94evK9sF0RyH29c9o/cDKzOvfWOXbY39cvu6DsEphdOBieY6IleSDBJcLVqiJa+LR7TBZvjVAbPUVIfkyUQAfEQoDZEA5LLWX5J32ohSQymrf1JRyy5cxnMhhgyneW5OCg3ZTTss4rsGplcpQ/qfXr7VnCTF7GNzMUhCF06zu33ouc1fwLlf6n6m9NLxo4CbKAW1GZeqM9YsWezy7AJlm2o1N0FFANnHAuRxr3V3kC6GBWwOW4psEmxwYF0RE5bQRSbRW53FHr/GRl5AntRXMKLekSltZVPKGQgJ/lz4nvcKa9F0L8zs5hgIe+9mjAUzjsDUqUnGBobOSYJ/omF7BM7OWRA2fq5Lk5HD/OlaiRdP+lbY6KXOU2u3v0hzRCx37S7H7Uw1ZA/NjfJTdDbSVHU7rOKadm/fOKVYPPLEC4BaFawea5qjeq4n8zjGHCFpUsvxzWZ+ufSNsgfI2DFnqlM2/e1oXq5Fh+BP4HvBD5GaB+PRvdaZvwJMQfbVXhX8pJMOW48LPoaoLW5JSkLL2RPbBNO3Hfu1e09pbMA0Tt0XA9Dq4eTPhYtIRDGiDeCU3WBjTeIO/k9w5u2YYcFxrrQ4F3e/VVbvx5muo0/nDKZ9xcfB/J1waXhrTlcJNadfknfIuXyKK+7rsuw/OeuqADZArerYtU6dLiiJF8tobEUojG2rrFmuccbX8KLcQJPWBPnSy1yO4QIiPK+umtutpyCe+FrH4yck2iFkw0h389/GdA24Y6bLycLffyDXiHULfZjrLFjOaxStLM/7zYQbhimc8+JrIX0UT842yLThiF73XvSyWiuhbaf3E4yhscCR96EmCZfQt29PkD9AbtbiejT3jmsDyhZdQTOAknQ/MGCqbx98AOX8I+v55EdSbKcnxKZfQCoVuutKPgmIGlLuKoFbzvglXL+7wiotqIOXAc/X7KexvM2XvY//ZVP9JfnRPSAX+btNOT6klxX06/zYYlx0blMt8G40jXCCyQnht/mRI9zK3SWy8OV4GIoi30oNGPXAh5yobti3zuT1f2jCeghiqp3gZiSxSct00GfvLJYMf6CS0sayZFhMM7dl3yO5anSZKDgq8ajgjQF9lz8i+JAHbKdho0Vp5yCqgwNJ4y2GDZ3J/rG9P5PFgCA7QtfyYTDb2M0+dc+czI5YX8E9Rphs8RFWRgXzl1m/RWDbqEnt3odixyQxBBETtz6bksL/7UhQZbak61jRNCMXBaPL7z+Bl6mf0wQqDZQn8icHgaOHzxUC4HZI02kn4bQoPKRlldPuMNVQ3in3rPGES/PB/frdNEcpcWswY8/tPkdfL89M/DhPG59WMYG+sXYLNkCnnPZMvXAqoTPQsn14X5RN+RjohvHn18aWb6pwKFnQi5hoNwpMMk0IwN57P8LzDBP4dnuAPX3d8f9iuIwSVSWNSrFqG8dOc8opTN6VpDzQ/O0HOyUHHrPNrv9nH09V2w+NpAqi7tRAFTOp2+closgPq10tdFm2HHmSXUErz2BhZsJC6nXQBFbbWHvvTtHvk8h6tCVWEJ2/MQHVPc6x7FyU4asBmD5ZnFvymkm5Hl+YvFGZ1FP9SOlwIH7phak7X0As7szna37CsnGRsaGUCU5NvleAntrHxWtuMZZmFE0ZlS2SoPqEuD2wITdaE70HLcFmvXJjnFddb/GDalCzm8GZ+x74=","layer_level":1},{"id":"c5689f41-973e-4c47-93d2-7b57c1521c20","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"API Reference","description":"api-reference","prompt":"Create API documentation for the RESTful endpoints exposed by the novitai application. For each endpoint group (Instances, Health, Metrics, Cache), document HTTP methods, URL patterns, request/response schemas, and authentication methods (API key via Authorization header). For the /api/instances endpoints, detail the POST request body schema (CreateInstanceRequest) including template_id, webhook_url, and optional parameters, and the response schema (InstanceDetails) with id, status, and connection details. Document the polling pattern for instance readiness. For /health, specify the 200 OK response with system and dependency status. For /api/metrics, document the Prometheus-compatible format and available metrics. For /api/cache, detail the GET and DELETE operations for cache inspection and invalidation. Include example requests and responses for each endpoint. Document error codes (400, 401, 404, 500) and their JSON response formats. Address rate limiting (if implemented), versioning strategy, and backward compatibility guarantees.","parent_id":"","order":3,"progress_status":"completed","dependent_files":"src/routes/instances.ts,src/routes/health.ts,src/routes/metrics.ts,src/routes/cache.ts,API_ENDPOINTS_SUMMARY.md,src/types/api.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.480926+08:00","gmt_modified":"2025-09-16T12:27:56.06803+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg+WPNa2UHH7yP2PPjE4/OPlAbu3AvGLNlwH2YbJEsK2ZFah4wHB5r1ikrL2gZxnF1CIgiYTWuzcTpAi4l7j+mK6gng9DtTg5JcwUMkIg8cnjv30oNs9Ooove31V/2lWd7KLl2PdgF0YwTo/vdnvlwTXAV3n29w8gfZ94hO5olWRgsenTQ+XAxF2sCAyGlZnkQ/LWZ5v3QJGTfO7PHF41732D3n2Kko/Sfac6QZqN/I+QRTc7wH2uUwZwnYONib9E3XpT01mfMsp9l6MsD8XfxI+bDi5ULd7piQ3WYaZMCCFJQoP4FACXQneFTbmIP2XBfqrZT6G3OqCbuF0ibTqJ8lUD5hgzmj2lgn2F/1uUiVzyBAlb8qH4as7JiCn+yAT0CwJSJirUUmtopIUcn9bMyUO6+3oXka4CQK5F9KN5fHENbL2zGPO/LrXms3EQM4VV5MIlBycJgrATlnd7IANUs9TYJk0tye37YAEyGINGIKZQdLy6O6TvcwgsUqApkg/YaJ1xS8HYp3ReZb870pp6gcHbh9GKrscQtTIPsEPpI9Ow+hEQM/DPabdAODrqcNCGGtY7EF5xFYgmBzI2tm7qeCWwqjVuyddJ1sjQTFhdogfMpze0qrlNKHQhNg8WHOIHDUJhYhkkEuZiIo2pRZN55SmEAZ/WCcO00JfMMvzHvgzFy7ODgUrnLdUDi+CxMxgdo2j/dq/EmWP8sh4V5OZmNZkKU/FYVt4tSwnHjoD7VTAuBVbkGxlxoqaTACcIIryL9tOmpPKBJZGSOkpKOlNEwJkNbRldVr+3Jk/ias41X1WQcuzZi4uIWPGRYHvNZLw0PduoGmFFL+c9Ikbx2bQ0GbBO02VimwTrr0l8zpFid1Z0Iiv70K0mjlzqPQPzb7QsJco3gAYqFXG56lpbnvzk9vO4fxyr9N4Xvkpdut3I8SpON1Htk1xviRacVKzayQq4+B1j56eCKUqXfQci+i9NcNS4PQmyrtEceU03BddAfpxlSkc8wcKjR0FNn9MKmnv3ZOgjm8B6Byxs64ImjueL8XYmSC45c4Lo9Vav5FDmUSUmq9DjgLJK5H0Y4+HdAQjylmR3+rgAnDz526LJ7HmZNNqnTWOhX+2fvoZGaRQasbwmpjHvKgvty65ERpCxJaOeI6V0nmajMQXKk52sTG6xDyE/6ZffmYWOAyHz1T4dMUKRBSIuMt+EjoA76i41XYJocn0cm9x3n0J/gqve36Na36f3ocgPy9GN6I0jhEdd8zgqsDHIik2rqM76YSmkDMxRlbdm4dG4V4fTGv7m3GH4/khTA0jZAIrW6iSB0z06G89xcYdqVIvb0MNL3vLnOP594OQMxMi/kdPfiWrGIlyIm30l3i2Kypim1nxb0DoBtcDKm1sRcuvxNk0bcmrQ+pN9frMOt1eyj8OWm5QtQmzq9LiuVb/roxvnr79qpSnoZoKDvpmTcowoLYsHaApGWIxqg2TlGkFefrDRI+24opVa09YLy4nP5JtMorNsaWyO7q8yYIUgP9R/MRIKPjKhMV971+cF0Uzg8VqZFypidQXyfT27u49883BiZ5V2T0NP3rFBqxOROB/P9m8jne+ebWFEDKcikLPMHEMPfiIo6o1Oc5WI3BflHJc28067xd/2sQaqoVk7BWKxLGX1T46+qkWKv6xnUpbpCtMEfZSh5RiFNsYc6B4ChNvqBnTd8oPVloQwNsSTZdXQROK6QUc7LtGvBA1IL+/NKXB3tHSX/ksnmVS7cz1Vdz28WV7Qv6sYHyBf/s3kcbH3I3NslYFyyTlWN5nr5qmeR8/bPWLsAtyxoIzibnLAgV0SAdW0Cwavc8pqSBmOdDjGaYZtN9Abb/oaPmZTgZZ+gaY4BhaCELDqHHqtDnI8XRM0O5t91wn7dpxHYUlr2SwXoitK/+NLRIm5yQ==","layer_level":0},{"id":"a393ff35-da1c-429e-8404-b9b5fd14712b","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Cache API","description":"cache-api","prompt":"Create API documentation for the Cache API endpoints (GET /api/cache/stats, POST /api/cache/clear, POST /api/cache/cleanup, GET /api/cache/:cacheName/stats, DELETE /api/cache/:cacheName/:key). For GET /api/cache/stats, document the comprehensive response with cacheManager stats, service-specific stats (instance, product, template), and summary metrics (totalCaches, totalEntries, overallHitRatio). For POST /api/cache/clear, explain the functionality to clear all caches or a specific cache by name (via request body). For POST /api/cache/cleanup, document the expired entries cleanup function. For GET /api/cache/:cacheName/stats, detail the specific cache statistics retrieval. For DELETE /api/cache/:cacheName/:key, explain the targeted cache key deletion. Include example requests and responses for each operation. Document authentication requirements, error responses for invalid cache names or keys, and operational best practices for cache management during troubleshooting or deployment. Address the impact of cache operations on system performance and instance retrieval latency.","parent_id":"c5689f41-973e-4c47-93d2-7b57c1521c20","order":3,"progress_status":"completed","dependent_files":"src/routes/cache.ts,src/services/cacheService.ts,src/types/api.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:27.145768+08:00","gmt_modified":"2025-09-16T12:43:52.057714+08:00","raw_data":"WikiEncrypted:dAMSC70bWva9SabC1uic9v3tSZO270coV7KueZlHH60sLxJCEL8Rvi+sIFz99m03DfEw49pMI+wdhoEqYnUBCQDjL4RtFYAjeFNS6oxJS4aMoGIPBcCNLlPiDIBwLbUC/3S5ERPKNeECOt2FiR4BiyCVRzD+FL6e3mAnr9FWrTyytwFqBWdc/z5+uAHT+w/gDa07bXE2GQWlqgg994JIrZ+hK6KfcS10MugLvxW9cz+Tkye0Kg1ke53TVOzN9tUDNMuVukz0X30Oo4/dxY3Gl2CMXWyDrlhc/ozVMA5iGWIAqalMqQD0NiReAC1MbamHcyV9vP5ubLtjM70Odlp2/4haguBQI/Er+KKdXn0TELWOnH1i6aTRR2n+lcNQNIbmDAkEodezglRGXFvBuLz8KZkm0tBBGCU/H6CuJZcd/1pY8ZAXxbdDXJpju4OevmzGQl1gTUT6mUSZTUKsqRmbCztK9OnLiYoosZWpk4Mm2ZoBlwDiZpQaHzl0BBHbao2u2Fl9+ynu5Rbqx55ePk7YWreThWdsifgHoAm49e5YICSD7vrJ3KCcFnF7fEfr8vop+FF8tzxWlstY5BjZGfTgWa6A446pfuRwPZOZPkTWMYmBQGtUI0aqi06U2ny4A4lPTlTDTIesN6kJ8emzjKxtZyPPPEYF3jMEkqzASip2YO3uPbIvyYRosLP9L8oRw3jAe2tpuwxNXkD1zB61aZr9u8mSwtz01dK/4Fonz9Niuw1MnNMtQI6VrKOe3dVagOPo8mOiP3msfUj//FHQ9Pu3o9yRWoustZ75CEJ3TZUTIBSbc22KjOkvii3uxO2F8ACNek6X1iQ6jd73B3PYYoH33zh/AOIJpbFQ+Rtm9XqKJT++U/teSjWLz/uA8NUbKU0gjAL/danuUJkOgNYwj7f4D42xUbHoM4QdmrpRooTgPRgBuL1z1FNtXk8mFjGJJ6KYHDBY3RpCjCeJtQ7tkj8LwV7g88rbEo9MYja1OsFu200QjICIpj9iNhADdBqMknQKyVCEbkWMI6j+Z+TQIra2p9ihL2dIasd3A5cDQ1jNFDmmx8S8gfqX1LUynIEBaXSs/x732nbuInFuDqbQJlx7B/7poclsleU7i9iF3DfLIfx190ZHi4Be6soBszGgIP5dHR2IjHotlLRFseGkmvVfoMILShTbHVdmiWdP3LUee2QI7LGUlcQb1E7TSkoItnlPJNDxu9CNqOcvcUo/YE3QG7dJh6r+SKkhGFlueOZrjYlmq1dclAhrk1GOgqUUhDehyC9RrVDSruR9O7mz2MSsyhp5dfoqjNKx+46t6RTmYVFq3IWOxyQQWFlFALO7Jc4KcpJdVZ/bYGXc7HGENZexX53MTJEIlLRZL+OQ9PwLcvwsVEquhESnhK6l6RyzjRqlO2nzMZePI/wSAVdbQX7DXPk8/tBmkmkiMQhgtfZVtzNMHgTOqqL29PfmmJdfomK0xSBdIR7EsPB7y3BX8dmfnA9tzUcvPb6PNEEkXnJeSrcbxvPCcV7/s3QjOWP2AhZtmMfmJyNbDYWBJ035LgP4/Ef7NZMDhI6OUWcKzIH8FH8e8hJybMJtEwkCL8T08hldfeTCPL9+mLKVDb0frvZ74QseUcsa2GbgKzcO6I0d23Xhh5fUSOU//FgxS6V2xqz1MXRMUUrwWwFP+C8xUqeZU/5wdMv07wMy1zRlVPZ5U5T0rV5IhTmxCJXiZOrrKvV4sRPj80LqJfdIuHWlXk4SK3TA1r1Drf7bNpAy9Jiorfp7NF3Y9Z9ah+vL/8dWk1IRsqIfdl/sZg6ujuPCGXg38Jb6O2axqUeObysfXtlNX0PcO8Cng3nC3tTDXIFKFn6q","layer_level":1},{"id":"5395f273-5ed3-459e-a79c-d0118c44f3aa","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Cache Service","description":"service-architecture-cache","prompt":"Develop detailed content for the CacheService, which provides performance optimization through strategic data caching of frequently accessed resources such as instance states and templates. Explain its implementation using an in-memory or external caching backend, and document methods like get, set, invalidate, and bulk operations. Detail integration points with InstanceService and ProductService to reduce redundant API calls. Provide examples of cache key strategies and TTL management based on data volatility. Illustrate how it supports the /api/cache endpoints for administrative control. Address cache consistency challenges, eviction policies, and impact on system scalability. Include guidance on configuring cache size and expiration settings through the configuration system.","parent_id":"5cab9a17-b1b4-4ac2-9f23-da0cd91f3586","order":3,"progress_status":"completed","dependent_files":"src/services/cacheService.ts,src/services/__tests__/cacheService.test.ts,src/routes/cache.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:53.55961+08:00","gmt_modified":"2025-09-16T12:44:43.25304+08:00","raw_data":"WikiEncrypted:vMsgMax61wW2sTWhXd8DH5tnsS8bVbChlfp/gl3qAZhC/q1hHBrU9BG7RYvoWZ/FU+qOkawgV3z6/9ybmiizOtAPAbwa08IUeGODGQnAN+ZBEzcLGa1JQqZD6/X2e7duAuovlWXrRfIAawxGA4MvhkZM0L9VglwVyjC/SNR2PRgAZG8+/iJ995TRgIjdFzlQlp9rzUrNIrmn9oFueI1JHFXOMhFxtoIzRKeXJxKJ06ZwERT9BiQIOmXsmDvwue9LsRcsKGcuS0ndYqLOdE2ACCQvNSDonvD3l0pX3Hzax+ut+C/ax1/aLUcNgBMkj9/w7/9EYZ6FcxOpjxu/BFqergL+T3Munhfo4rG6cHgxCXdh/DE2x4zwbiDeArWB30CTxyUxADngIFioHZmn6I6P8e1y3nKh5NWGlkczsk72+1+dBdGXt6dUqObJ6UZdgiLUvOrcMhcFO9AvqTi0E9vk9wK/N/WuY+YOoXDPXEJecu6WxyvOtmxlSKxVvb3CGQ414Gcu20OZI8AiekWoZGmLXIreikxeS2qAnjq1GNEd8uZBgK0csv7bvfUxax8mb8n7+/M8e/aFbTC4zvfizwEl+mEViOQWL24qML7tFTWvMy4Piw6I0/gXWdO30SlD4FpyqQ0yw7/Lo3e2coj4atGTzVTMq4dqHPf29T/loNkuXFNT78iejKByz4ECABxXIf0fV6HErs6ZjebrJuEHM77UJJ2T+BfcuZmpF//wARsrNNv4SZ+YQad6n0BVQc9AAuXQBMRob1dU7rhMRtcO6MEu7ntXzolJYFXZBaKwP9yPClmTCRlVMmq7K6UqIM+2Fa/aMxlI0wIaOj7oC0EvCJBhWZcw4vI2rHxeswG6PdKW2DZvPT6CDQQaO6ja3RMfTtfsHl8FoFUdgx/ydvO5u3MClN87jjrIgAdhhABPsYxPaeqvH21u+VDKJyBcd2mrUjkqhzprpqrfVl2f8cvrGdOLMf86tnWROBWcMjDjpCdbkih/TvYb2NxJ0iTVcQY68/kdWuvFRFn2v2fJygXbh96rNfpiymg7g/iZjSJuxU1h5Tg3E6ax9KZFWlGCNRbSpDExS9b1ZSiQfMljwoCsC8dO9OoOetuMd7CBdtTMw9JtqugH+lCEe8lS2sTnSV+rlalL3oXIYr/f2vU0Xub2EmLWz3AY8ui1qxOqP5nLTsoQZcURJBqbwUelnUjMLJEKxfQcIXnSggQzHZ4IU5vMxKvdC3sW9p3Y4IVwctI4pBKegVJsnsDil78Vo8zNFX+dsTlHH5Yn6gyiNEjwhghBXHAnB0oa3YStQ85UCX0jCwr/hJWH+YATdnhk5nJiaxufjTvMVxqU4bBZYTcL+CBsziWb6IHSmfo4VV4JATvL+zZ9NhyxuqFh6ffg9MiQ0jigrT4LwPQqlGRAnEJ6YA6US9ujHEhbrfvH7aR1pugtjCT8fEFcZtuLs5cloA2eCDLMyotP3+x6JFPD7P8e50yMYin5kZl4aNJk8Hax4HeGxcZp50o=","layer_level":1},{"id":"3affd76c-6cde-4077-ab62-dc843b5cc1ad","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Configuration Guide","description":"configuration-guide","prompt":"Create comprehensive content for this section focused on the configuration system of the novitai application. Explain the configuration-as-code approach using TypeScript with Joi validation for runtime safety. Document all environment variables including NOVITA_API_KEY, WEBHOOK_SECRET, PORT, LOG_LEVEL, and database/connection settings. Describe the configuration hierarchy and merging strategy across different environments (development, staging, production). Explain how configuration values are injected into services and middleware. Provide examples of environment-specific configurations using Docker Compose override files. Detail the validation process that occurs at startup and the failure modes for invalid configurations. Include a complete table of all configurable parameters, their default values, allowed formats, and security considerations (e.g., secrets masking). Show how to extend the configuration system with custom parameters following the existing pattern. Provide troubleshooting guidance for common configuration issues like missing variables, type mismatches, and environment conflicts.","parent_id":"","order":4,"progress_status":"completed","dependent_files":"src/config/config.ts,docker-compose.yml,docker-compose.override.yml,docker-compose.prod.yml","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.481592+08:00","gmt_modified":"2025-09-16T12:28:03.290373+08:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllG3KeKoHrt3VUYbwJdfZuc0oxoKZ34OseePg+VVHDrdEhdI9NXcR0MdzCBvFt4fAMxVmtHcDvkMuSxFJIJkbdXFFyhtv8AWJlx40lVGSHyr3yrOWuwmcb6yuxeEQ+lUoZTEB2Z+xm3ACxWO1F9Oija+04BMN4Sy+P45beSdRbrHda7yTywAbhfiBQUIaHtSfpUWl8FIqVFChScmDRlcUUDlQ3k9v7Lp+6OegFxc/LsYXBcBFHt3EucvsHmCrzpt9M6UduhRwEC5IYffWwohpF/4NSkfAjN+ZTV3HFMvmlDlL0kVM5fI718ycadB2VW9V+3U7VHEpB8rRZ0giRQx5TFdwEzE0NCX6UBdBGszQXUi9I+Kky+ikhziTTAcV7AliVHFXGIbTS9bbMJPBYDwDFmhtOtqFPdCFkjEnxFu0U3jMjMBRGkdznLz+h8i2JekMxZu+xErjJ6OciPKrWYSVtcaWJ0kkYuHvEKDoYWiEYTtdpdYm5yHzEq8hU/NcLoJeWXYekj1n7pryC14eW1Gvqy2ubjREQ5Cy3q9elGPdZpSnIVkY5rZRhmB5l+l9WcXYxBI1QCDhbAAsHclATGpRYlVvXhMT9MuW3dCPfFtrdbFbDfhLuFewvLglfzqtQnBi/aVIH6wpfj/ngcOBRusoG9IeqknMHWixPM72Pi5f3MzwzAXDXRpZt3i16uOiNijRmqbf4JYYrY3Hd3R/f5shDjjckkJPMsG9dVEVA1jAo9UqIzbx24WxgkoaitW0QfirxioeU5ERJ1waFtTPrPz4VyjkisK/ZB7Sszm10DIsOcZF/Jab2znCnZ3wQsyStnIwpan7f6ayzHoJflYbuwoeagvHT0UU2ls1g4137MJzn2Io+1gXoP1pzOhxM0cOR0wovMfCu/oyoBmMXJpuv85DKSnQK8feCvYCtWmPQqPINEGnnOfXMHOFutmQSexrlpSi7DXbFfrCaNwv5EN1jEOUfOmoRnPqau2OpjW8AauxubBTp36KZU/n0Go1kLxj3AqlWc8hhgxUTXotEeWuuYp12e8vaq4ssjIUy/q5EctLPG+nE5i1z97dVAZejCai+xq1ea/mCxY768yk8N7cgNdpWgx5JKBoDPMsOfp0BGJI6G8jv8v/HS3dlwa+jM/eD5la9vVcjf5h44FKPZ0mdR3byjgunPCBr1fvUAMdUE80VJ7M1hD0bLbWOrdgsMV+7gcZYAvgwoBV8FLqVehKhEaQ6hE1hPAj6wMzNPMmjmVSCYxGgVQi1rRbGOh0BbBOIvbWS6jNAwVbnyPqE77Scs7YoY9IJ78IqyuT8QOsCuA/kO8+TfphlYJ4NDbTyWJzJ1w08aULmaqzqttofVmX6S9RJdxJKxJ4noek9H9JgSrKTmikUBtwu1TGBTv8hIIJZ3NDyklRIntbmqwre2Dw1mnzhyM7oQoB+d16WGgOHqTgtPI7tnxTZnyOZiAHzRQkczadEN9J/DkEOolrx5DVssyuviQ5kl/z4lR/IhJC8epD6uGo+o/GdFJppbwkSY4Jk+M1zuWpcBVriPxtpFhjZ4qjItu7q1fq/w0yU9zaGSk74akYK8nYDtL9efI2JtBFYpB5hlTyunN4bil4FuutIa9RYcAWojQr+QGv+bE50Q47yvJRSnFGlUc5zyCoM7qH+cP+sZRFJ82oAItzto7WUHKtsAXVIb7XCDNjvP7i7xbEZ069nEVrI36hq2HcwnUW8vK8fVJHgZCuoFus8Oe52sbENaPsek8HuaLKfAzbXb5nWjk3KO3dKkfCHJYE/r1uCtT0wrJ0ZvShAowHgLNrUyU1ieRx2e8GjG/pNOFg4Mlzlq5sgSXVe+7sDJ+MjKjyDd+qty0KzCYLAd+3ymFO3izR20jWXin/JEtiYKSVGLsQyg9paS9SLGkzmFOVw5vgdrZqAg==","layer_level":0},{"id":"5c55b078-bfc1-471e-9280-6c85c755b77e","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Metrics Service","description":"service-architecture-metrics","prompt":"Develop detailed content for the MetricsService, which enables observability by collecting and exposing system performance data. Explain its role in tracking request latency, error rates, and service health metrics consumed by monitoring tools. Document the instrumentation of key operations across services, including counter, gauge, and histogram usage. Detail integration with Express middleware to capture HTTP metrics and how data is exposed via the /api/metrics endpoint. Provide examples of metric registration and reporting patterns used in the codebase. Address scalability of metrics collection under high load and data retention considerations. Include guidance on integrating with external monitoring systems like Prometheus or Grafana.","parent_id":"5cab9a17-b1b4-4ac2-9f23-da0cd91f3586","order":4,"progress_status":"completed","dependent_files":"src/services/metricsService.ts,src/services/__tests__/metricsService.test.ts,src/middleware/metricsMiddleware.ts,src/routes/metrics.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:53.560608+08:00","gmt_modified":"2025-09-16T12:44:40.228989+08:00","raw_data":"WikiEncrypted:vMsgMax61wW2sTWhXd8DH0697F1iiMHZ0hCAeaoomJPenozs8PTAIaTzCK3Ja3JG7V78TcpM7U3ILFjjXvXDYyuCD7pvOgEuN3j7UM5WIilhhpzcyv1Zg8jUmx2A3csfYC2ZPUEXdnam1XDerL8RJlc+j6BpEmTMyFAJiCiASAY7soXRElftM9nNnrZCXDqMOywVIXxVp4J1qCzbF7NdY0HIlmi9B9+jrYOhO9a5P5E+IR3zU+50MYTajpSQvdj45sDVn+e6LakRQ7v8JokpxL3CY6J1SsgpuLX6rJz3mIgRh7dLvpHwEu6zrgSj1/yrSIFJWe2gFQaBlQbJ5Rsm8W60dF6v0xaZGEI9BrdajUHfSK+MdHj3Kvp6bD6hNAkdrILGP6F/LE+1HMyWdHe4MwFbzGiQ1l651EAoa3NCh+NNJr0wKyWE+eeHhqTBlyXulII+9A9w2XaNANUqcEWcezk65PcBCFIv+pe3T9V3Eo7z3DBck27F15SU7Ee9gGsD/6GifGRoiZXHxHk8SflooqlXK0uHpRNNHBhRA89pt1/AOOUVUAJhtce8Nbshx2Cm+D0A5czo/FJ4kbrCBOevqZwshHmn1AJj0R6k7oH08uwmeneIeu6W0Qapl4otAVLzuIs+qBH39/SYHWc9WM6kvwccxUKYfJ4ML5tvetDFDaqNkMC1DYJoS7ebjL03mmhGFx3YFFfjJyrPrg8t3TFu1iUqk+dbyj7XaGe+K3qkw+NVwshFXc/iTrHwwQj9gTNlFH1ZTDfkTza7BxP+GxoHt8vV/smEyi637NCibcFVqDBmca9cCwHmL6y24v9DYIVllrcvblhnXb944dB/aOswGBFNVya5eaaH+BlvEQtzRQqCe7ilzCR9XQbfPCqVqLUdMPsci+hsgduLuBCdkZzvtgagXWMvwLX+LEMF/qwFQ1gad4/EqI4p2CwdsdFkC1xNCOTfu/3BWSqrXXoHrZGOjVwJRbcWw9+UvMvEV7wtEEkhoVHtU98eiDvxMqeKtxDuHO1GCR+D/Tx54I6CiM2ohegwgWzieUpZk1I6d/ynJPzgLGPB0sDLS5mv2dLVKTST77max6E7C8gwmU+RaEbYR48YrhjsbhJDu7txSbCuPrT/5CrpfbuSCDaurc46zbqCqaYK9HAsLFi1dFDUBHmsOtkyqYOCiojc82FmXSuWCtI34dyTIGmoWHF8/zBSVCN6aMH0wwgOn5qaxtEVbx5MLNbNZf3OIefNYRJPdQxMzbiOYXtW2u8WLajD55U2IOdZ9awzWNQUnzRQnM9C5Y+K4fKyA4URHBT4BJgKdABvsrVWLAiG11p5hOI6zM/CKPfgS7p6Rckfxw+QBuxVy+WX3HJsPTJ30DpcE02lbN79IM+V9ZD/wb+ZyxWSiPif9VNW5IxAsbz3l1tzfdRVFXTcNkOj632g2WtjwCFiBkPr+e5++s+Bk5mHIbJY+kKvcjRq6n0/QfWbdRzeT0yp0/1cQDFPkW6/WurXElLKcDNQMuc=","layer_level":1},{"id":"ef82e9a1-7273-4190-8ee5-1896a534f77d","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Instance Management System","description":"instance-management","prompt":"Create comprehensive content for this section focused on the GPU instance lifecycle management system. Explain the end-to-end workflow from API request to fully provisioned GPU instance. Detail the role of InstanceService in coordinating creation, monitoring, and termination. Describe the job queue pattern implemented in JobQueueService that handles asynchronous instance provisioning. Document the integration with Novita.ai API through NovitaApiService and the HTTP client wrapper in NovitaClient.ts. Explain the polling mechanism for instance status updates and the criteria for determining readiness. Cover the template-based configuration system that allows predefined instance configurations. Include the failure recovery mechanisms and retry logic for transient API errors. Provide sequence diagrams showing the interaction between components during instance creation. Address performance considerations such as polling intervals, timeout settings, and resource cleanup. Include best practices for implementing reliable instance management in client applications.","parent_id":"","order":5,"progress_status":"completed","dependent_files":"src/services/instanceService.ts,src/services/novitaApiService.ts,src/services/jobQueueService.ts,src/clients/novitaClient.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.482235+08:00","gmt_modified":"2025-09-16T12:29:34.277774+08:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"c85de36b-af98-46e5-9268-6bf72bf995f3","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Product \u0026 Template Services","description":"service-architecture-product-template","prompt":"Develop detailed content for the ProductService and TemplateService, which manage domain-specific data for GPU instance configurations. Explain how ProductService handles retrieval and validation of available GPU instance types and pricing options from the Novita.ai platform, while TemplateService manages pre-configured instance templates for rapid deployment. Document their methods for listing, retrieving, and validating products/templates, including caching strategies to minimize external API calls. Illustrate integration with InstanceService during instance creation to ensure valid configurations. Provide usage examples from the codebase showing how templates streamline provisioning. Address data consistency, versioning of templates, and error handling for outdated or missing configurations.","parent_id":"5cab9a17-b1b4-4ac2-9f23-da0cd91f3586","order":5,"progress_status":"completed","dependent_files":"src/services/productService.ts,src/services/templateService.ts,src/services/__tests__/productService.test.ts,src/services/__tests__/templateService.test.ts,src/examples/productServiceExample.ts,src/examples/templateServiceExample.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:53.561802+08:00","gmt_modified":"2025-09-16T12:45:25.257417+08:00","raw_data":"WikiEncrypted:vMsgMax61wW2sTWhXd8DH2F7cjdQk3OATi227RdeGESS+RHCvQCtN93s0phjIc8jJrpc3n9m00D71xYrRbQ4GrckKP3GZhZ5fjYcm85I1oGXH2DcJcFt1rh79izHT5EGAwL7kxeat9Ye7noR71RlHueoZW/inatnVrWGkYtTcXghTDzP9QkwhVIWuUwV1a1VMjbKWg+m5M4mrl9Q8RDR2TktcK18ppnWAjZBC5lcR4l4LvVl9lo3xH/F1PAX4dLnCZdlezw02Y1I978I7U/INm89Y5J4kY34oGIVQoxh1EeUt8oPM6gz2up5kZdrjgO1PxPEWqOE3xgh+wU3VpCDIoCfKZoVulFnFR0OsA9YsiBpGuZcpL5gE6Ukid5Y9eIbCFgFaJNig7bon+2DlRFb4qxMbWorzyfxCfw9v7yAvixMR1npzi9JLWeP42jZuGqSwoW92+ZvonwiOvVYHTM7O0+Xvg9RaIgX/UsnabJ0fvq44x4vvLaszS8ppBX9HeKB/B6+EcRKb1oma+Gz5U2Z+uKYFO9A/YvOMfZ9vkqsNppjv7ahIwd76d98Aq6/Mf3XjjbGTe4Eas7lO9YUG+/FJAQq3wAfIRjAzCxIqpmzyIlGl3AcwbmVgxFsVsMvPOZ2hjTik44twBaFKIOHaKJcizVBvsWrtAGC21w3BFAoHG6qGiZIv051HvDvPxR1vRvXMIQmVzbzdjloZfLxNXu4O9tZgWJKn8/R7MeATVnw0Xzjo8cvxERnkTTzuY3f6oi69CXO+umYQs4GZnnzzirS1KwEHb7M99AdM2mvzFoV7DNuqPGvIHC/kGt2Dw4Kj55YnZVW10sf2FlQdhox+/+K29LcbrLkFABgLhxjQUysvsM4Buj9H9rpmdgWR0JoFhkTiY8NFsVaYOOi436NWNwLWltxCttjeC4ZZjdfm9d9bxTZo/poTO0jLGGhh6FZv5ZlqTLvG7x3FwUbEprgdM7TAAZu3F8bFB8gIBFEGDV/w8Lorr1ATd+IULmu+8anhSXaGzz3dvtTl4n3DBrY5f5gBcfM4RUGwOAFU36X0a3RLduLen5hy5rktapBzEEvg8KmaTYdGvIpCEaw1x03Wjpigd/0Ydw0zYYSFPLhbzSNXN4Zb2cUVr0cZqiYq/Bc/+Ue6R+tz8w/BsltvrhaSfjCNSPzFly03DL/XH7yfRcTDGNUNzOHhEQye6M8z0KlB2rEjEhCLVlkMo2/k11tcZq+zDu4p6yhUucI7SFicTPRnAggmCBvsGA0RFTd6GCdhIQciC3GgR8bdlor5IAW2frXzcmCF2MGhAH5sIAre8TfJAWlEGSLrk6tv4m54OQ+bw7KB2hubJ1LGrEHbSGIVNjqcQ7eSRdRE6WcUDYOSqJcL6daraRq10/xPEPUKbUkzz1SHIq5EPbcyWuUPQQKVn/8EF1JZYi06zSCUtsBLYL4gGXX5Si36yv9SOeNEsf/G4UUjhEUySRwCR4m5gEJpDqM7D0/R6JXFzvDls2q3GVvMVun/JkUII3z76VnBsci3h+RlvbPWyUgoIxj2t8jbkcktevy+TuUawxE5Cz6JHfesEXZHBcTyn+0F7ARnVVvj72AwTAo/jFILEC9ZZ3HZmdWtuq/jjR2AEmWrEt3ffr7qLCT/hgs6hnSs47+9+lI0kEQX391FreF3/zNmLlVByT6XGL7ItVo0uN7VknURgKanIXSG8heOKOXUgmoaQ6wnI8zeTLhveeclN+OO9FGNFm8tHC60oDvO+2m+2ikI2WXcUQ=","layer_level":1},{"id":"5cab9a17-b1b4-4ac2-9f23-da0cd91f3586","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Service Architecture","description":"service-architecture","prompt":"Create architectural documentation for the service layer design of the novitai application. Describe the clean architecture pattern with clear separation between routes (presentation), services (business logic), clients (external integration), and utilities (cross-cutting concerns). Document the service composition pattern where index.ts imports and wires together all components. Explain the dependency graph: how routes depend on services, services depend on clients and other services, and all components depend on configuration. Detail the service interface contracts and method signatures. Illustrate the error propagation mechanism from services through middleware to standardized API responses. Include component diagrams showing the relationships between major service classes. Address scalability considerations such as stateless design, horizontal scaling potential, and database connection management. Document the principles for adding new services following the existing patterns. Explain the role of each service: CacheService for performance, MetricsService for observability, ProductService and TemplateService for domain logic.","parent_id":"","order":6,"progress_status":"completed","dependent_files":"src/services/,src/index.ts,src/middleware/,src/utils/","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.482852+08:00","gmt_modified":"2025-09-16T12:29:16.94969+08:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"5bdf5c2c-1508-4aa3-b900-eb59f5507253","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Job Worker Service","description":"service-architecture-job-worker","prompt":"Develop detailed content for the JobWorkerService, which executes background jobs enqueued by JobQueueService for asynchronous processing tasks. Explain its role in handling long-running operations such as instance startup monitoring and health verification without blocking the main request-response cycle. Document the job execution lifecycle, including polling loops, status updates, and completion handling. Detail integration with InstanceService and NovitaApiService to monitor remote instance states. Provide examples of worker concurrency management and graceful shutdown handling. Address failure recovery mechanisms, such as job re-queuing on timeout or crash, and logging practices for debugging background tasks.","parent_id":"5cab9a17-b1b4-4ac2-9f23-da0cd91f3586","order":6,"progress_status":"completed","dependent_files":"src/services/jobWorkerService.ts,src/services/__tests__/jobWorkerService.test.ts,src/services/jobQueueService.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:24:53.562869+08:00","gmt_modified":"2025-09-16T12:45:50.073048+08:00","raw_data":"WikiEncrypted:vMsgMax61wW2sTWhXd8DH0pKusOgl0oyROu/BpImDvHzapDsEXsPZ2DWOZqz/qbyrPxOko0wuHFVgbK82peclku5sQgu/4qj/uO/W+dwCb+G/cD6ol6vQi2kXFFHjznA2YVabwySugD5mJANV4vuDxi9uDJqI7aOyddA92U/TK4B6mgEyETXHcmKM9S1Ap13WX0pYZZNHykJLP8L7DraLleTfd0QQ2LdKQTwjZc3541LV0qTfnwiVmU+IidEO+reMbTJxSXnfbKc+RxHKmSKFTLkh3YgiyKE7OjG4BN4YIw3tJd65yWQA/H7p6mTY153uJnxIOHL+Q6NAHf7UZsMC6FqRKme5rQe6WgXPcLutHzthxBQo28VEduDta2ugHQbZpdByA606IX+3dL+KOEyk3NGShTq7CqrOR5Z8ZuGDI0zbI5uO8Rd58AH37JIxzARwn4elwHdy9jW+xDwVkftp//678bMgwLZDlgg6Z4iataF163pGwctuXlBetxQO2KH7je79FD7Z6S1YGWhLLQfy8AAGUQ++ywMmcW12aBCFL8eWS7nDL5pNyZh2KeBmK5e9VDrH0H5ET1ZHQos1tJZqSjRAzq7MTWfi3o/ImwTrYooZyYB7Ksky28jYz8HJD6a0j+Aj/0ARrHFufRzizC8EU7qmmD994mKpupfmogoUKYfri3oco8wfrp5wlthXPmFnMLs224fG98LsNE2ijN5dLjs/qz6gt473K2CPpZpTQOKkehbkLnJIA4X+Qj2/z5d5rnu54ANy3n2Fx14/PYh138n69+17Mbj5rrS13ixfhx5dePDYi3UFvWt1gsYDQYgGFEUZsrXbGk5jnuF3VyTWEakZ9t3wJI4eVSpZQwbFPAqc4uevMcGgnMcul9lz2SSAYZDhn7ieLaLgQTMdcYj5DhYB9XiuthMJ4YruAneiOUAjCksH2fkzLOD6mJdov4gy4vQLkPRYrZsKTmxxgh/rnQJ8wAInhcEwX0dBhH0B3dksWLEI4UxpozQt2BazY0T01DEap+S1etx/VhFaBtAaQl8AfAcgVOg4MNK8bPWCcCRFt1wkEgSa1XMwxMLCREiD4fjB2v//tAq+sTmRqdUe3agFFrMuZWV0Smewa+BDcnUwvewQwbGt8K8rfo6vQSn5F4KTiSUkaMnZc2eOE7HssJ/OnAXZszRZO0soiDPEt0OfZRdCiknDwzy0Yb2nj3qCdcyWdWE8Uy1WqhIduFE4mhQjSmkQKW6k+HWrmgIlyh0HrqNp1A/gYuU5L4fux4feBfXoH1cQ4poCzgOmqryR9dGfaYEZJ907B5JKtLDyNoOHY5Fi2ZcyZ2RtHt95TEdpEzEmI0QM3mYenjgqH6eq4xJ0I6hMq87OzNDG+2CbF1MjLjdzjtz2WGLnnybY7RAIF7+uazwR6Xg2FtFbuPIh5mk8C6/oiTx9WeMMJo+zTBtIvn0LsuZMKKzXnCdVFSE","layer_level":1},{"id":"2b660a96-0bc1-425b-9d17-8c19a11d22d1","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"External Integrations","description":"external-integrations","prompt":"Create comprehensive content for this section focused on the external integration points of the novitai application. Detail the integration with the Novita.ai API through the NovitaClient HTTP client wrapper, including authentication (API key), request signing, error handling, and retry mechanisms. Document the webhook notification system that sends POST requests to user-provided endpoints when instances are ready or encounter errors, including payload structure, signature verification using WEBHOOK_SECRET, and delivery guarantees. Explain the fault tolerance measures for external service failures, including circuit breakers and fallback behaviors. Provide guidance on testing integrations using mock servers and the provided examples. Include security considerations for handling third-party API credentials and validating incoming webhook signatures. Document the observability features for monitoring integration health, such as logging external request/response cycles and tracking delivery success rates. Address rate limiting imposed by external services and how the application handles it.","parent_id":"","order":7,"progress_status":"completed","dependent_files":"src/clients/novitaClient.ts,src/clients/webhookClient.ts,src/services/novitaApiService.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.48374+08:00","gmt_modified":"2025-09-16T12:30:16.543666+08:00","raw_data":"WikiEncrypted:AEnLflvTZ9QfFGHl8t1BHDVT+KtNcoIBA7yaF+ugkVStteH+coE6D34Sy8OJBQhjJukNp89NHuYhmuTtKglhqopV3ul3kgeqeX4N5q8010GQCUshLOcpbX3JKk/87DZbLyCKbJLnu+wvIpSO+ZGiyKz+5CeAw8r5wjvdIa+NDsXoABnsCo1CN36hyPQXXixZRvXDurv24NGNYDxGtFnuP7rNxI3sb7AhR4FlfMyik8LSug/bc4oKeP1ufngBrGQ+3qeaDsNmY+gRAwQ9eqY9QHaZ1iOXWvO1GoAtB3XEj40jbE3rzCz0K4E4ci78LuYlV6nvwH5WfRTQbmY7T/fFRYZ7pV/kR/tQC5GPcrv56MAcQDiZ2OJc1l0NDWKIVQXDpyoiSPEnZPO8N4naH+UTWShO8TwB3/lyAA94C6dYAZaWlf9gSOJpmaKQl5XcHMD/SbLI1oj3Vw2j8Ve1i0R6kV+G72NOdmFmsAoOMZsWD5qKmWXlQe6rbwBEkQQBQ7IamIFQVczMjEtnQaUY9ZO/Om+sXWLMzk0DIJvg3teBK3I4nkK05JXNsdrvm8R+yi/YbPYx+qTt/a/0AY5jGNuziYx6rwybDsmtwBB6JKSF/SuZ8W03xIBidBOIqH3KOSxyGMDc5Cc9mQC4brlZhNBhRu9TN81H3mqc+rLHWJzx6/2k1AxgMVH88Gh/Yhc9zs0GgDvTwAwNvQIokIX6b4EAXUnj2B/52xVI2jBEL3kq2in7KPXw9qHqnFOSzT+WOlDjKVMnITwLkPOoWjY3RknqW1NvlIibC5NknUqF9FRt/FpKeupTK69rId1+wIasOrf27FscZdxsDyCHuYYEhmPvLArJmWsY3GG+keutXFIUD0ynNJ6tnJExC+ROnplA0VBmExzuFY8BuSsCA0hNzpZd0BxoEfJ4UEb3FwNaE4sE8KfoJyRKP8fXuqEYNXavHBDfGZVvDiPSLte+yNbO6gO54+TkXxqqKI3UE/Y/21ITp9zhqAWWdpX4MTOHEiBVbUclnr4ln1AZ2ppEkzfbBr0E3rDKY8QxYlr5MpDIcytTVJryCg088Pu/rDbKlo9nd/Qtw2MGjqIrPtU+gjsZbxTVD3C+p+3Y48fv9yyzgM4jtKNhARu68rZbBkWtoHDCybPXWz8UXwpLw6HhUw5L6M2Q1DH94RoRMQ39Fu1K3zMio9Sjkg9SzpsF4/xl9vVUfFdSwT2vYHM53F53+Pd+YryacakcGyRvtYe07u03HadUWQ6WCYo5HYuXWtU6cbN0B/7LGYJ3yHlQTzI4CvPWZm/VeKIUoZQgOgNI2Xqy2XXOY9y4KMyiDOnOPOt2zxctH8lvB9Z/c+PTqX6IKxn/8yatCNC/ydz98obUG7o3gwtEixbjD1iDvnswYFGzxZhtkBO6iQW296uihg6lmkYL3Y0mZbF77OF5wkQiOuTa0qciJQRZ5fwX8LRaqY67v8VLl5xh1FkxUcAE0MC+M5/bBY7F/1Z/Af5s5DedJ3CYCIDVSGN951VkbT1chN55z0aNGZ3woPfruQXzKvuhFRgtuKpOxtyuJIwe2UTpcCXcqwhMDH/Ow7SlbgsjxqSvincr4Bgjpn1a9TNR1nwv5RLZSrhfCBU3qZE1tkukQu2a5nnMGlbkE70mfHJNvcrZ3czWk+v2NaGfZKPyYdahIf/k/rYMFXRW68X9ZV68SPu82jiTuDU7UI0whutAczq0zr5p41R6yCp7BBonZFwCRF+UN9cnHINtN0C5ileIvR/HnoCpYY6WPkQWD0fsHvLZQRxFd+z3wbXsLMa+Fw90Qc3U99IJqywfHCVm8nJnLGP4sxSRQwKvUeDbQf4lFI3InM62w82OqYfL7+MmeimA/AAYxeHDPJYiyNQzh7SDU3UigEgfw8Hm5ny5oUNoFlE4WHVAqn+0dk+50yIVhNyMv/JQjJmE5PLQiwob9yyo6s+d4r2wW53VaF4XHnYGLimzYEvFmiW1","layer_level":0},{"id":"55e0095d-7368-461f-92af-ef35be06cb04","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Data Models \u0026 Type Definitions","description":"data-models","prompt":"Create comprehensive data model documentation for the core entities in the novitai application. Detail the InstanceDetails interface including properties like id, status, created_at, template_id, and connection_info. Document the CreateInstanceRequest validation schema with required and optional fields, and their data types and constraints. Explain the Job interface used in the queue system with type, payload, status, and retry metadata. Describe the HealthCheckResponse structure with system status and dependency checks. Document the validation rules implemented using Joi in validation.ts, including custom validators and error messages. Include type relationships and inheritance where applicable. Provide examples of valid and invalid data instances for each major type. Explain how these TypeScript interfaces are used for both runtime validation and API contract documentation. Address the versioning strategy for data models and backward compatibility considerations when evolving the schemas.","parent_id":"","order":8,"progress_status":"completed","dependent_files":"src/types/api.ts,src/types/validation.ts,src/types/job.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.484822+08:00","gmt_modified":"2025-09-16T12:30:47.363177+08:00","raw_data":"WikiEncrypted:klcgW2PbPxJambbKMzvFtx4yZMulRdNd9HqN3nq5P5dm9RJUgmpT9mDxZh+SOD9d/uAgoXLp7nm8voWarXn7i//HabMsYrfMkkn+aYoGXjVvBnSFizulDOlgr2mHEM0ZzTlEpCy0VVkD2dA6miapaI4/RqkCf3nH1f6c159WEb++jNrr3U5CQS9pINpfNhmphMYO/EYf4Fa+JQaouTr+xtvW8Uez/nF4GWxIM9PlfqgOvme5/KwAgVcZbfsnLiMc8WAAXnofTx8i4mvPuJu352uMFektIXHzK3v6dnc9QZy0Ylb8y4pXJNBMxv9CNXVZZwFyuiFjIVFrcJn/rj6/uuwGLI0NKLzylEamGj4Mg8xSZ4zR2Y2FQVbs5GjTxqFM3oX2sdz6466GwRZ8juTgRu8SvE2ce5fP/TWramzjhgRIvlxambyT72PNkjtRicxDWgdwrrtZKtzHjpx7yTEFdQ/4Ya3aHujZ6CyPF4iwkYB3BBoszWEPjP9kNA1oZzKtB6wMK0OpnC2WvYomyAxHlGtZYTReqVNmf2fqweVrNg1L9DIjTBWedFpgcA2qePk9b9KiP715p9qycmJWbleCUXZYJMx8Kiw1zpCsQb/M/qjc0Dl+xeVza6vFTveTCMNI1vxafjHcUQG2Ty4Ejlot5ajmCkDijDwPAgxWt/Tk1DOeCELmUg7H2ae50mnimsFQ+33xo+ywH8gD6sX2uZjIz+UJq1P/iuy55DSMz1C7LG0IKV4ZC1rkEvJI3Vd/eNfwjCzit16WPuCiobsxifHgea2dsbe1gXWyUw5IcUoMItU0deUUCwLMO2eu/RNV6fFykAaY0irXdRb232aMo8EDypWBqNtA7SA5emXbHcWLH9xrI5WJhzoLlxRF0GkbC0Mmo7clRlRJDxUngpv+U0P9Pc4jeTb9BWtmAylIRZ4gSgeQtPGEcLkq026qu/rYl8DNzcHrIopkJXjCZB6XtFiLXnOuIznWM8oumBVeua0krMg2zqV9V1hkCKDbE2MzmWGk+wbD6Lr3L4F6wk1wJjAmYv6snzyk8fVNNAg+rsvV3/MGALVACBsS5tBiRU4RPnNLaW37z8zV8MeHaHM6nyEOH8ABoM6u+LB6Pwr6ugFcDokLPVUqoKzCnTFSUTm+uj71ibymRxPMTIql5X9pI7ibYUnswQ2fzBu7T7wozMTV2+LioUWsMarZ7WiA6jGQfNytwDuVntK8ozS34mN8e0hA6LQ5UjQFViSG9idi92oziqO9zRgV/9soXDjB8DDveGN8MTONrFbr5X3MOmOIYcEcw/iozfs561Rzq/NRAUx5477xQgj4BVsJl5IsWjGlaHhRGTZBa0qt+EC4yV5fVwLEDIL1Jbvjo071cbcBEMLptxugsV07ep1ZH4WyX0WdjGJ1qzT7NBIyaSD3po3e5Kyfj2wtvu5T5rVE72ydc7F5lc6ej/6+JHSTIJsiJ7S2Kpa/X6Y567Anh8DMG22b0DNT7AT+4jLML1x9pZLi1zC43mLAFXRZ0A/9RUmIeXwZeghHjdWGQjuJZ4rR1HubtbKZPSo7S/pf6YaC985z+fNNn5HNeNxSfZRO44fLqFBzWAXoVJkUYaao2MLwytjyTjABR94z0RdKDOtg6ZQJnHqQQqRzmUHXMVgMzstZkzLA1yOE7zEefVIBT49P+yYrcb3M6lmZ9f0pzGXf5lwawzUIhTXXnBzCZ5oh1s2hrv1ng6W9dDcz1CPCyheiM6L5qZOAaRNXK9SNBD4DbrMh23IvT8I=","layer_level":0},{"id":"b51b9a62-2012-4de9-b4aa-b48ed1824998","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Middleware \u0026 Request Processing","description":"middleware-system","prompt":"Create comprehensive content for this section focused on the Express middleware pipeline in the novitai application. Explain the role of each middleware component in the request processing chain. Detail the requestLogger middleware that captures incoming requests with correlation IDs for tracing. Document the metricsMiddleware that collects HTTP request metrics (latency, status codes) for monitoring. Describe the centralized errorHandler middleware that standardizes error responses and logs stack traces. Explain the security middleware (Helmet, CORS) configuration for production safety. Cover the custom logging implementation using Winston with structured JSON output and log level filtering. Include the error classification system with custom error types (ValidationError, ServiceError, etc.). Provide examples of middleware composition in src/index.ts. Address performance implications of middleware execution order and suggest optimization strategies. Include guidance on adding custom middleware for features like rate limiting or request validation.","parent_id":"","order":9,"progress_status":"completed","dependent_files":"src/middleware/errorHandler.ts,src/middleware/metricsMiddleware.ts,src/middleware/requestLogger.ts,src/utils/logger.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.48542+08:00","gmt_modified":"2025-09-16T12:31:20.334994+08:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"87a8f9aa-9481-4113-b82e-a99578c1325f","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Deployment \u0026 Operations","description":"deployment-operations","prompt":"Create comprehensive content for this section focused on deploying and operating the novitai application in production environments. Document the Docker-based deployment strategy using the multi-stage Dockerfile for optimized image builds. Explain the Docker Compose configuration for different environments (development, production) and the role of override files. Provide step-by-step deployment procedures for both development and production using the provided shell scripts (deploy-dev.sh, deploy-prod.sh). Detail the health check mechanism using health-check.sh and the /health endpoint for container orchestration. Cover backup procedures using backup.sh and disaster recovery considerations. Include production best practices: environment variable management, log rotation, monitoring setup, and security hardening. Document the CI/CD considerations and how to integrate with common deployment platforms. Address scaling strategies, resource requirements, and performance tuning parameters. Provide operational runbooks for common scenarios like restarts, upgrades, and incident response.","parent_id":"","order":10,"progress_status":"completed","dependent_files":"Dockerfile,docker-compose.yml,docker-compose.prod.yml,scripts/deploy-prod.sh,scripts/health-check.sh,DEPLOYMENT.md,DOCKER_DEPLOYMENT_SUMMARY.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.485946+08:00","gmt_modified":"2025-09-16T12:31:41.129744+08:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"1dd73801-136d-4407-ba70-496ea0593eee","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Testing Strategy","description":"testing-strategy","prompt":"Create comprehensive content for this section focused on the testing approach in the novitai application. Document the multi-layered testing strategy including unit tests, integration tests, end-to-end tests, and performance tests. Explain the use of Jest as the testing framework with TypeScript support through ts-jest. Detail the test structure with separate directories for unit, integration, and E2E tests. Describe the testing of services in isolation using mocks for external dependencies. Document the API integration tests using Supertest to verify route handlers and response schemas. Cover the end-to-end test suite that validates the complete instance creation workflow. Include the performance test suite that measures API response times under load. Explain the test setup and teardown procedures in setup.ts and fixture management. Provide guidance on writing new tests following the project conventions. Address code coverage goals, test execution commands, and CI integration using the Makefile. Include troubleshooting tips for flaky tests and debugging strategies.","parent_id":"","order":11,"progress_status":"completed","dependent_files":"src/__tests__/,jest.config.js,src/middleware/__tests__/,src/services/__tests__/,src/routes/__tests__/","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.486477+08:00","gmt_modified":"2025-09-16T12:32:46.840825+08:00","raw_data":"WikiEncrypted:a51tw9+B5Xez88YuZqi4cPV0J1CJauHTZselAZQ9sG40Lb0MosJIfbxZqj+gJA5m8musMdI2GJsw80+O72ORSYVDo1kcYOodfNwqAsl5OONM56jd8vssQzIg5OkzhbarZvLtrY43aHTFIz9qrzHQ0DOzcFXSoMBC8TXv/i7YJ6fwYAP66nx+BAjFuSPExyuCxPlgqP06oULS/jos9BU6JJ4BLHOLCvSdogKtcgz9AV1soRTuEr6L1iRYJjt4WJV8vaibBiV2g6z/Kh8L6uMVJnZ/U0EwmuiW5IOKrhehkHSxBg9A3I+j9T+fa+Gt3mDhz2DUQ53gZRVGsauaIxyXpcxEq2SJGXiitBH0wKiQacw9ed5pcGFbTIp9B1i+NhSfK19TnvGr/xqou/QoPgleUoEY4e22RNGr1gRioo9KZ1/+R0ha2h8NJP//0HgSR+IOk8zriGQrDTeHBu8dfUtx7T0cQDZjC87nJd7SULNvsVXeGoeAsRO2n1ameu5N83A15DcRgj9GgF9iUqNKJrqwVj9k9mOaSjNOf0fWv0km1qkZy0ArWCXyKkKanoMN9NUbNb8PYVE5K2ldiMku31BlWZqXxNZik8FgqbhbwcTVAmg/g3aWbeVx/vxMI6K4RvE2TZ8fo5NWFU87I+7Yg5f6/jUy71BJzCS0S0NreEVSOAjG/QBR1HyUsp510sSFx+hnuJxZLu2FdN8cDP/WaavamvaiigCFj+GGvBgT7FwpGU7HpDFAcb19pX4j4w66e1eXRYKtW4LtT8bjjlHS0O5pk3aBd752Fl1icyCix8Khkz2Ddc3YVODL3f9TdR9aQpJbQCOs3AuTfaZEG+ziek6s6KN+NuQ67ctZN98ImpHTpOMo+YITkU5eQ6DGLZ63rRVcw9qmorcqou0jnyDd1/yRu/sEH9hgXQ4IvLCZkJMS13/JkHqkixsgCGqCRhp4EGxcR/+W5NrjJeNbqxE9x7FC5m8+1k09OQEawOvdqUvwQqi0rcGUEuOBVjK01gL1D0O+krsPkYx0K7x+RVMkconEP0A39k62FffBlpjnPJHl463zL7nKzrlkcvLHIw6/YvuOHLLYxBxjtN6emggM0MylIemrXoyKIKqXI8iAIU+Ys1yFBHFbmCPIXBrcL1DfVOTtj8e5SK2ZLseMgrJV7v4ukoMRTPOYKj8N1kKXKcMvpX7E8/q0n+zrxunW6DiJkvhkxtVYfBRB6yeQlzzWo5xsSlqGqd8qqn4Bo1fz/nq7beMglBKIDnPXlKx7Ogc222hQU9V8sqX0i9UqHIBv3zPnSZyOQWA538kzfuwGp03FsotDrchvwf399bHpZ1b1NuUe+/q4ELP6/VCgkfKKqczeZIlSwuV9ncnX90yJo07iJ5sesNVCpMlnZTVAlSmrBliDf13QpoD7uKI/J6FLYU1j6kJPptDL9C3XChDgoBklyZZzOjbENJyZbtxY7/xEwqM2qUBVbA7IyF3bL9tByb4AVpJjYdEhRarikxyOVcsi7cNSggjmzSG10Yo6+F1AdDZ+57pCDSUmvFsVgG4zmC7S2HhvmEQSZjNzsUmYY/ReyRNYBwGpHvbZoVTbri/nMjlr+SjBnathW6cb+m3TXyT6R/G4pFUx6QrCPlff0FBn9yxdRRGHOlkCMOQn3wmdR0cN/zRYPH26xWSnm4kkuHZQfNe7r3VNTSzVbusybHMQr8aFqg1l24YJUPvWLWaUCV0KdjOMibEyqoGtiEiveKnA7V1mesx24keSdStgKu4USHqzcu4K7P4dZwKnBH+ZOizp5/ScZYNNI9Pqj50qH1SPJishsoTXdDi+z19kw9WDZMO9mxf5zaWLtzjFbAxxOcxXWs65/cpCrZG8d/DhGxjFY/eGceE1FeWK9VpzRFVDeNDTzI9hCOhueLHxCNH0MJCn","layer_level":0},{"id":"af30368d-cc3d-4dbd-91cf-b485f925714f","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Client Integration Guide","description":"client-integration","prompt":"Create comprehensive content for this section focused on integrating with the novitai API from client applications. Provide detailed implementation guides for both Node.js and Python clients based on the examples in client-examples/. Document the recommended client libraries (axios for Node.js, requests for Python) and authentication patterns. Include complete code examples for creating instances, polling for status, and handling webhook notifications. Explain error handling strategies including retry logic with exponential backoff and handling rate limits. Cover webhook signature verification to ensure message authenticity. Provide guidance on implementing robust client applications that handle network failures and service interruptions. Include performance tips such as connection pooling and efficient polling intervals. Address security considerations for storing API keys and protecting webhook endpoints. Show how to use the provided examples as starting points for production integrations.","parent_id":"","order":12,"progress_status":"completed","dependent_files":"client-examples/nodejs/,client-examples/python/,client-examples/README.md,src/examples/","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.487097+08:00","gmt_modified":"2025-09-16T12:32:31.189808+08:00","raw_data":"WikiEncrypted:kSMJmF88qRkP2ukfVdKPFOa+VyCsVEakaTjl7F3qIvWhdPR0c67bo71/ntIvtxzYSfjLwsFNSemPCpmUtccGHnjbT5U5uajfKY7tBXNXcAUog531HK/YBsP49Adazw3xqznCGLR8RhDU/Q+vPRAArFJ3JRGDO5mTkZqq8YowlKKnyYvgrAu2Dev680AGEME9B9RNwCeCybM93mMOfDoGu3uv0nHb7cKpycq+3ivgUrQCvOdu6r92ozbdn6z9rEoOi2Jn0lknxx3Ya+bS+QMU6jg/Ld1FEoppGSjggtrllaNeWxG9yh2Jmfy11C+ttuOowxpE7YKx8I5uG2V7y6wl4teaEcMfem3auoDc6EoY9dLU8FZ8cNdj9H/c57ZNjtFP36n/kVL2OFn6gjcY7hpwMQn5YWqXxien3Ziy/Rq/AUkk0F3LrFUKBn+vXPnm26Rt07CCyyc4+3N1RMkMv9443hIsdRo5oDpVsxVJKAFOoESV2k/NguZC2KKcu0tzoKPGZNk1QiujoUiURsrCLTOvInhTgL+7fv/di53E28qOVRcPKJ1zI5VkCIfmjn7KuxZ9bO04O0s40ldlP7jCcAvr51EKEPevARvaaId8NoD9W52xXAvG4jiMe8iqNDeot+ZfGz0jKCbdW8r2DzqB2zqBNGc5Wo2G8tGJ+xr1dGiV3SyjvYBUesn9T92H2H0ET0/eChUyikkjYDKXK4pmUxAuKaOaAgakLPiOrBIN2NWaf15fLxrHYfGvAPHDbjD19WDK1QcN5ZDaWbGMRRGXxaTMIBod0ZJesp6WTwjKZLUvwkre2qW5pKzLBiYEpYItqRDlRm1W8kYi9ESyfIXA/1hDgtfIrqLogknXmihxZHH2BGaCJZoPWVoGOYQFhcbri0AoLJB+cHr2WWD1QOCh0jb0UOIiEpr7naJhaHwRgpc809iouUka3wZ+8zrOdUOlF38Sigvm+/TeGQSmgUbGU7HHqaCFX9h6kLxzbKQmzqK3KHzGV5oQMTXzwVnn4nIovrVPwgnQaZymipkBE9biFaBiwNXNHt2oJ5eqAnrwPQAuUBMYEo2VD/697qXYQKlqqGVkvzjt0M/9E9L5SRE4wul5NBJMVk4g9GUXJ6aQl67Af3tau3EGzrekwB1/MUofKbs4HqCf4Joo3sZw8zyBIiuMK7pRDCaAir+3rRzh4ExJob6P421zrQuE2A+56EGribaZPamd1Z0GFHL9Hp2iVxmYQ50dZAKugCFZunET57mQbur1dBSeJBABhdhOwygg4Ol8D5ofTZ0NqBDC8/XisjqR5eAxdTAIyjSunCBJHI2Jf3fOwTtkhCxWXvsnCU/B35EOIwZlG5a+IR7epR9gxOaIT9Hlk5KORcxEVAkgRvqa9IHQ+umnwYvZuyp2t8qFTqJ26OOCtBsgq5wri2n2QN2iuzc1fYxoHy7YwadUHdfQlCvxBLtu4RpPWQGeDmV6CYo2r8vSAehAeu4ClLeAIXYRmx66OGORPPnidDIHVAIlIPD2DuOmZzDpMZARHLYaXxo3GUxCsQcKFycvXSKY0nVnWcLzSPgK/AWABhP1E3xk6+10XspPKqb1zHNkj9r+uDbH0WJB43763N7FjQVK7Y8jwn3aBxN8P3feU4wifAKIjBagH83eZEaMFSQAWNdRt5/db7BFf3Kb0sBO5BDT+ASjY+xgInBcyHRg8+h5pZmBqtUiu4n6ZVXX1qXTlGNeP66nSCgky6pHXLO4jpel0zU+WQ0CV0C1L9hYVoXkafkK/gz0/lKOE+5bz+hemLiPesjyIYCLZ0Dt+WGNQTuWWI0/PqR1J628LSOb8Nx5NJvulMwqzTDPyGqQRrf0pjoAxodE","layer_level":0},{"id":"d00bf40a-8fd8-43da-a987-e18e4e67fb63","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","name":"Troubleshooting Guide","description":"troubleshooting","prompt":"Create comprehensive content for this section focused on diagnosing and resolving issues in the novitai application. Document the diagnostic tools and techniques available, including structured logging, metrics endpoints, and health checks. Provide a comprehensive error catalog mapping error codes and messages to root causes and solutions. Cover common issues such as failed instance creation, webhook delivery failures, configuration errors, and performance degradation. Explain how to interpret log entries with correlation IDs to trace request flows. Document the use of /health and /api/metrics endpoints for system diagnosis. Include troubleshooting procedures for Docker deployment issues, network connectivity problems, and external API failures. Provide debugging commands and scripts (like health-check.sh) for rapid diagnosis. Address monitoring setup to detect issues proactively. Include escalation paths and support resources for unresolved problems. Make this guide actionable with step-by-step diagnostic trees for major failure modes.","parent_id":"","order":13,"progress_status":"completed","dependent_files":"src/middleware/errorHandler.ts,src/utils/logger.ts,logs/,scripts/health-check.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-16T12:23:59.487769+08:00","gmt_modified":"2025-09-16T12:34:23.162238+08:00","raw_data":"WikiEncrypted:CaKOW8OSSWs4aEYk06Hu0hGGy7zXJE5t3XZJK+9x87U7MbBuSJQZj5VKy37lfAZWgpVSARG4oqjCnDlCo8e0TXBASAOkVE+MIhFiYyU0WTp32nvgtKKKx3daoW43mIjmpjlG9QvAWoSQENxl7Cn9Y4ueMMBLWjj2Xh2p7L6orWK/Cm3GmmMYXJIqo7lGJ1SRXFO3X2I3cneE4M2Gj3MTSA/YSbiR5mc5jFSXqFuvysiibzOCTdjP+BAc0AIkT4Nn0Rt5sVqAgajB00Z1k21xYawHWXhjhKMKLnvawFH2Su6RCS/aeA6VVQbg8Bj+jnTPHO1dUQ+kOQYpBOxZ9DeNnA2t+c5U54EjxSn0sF4o+j4sTcuZmn7UhgyMnHVZP6rnzwT+vtZ/uvGaopalZDN3wtDoyo/wKqsr2HH1PZ84hZFfbjb1H/DsmS+CmzdNtEwa6ZiKk5lP0Gf0GysF93rt7oqJOYdzF1Yt1KRI7n++Z+6Wm9uB76iOliz3ZWO+nQN5LqVdngZ/yGYn36Hjwt4I5z+rD1EEL3Gpkc0fXsCXNu6wza8MO4z/qRs8RlNJ/HUBiR307OVGoCCye4vTxOmbvCdIQf86+SlO7XGsRDZTKoiMBmoYri/ELUFEf9GH7MDTveqnjpsUXfavY+2/Fe7zgwA0dSO5kEoqnpLmClqy8mQJwvdEsvnXmr5boeE0w/P9QC8UY2ZUKLU+/1KXjS6o+570JxrP/yuct+UERXQ0vIxLK9K4ji9swFKywGQBOm5D/ZPPrtSAPOsp7MFLlmkTkouHw9Go4i19W6sMfrQwNUs0pvYjEq6iVy4vNNw35fxyZHAzV+ZSrbsi6Beip2/FGSHnZXU/X+YU514he52Pw2DbyQOuuhEoB9UTEW5cu1a4ZN+666FhcEF+MQxx+WhiZlJpU8vkyy186blXcG8nndJn9rChNII+OAHqaAkHlCcFJ10g4+IvavJLhylXg/z7ZQBwgwpXBTLzH7S1Q2wsV+0a2WZP4zW4s6wMf0QeYb1tgpKFm40TEyIQPtPDPOHWiCUnltopz45lUbwr4bpIAuZJMh9v62iPPwzWEJOgfiKguLd3Um0/X+u6yIjpBGYA7iQIXsF8+vEo+IWhdIZAe65kpFWTbpS+wSXgKkVVZhX6RUBDHC9MiEmA5Ls3KUSj87OWOdZq+kc2bZqVBZbn3gHyPyIB9n5ThMIcGq0dk1ErbJcn5vMbKGXL9p1ZqsPj1PyrcbmGLK2tYuYpw6J5+B0EA6SViu0vUTDGLs5IoHU6ymp+D9Req2PD5IiTnd1Gtf8aCm+EqXm6buZvyWjGNsRhEflWC/zY0Bel3MrBPcrlbRnZ1GtcBhQGy+a0qb8Jdwiwh+UzIiBE8MSWxkPVEMXnFP8rCrULGPjaCoJxDX6I+FzfJ88pj+mFOxfhaA7s27oGXZr9a0fh6ET6scPJhs9HbDc4U1WunMpBso/Apca2yZkv/sK+XIYnN7zjqQglZLmxyuvU3Z+FreaD74ijyGyp8RDz9HXXOZapgMb9odFs6yMJgQNQnOZ5QvJsf+XfDSeIPCCDyrbbPu4VQG3LeqgFsE9rti8P32QggoWBh5rqdQkFy0q3zbeXpRMmnAxTdAPo5ugSAcOXYrsTRhEWQMs69TeANk/VzW7mDtLzdpFUln19kElrJ78PuBI93V+KbP1+z5i7ueqD0h7tLP3O8zhoib4g86uX+t8HQFzxsHSpWXh6AcDWyAV6qhVQFYLGb1SIVgWxHmxbsGN6eeuy0KO8AMYrqLStPQ+H5zLb4PTD9hpJmNHBO2ffWkVDdv3nUqoMK2mlS21aibixhX0d4H8=","layer_level":0}],"wiki_items":[{"catalog_id":"9f285980-4018-47fd-9061-20ce0504dc4b","content":"","title":"Getting Started","description":"getting-started","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"13871567-26c8-4d94-b4a8-e06ecaa78e9f","gmt_create":"2025-09-16T12:26:12.272727+08:00","gmt_modified":"2025-09-16T12:26:12.276647+08:00"},{"catalog_id":"cf4e0eba-8bc7-4ac0-9639-c20754360b9c","content":"","title":"Project Overview","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"4a2442e9-776e-4da9-bda1-e91f5496d1b2","gmt_create":"2025-09-16T12:26:30.10516+08:00","gmt_modified":"2025-09-16T12:26:30.108209+08:00"},{"catalog_id":"a2b3301e-5343-4f2c-a13e-5feceeb17861","content":"","title":"Technology Stack \u0026 Dependencies","description":"technology-stack","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"e798558f-87cf-43cb-9c51-985de2c3a929","gmt_create":"2025-09-16T12:26:53.367879+08:00","gmt_modified":"2025-09-16T12:26:53.372215+08:00"},{"catalog_id":"c5689f41-973e-4c47-93d2-7b57c1521c20","content":"","title":"API Reference","description":"api-reference","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"b75c3e61-29d8-493f-913e-27462d1f5ea2","gmt_create":"2025-09-16T12:27:56.064374+08:00","gmt_modified":"2025-09-16T12:27:56.068251+08:00"},{"catalog_id":"3affd76c-6cde-4077-ab62-dc843b5cc1ad","content":"","title":"Configuration Guide","description":"configuration-guide","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"3b7b0295-ca1b-49ac-bf87-5de332eb0c99","gmt_create":"2025-09-16T12:28:03.288124+08:00","gmt_modified":"2025-09-16T12:28:03.290531+08:00"},{"catalog_id":"5cab9a17-b1b4-4ac2-9f23-da0cd91f3586","content":"","title":"Service Architecture","description":"service-architecture","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"c198fda9-92b0-4041-bfe0-a962199d7b55","gmt_create":"2025-09-16T12:29:16.947889+08:00","gmt_modified":"2025-09-16T12:29:16.949808+08:00"},{"catalog_id":"ef82e9a1-7273-4190-8ee5-1896a534f77d","content":"","title":"Instance Management System","description":"instance-management","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"76ea424b-ee76-4f8e-b012-4602bb03de1e","gmt_create":"2025-09-16T12:29:34.273774+08:00","gmt_modified":"2025-09-16T12:29:34.278091+08:00"},{"catalog_id":"2b660a96-0bc1-425b-9d17-8c19a11d22d1","content":"","title":"External Integrations","description":"external-integrations","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"900d9558-f42b-4439-91ad-053181a91043","gmt_create":"2025-09-16T12:30:16.542344+08:00","gmt_modified":"2025-09-16T12:30:16.543846+08:00"},{"catalog_id":"55e0095d-7368-461f-92af-ef35be06cb04","content":"","title":"Data Models \u0026 Type Definitions","description":"data-models","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"aaf2d5d4-823b-4e4a-8e9a-15c6d61d85cb","gmt_create":"2025-09-16T12:30:47.359108+08:00","gmt_modified":"2025-09-16T12:30:47.363586+08:00"},{"catalog_id":"b51b9a62-2012-4de9-b4aa-b48ed1824998","content":"","title":"Middleware \u0026 Request Processing","description":"middleware-system","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"2e8b8ca4-6715-4b00-808f-ce43011f1260","gmt_create":"2025-09-16T12:31:20.333114+08:00","gmt_modified":"2025-09-16T12:31:20.335122+08:00"},{"catalog_id":"87a8f9aa-9481-4113-b82e-a99578c1325f","content":"","title":"Deployment \u0026 Operations","description":"deployment-operations","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"47b392e9-6791-4375-ae6f-05d4b639e22c","gmt_create":"2025-09-16T12:31:41.125528+08:00","gmt_modified":"2025-09-16T12:31:41.130031+08:00"},{"catalog_id":"af30368d-cc3d-4dbd-91cf-b485f925714f","content":"","title":"Client Integration Guide","description":"client-integration","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"a9920815-a397-43bc-95c2-5ec4bce97d5c","gmt_create":"2025-09-16T12:32:31.186979+08:00","gmt_modified":"2025-09-16T12:32:31.190031+08:00"},{"catalog_id":"1dd73801-136d-4407-ba70-496ea0593eee","content":"","title":"Testing Strategy","description":"testing-strategy","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"e46d0959-ba78-4ea0-8ab3-6d4dfcfb5fd7","gmt_create":"2025-09-16T12:32:46.838414+08:00","gmt_modified":"2025-09-16T12:32:46.840955+08:00"},{"catalog_id":"2eac8f4d-02b5-40d9-a1d3-2fea1c5d90c8","content":"","title":"Instance Creation Workflow","description":"instance-creation-workflow","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"7ae77fb1-a7de-44a7-8cf1-108f58cca211","gmt_create":"2025-09-16T12:33:45.33072+08:00","gmt_modified":"2025-09-16T12:33:45.333458+08:00"},{"catalog_id":"d00bf40a-8fd8-43da-a987-e18e4e67fb63","content":"","title":"Troubleshooting Guide","description":"troubleshooting","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"9d59ad75-4547-42ec-b20a-a75c9a43b56b","gmt_create":"2025-09-16T12:34:23.159165+08:00","gmt_modified":"2025-09-16T12:34:23.162482+08:00"},{"catalog_id":"01edb04b-e365-426b-af85-3a82fd563cfa","content":"","title":"Instances API","description":"instances-api","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"e53eb385-5a23-457c-b9e2-5e25f41b0635","gmt_create":"2025-09-16T12:34:32.805379+08:00","gmt_modified":"2025-09-16T12:34:32.810548+08:00"},{"catalog_id":"cfcf129a-fd8b-4064-963c-76429aad3355","content":"","title":"Novita.ai API Integration","description":"novita-api-integration","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"9f9eff7f-ff7f-4bda-b384-8a223607642e","gmt_create":"2025-09-16T12:35:36.22146+08:00","gmt_modified":"2025-09-16T12:35:36.226189+08:00"},{"catalog_id":"6dd4bedc-a111-43d7-9e22-bf9b6c017bba","content":"","title":"Instance Service","description":"service-architecture-instance","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"6962925f-1bf5-47d2-886a-7e8366bd52f6","gmt_create":"2025-09-16T12:35:40.307968+08:00","gmt_modified":"2025-09-16T12:35:40.310624+08:00"},{"catalog_id":"7525aabd-1da1-4ff6-8725-0f421eb1ae0a","content":"","title":"Request Logging","description":"request-logging","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"d4b5172d-03d4-4afe-932b-90b84e938fb2","gmt_create":"2025-09-16T12:36:36.480834+08:00","gmt_modified":"2025-09-16T12:36:36.483181+08:00"},{"catalog_id":"cc684cb9-6a9c-4fd0-9f56-b4e77dc04bb3","content":"","title":"Docker Deployment","description":"docker-deployment","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"517c70ae-bf8b-4c1b-bc45-60341039485a","gmt_create":"2025-09-16T12:36:41.580431+08:00","gmt_modified":"2025-09-16T12:36:41.584328+08:00"},{"catalog_id":"954e6bf7-b6b7-4e03-bdf0-91c7a6667e51","content":"","title":"Instance Lifecycle Management","description":"lifecycle-management","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"d7fb8bc6-2f34-46b1-b706-53428c950d2f","gmt_create":"2025-09-16T12:37:23.154923+08:00","gmt_modified":"2025-09-16T12:37:23.15945+08:00"},{"catalog_id":"d0699111-d1ab-4038-b737-1aacbdb1ec44","content":"","title":"Node.js Client Integration","description":"nodejs-client-integration","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"a2bdf841-daee-4f59-a42c-2e8ab624956e","gmt_create":"2025-09-16T12:37:34.332388+08:00","gmt_modified":"2025-09-16T12:37:34.336585+08:00"},{"catalog_id":"5038fd45-7e7b-4d50-97fb-4334a3460358","content":"","title":"Health API","description":"health-api","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"35358452-6af2-4f9a-95f9-d06b5041c82a","gmt_create":"2025-09-16T12:38:05.700273+08:00","gmt_modified":"2025-09-16T12:38:05.703909+08:00"},{"catalog_id":"b864c504-d380-4fef-a268-cea926de0742","content":"","title":"Webhook Notification System","description":"webhook-notification-system","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"bc08d2cb-d26a-4646-9500-3d4f03c43eb2","gmt_create":"2025-09-16T12:38:33.754497+08:00","gmt_modified":"2025-09-16T12:38:33.756369+08:00"},{"catalog_id":"1dd9518c-8fea-4b38-b955-0c9769c9c361","content":"","title":"Job Queue Service","description":"service-architecture-job-queue","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"3e73f5c1-54b1-4f2f-b58d-a709f6365144","gmt_create":"2025-09-16T12:39:08.377739+08:00","gmt_modified":"2025-09-16T12:39:08.380068+08:00"},{"catalog_id":"971acfd1-54d5-4afb-9290-62825d0e6404","content":"","title":"Deployment Automation Scripts","description":"deployment-automation-scripts","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"d2e0e57c-9727-4812-96fe-e663288f73bd","gmt_create":"2025-09-16T12:39:45.604728+08:00","gmt_modified":"2025-09-16T12:39:45.60623+08:00"},{"catalog_id":"c8bde886-5e9a-4eee-beba-4de2ef5d058a","content":"","title":"Error Handling","description":"error-handling","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"00fd460e-6bc3-41ff-b3b3-3c615e1b2e81","gmt_create":"2025-09-16T12:39:48.296385+08:00","gmt_modified":"2025-09-16T12:39:48.301073+08:00"},{"catalog_id":"3001cabf-ddd9-4f1b-9441-df9037968caa","content":"","title":"Python Client Integration","description":"python-client-integration","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"d95b7ddc-d75e-45f6-991b-ed493be901d1","gmt_create":"2025-09-16T12:40:38.783594+08:00","gmt_modified":"2025-09-16T12:40:38.787381+08:00"},{"catalog_id":"f788c676-98bb-4b0c-abc3-fe1886996e48","content":"","title":"Monitoring \u0026 Status Polling","description":"monitoring-subsystem","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"5f18de72-9258-4aaa-aa6a-dab993c3ae20","gmt_create":"2025-09-16T12:40:43.153537+08:00","gmt_modified":"2025-09-16T12:40:43.157205+08:00"},{"catalog_id":"849ef228-7ee4-4a15-b29b-f1e9cccc0170","content":"","title":"Metrics API","description":"metrics-api","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"1aabc41e-5051-4fe4-afd5-8281e74ec1cb","gmt_create":"2025-09-16T12:41:27.619041+08:00","gmt_modified":"2025-09-16T12:41:27.624614+08:00"},{"catalog_id":"2004814c-fed4-42c3-90ac-9c900f86a663","content":"","title":"Novita API Service","description":"service-architecture-novita-api","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"fc64b745-828d-475f-9da7-7c6b05cc7f12","gmt_create":"2025-09-16T12:41:43.541568+08:00","gmt_modified":"2025-09-16T12:41:43.546496+08:00"},{"catalog_id":"9fb48643-9f67-4fb8-9ec8-eb20a089c76f","content":"","title":"Metrics Collection","description":"metrics-collection","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"5738857d-e17a-4ce7-a867-8614d1a7a466","gmt_create":"2025-09-16T12:42:20.232654+08:00","gmt_modified":"2025-09-16T12:42:20.234571+08:00"},{"catalog_id":"fb133b46-523e-4b16-ad70-8c9281b0e0a1","content":"","title":"Production Best Practices","description":"production-best-practices","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"aa89b74f-f07c-4c4c-93d8-99678b84046c","gmt_create":"2025-09-16T12:42:52.831318+08:00","gmt_modified":"2025-09-16T12:42:52.835993+08:00"},{"catalog_id":"53762512-5786-4691-93d7-d2447139a68b","content":"","title":"Using Client Examples","description":"client-examples-usage","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"07106eb1-551a-459e-ac0a-17c56085abe7","gmt_create":"2025-09-16T12:43:41.541654+08:00","gmt_modified":"2025-09-16T12:43:41.54612+08:00"},{"catalog_id":"a393ff35-da1c-429e-8404-b9b5fd14712b","content":"","title":"Cache API","description":"cache-api","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"ff9b2af6-4031-482c-8d2c-57acbb8fae16","gmt_create":"2025-09-16T12:43:52.053747+08:00","gmt_modified":"2025-09-16T12:43:52.057985+08:00"},{"catalog_id":"5c55b078-bfc1-471e-9280-6c85c755b77e","content":"","title":"Metrics Service","description":"service-architecture-metrics","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"5940f50f-b47d-4ca7-bc8d-d6c161cff8d1","gmt_create":"2025-09-16T12:44:40.224909+08:00","gmt_modified":"2025-09-16T12:44:40.229347+08:00"},{"catalog_id":"5395f273-5ed3-459e-a79c-d0118c44f3aa","content":"","title":"Cache Service","description":"service-architecture-cache","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"14bb63c8-7b1e-478f-a995-445b5eb9ee08","gmt_create":"2025-09-16T12:44:43.251026+08:00","gmt_modified":"2025-09-16T12:44:43.253209+08:00"},{"catalog_id":"c85de36b-af98-46e5-9268-6bf72bf995f3","content":"","title":"Product \u0026 Template Services","description":"service-architecture-product-template","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"1910fd6e-288b-4eab-9762-d4fc24078af2","gmt_create":"2025-09-16T12:45:25.253051+08:00","gmt_modified":"2025-09-16T12:45:25.257978+08:00"},{"catalog_id":"5bdf5c2c-1508-4aa3-b900-eb59f5507253","content":"","title":"Job Worker Service","description":"service-architecture-job-worker","extend":"{}","progress_status":"completed","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","id":"e1aacfe6-076e-46ea-9a34-d2dd8a7b1f0d","gmt_create":"2025-09-16T12:45:50.069854+08:00","gmt_modified":"2025-09-16T12:45:50.073469+08:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Comprehensive Project Analysis: Novita GPU Instance API\n\n## 1. Project Introduction\n\nThe Novita GPU Instance API is a backend service designed to manage GPU instances on the Novita.ai platform through an automated lifecycle management system. The service provides a RESTful interface for creating, monitoring, and managing GPU instances with optimal pricing selection and webhook notifications.\n\n**Core Goals and Objectives:**\n- Provide a reliable API for GPU instance management\n- Automate the instance creation and monitoring workflow\n- Enable seamless integration with external systems via webhooks\n- Ensure production-ready deployment with Docker and comprehensive monitoring\n\n**Target Audience:**\n- Developers integrating with Novita.ai's GPU infrastructure\n- DevOps teams managing GPU workloads\n- Applications requiring on-demand GPU resources\n- System administrators overseeing infrastructure deployment\n\n## 2. Technical Architecture\n\n### Component Breakdown\n\nThe project follows a well-structured backend architecture with clear separation of concerns:\n\n```mermaid\nflowchart TD\n    A[Client] --\u003e B[API Gateway]\n    B --\u003e C[Middleware Layer]\n    C --\u003e D[Route Handlers]\n    D --\u003e E[Business Services]\n    E --\u003e F[External APIs]\n    E --\u003e G[Data Management]\n    F --\u003e H[Novita.ai API]\n    G --\u003e I[Cache System]\n    \n    style A fill:#f9f,stroke:#333\n    style H fill:#f9f,stroke:#333\n```\n\n### Design Patterns\n\nThe application implements several key design patterns:\n- **Middleware Pattern**: Security, logging, and metrics are implemented as Express middleware\n- **Service Layer Pattern**: Business logic is encapsulated in dedicated service classes\n- **Configuration-as-Code**: Environment-specific settings are managed through configuration files\n- **Dependency Injection**: Services and middleware are imported and composed in the main application file\n\n### System Relationships\n\n```mermaid\ngraph TD\n    A[index.ts] --\u003e B[config.ts]\n    A --\u003e C[logger.ts]\n    A --\u003e D[errorHandler.ts]\n    A --\u003e E[requestLogger.ts]\n    A --\u003e F[metricsMiddleware.ts]\n    A --\u003e G[healthRouter]\n    A --\u003e H[instancesRouter]\n    A --\u003e I[metricsRouter]\n    A --\u003e J[cacheRouter]\n    H --\u003e K[instanceService.ts]\n    H --\u003e L[novitaApiService.ts]\n    K --\u003e M[jobQueueService.ts]\n    K --\u003e N[cacheService.ts]\n    L --\u003e O[novitaClient.ts]\n    P[webhookClient.ts] --\u003e Q[Webhook Notifications]\n    \n    style A fill:#4CAF50,stroke:#333\n    style O fill:#2196F3,stroke:#333\n    style Q fill:#FF9800,stroke:#333\n```\n\n### Data Flow\n\n```mermaid\nflowchart LR\n    Client[Client Request] --\u003e API[API Endpoint]\n    API --\u003e Middleware[Security \u0026 Logging]\n    Middleware --\u003e Validation[Request Validation]\n    Validation --\u003e Service[Business Logic]\n    Service --\u003e External[Novita.ai API]\n    External --\u003e Cache[Response Caching]\n    Cache --\u003e Response[Formatted Response]\n    Response --\u003e Client\n    Service --\u003e Webhook[Webhook Notification]\n    \n    classDef client fill:#f9f,stroke:#333;\n    classDef service fill:#2196F3,stroke:#333;\n    classDef external fill:#FF9800,stroke:#333;\n    class Client client;\n    class Service,Cache,Validation,Business service;\n    class External external;\n```\n\n## 3. Key Implementation\n\n### Main Entry Points\n- [index.ts](src/index.ts) - Primary application entry point that initializes Express server and middleware\n- [Dockerfile](Dockerfile) - Multi-stage Docker build configuration for development and production\n- [docker-compose.yml](docker-compose.yml) - Container orchestration configuration\n\n### Core Modules\n- [config.ts](src/config/config.ts) - Centralized configuration management with environment variables\n- [instanceService.ts](src/services/instanceService.ts) - Core business logic for GPU instance management\n- [novitaApiService.ts](src/services/novitaApiService.ts) - Integration with Novita.ai API\n- [jobQueueService.ts](src/services/jobQueueService.ts) - Job processing and workflow management\n\n### Configuration Approach\n- [config.ts](src/config/config.ts) - Type-safe configuration with Joi validation\n- [docker-compose.yml](docker-compose.yml) - Environment-specific deployment configuration\n- [package.json](package.json) - Build and runtime scripts\n\n### External Dependencies\n- [package.json](package.json) - Lists production dependencies including Express, Axios, and Winston\n- [client-examples/nodejs/package.json](client-examples/nodejs/package.json) - Client-side dependencies\n\n### Integration Points\n- [novitaClient.ts](src/clients/novitaClient.ts) - HTTP client for Novita.ai API\n- [webhookClient.ts](src/clients/webhookClient.ts) - Webhook notification system\n- [routes/instances.ts](src/routes/instances.ts) - API endpoints for instance management\n\n### Component Relationships\n\n```mermaid\ngraph LR\n    A[index.ts] --\u003e B[Express App]\n    B --\u003e C[Security Middleware]\n    B --\u003e D[Logging Middleware]\n    B --\u003e E[Metrics Middleware]\n    B --\u003e F[Route Handlers]\n    F --\u003e G[Instance Service]\n    F --\u003e H[Health Service]\n    F --\u003e I[Cache Service]\n    F --\u003e J[Metrics Service]\n    G --\u003e K[Novita API Service]\n    G --\u003e L[Job Queue Service]\n    G --\u003e M[Cache Service]\n    K --\u003e N[Novita Client]\n    G --\u003e O[Webhook Client]\n    \n    classDef entry fill:#4CAF50,stroke:#333;\n    classDef middleware fill:#9C27B0,stroke:#333;\n    classDef route fill:#2196F3,stroke:#333;\n    classDef service fill:#FF9800,stroke:#333;\n    classDef client fill:#F44336,stroke:#333;\n    \n    class A entry;\n    class C,D,E middleware;\n    class F route;\n    class G,H,I,J,K,L,M,O service;\n    class N client;\n```\n\n## 4. Key Features\n\n### Functionality Overview\n\nThe Novita GPU Instance API provides comprehensive functionality for managing GPU instances:\n\n1. **Instance Lifecycle Management**: Create, monitor, and manage GPU instances\n2. **Automated Workflows**: Handle the complete instance creation process\n3. **Webhook Integration**: Notify external systems when instances are ready\n4. **Health Monitoring**: Comprehensive health checks and metrics\n5. **Production-Ready Deployment**: Docker and Docker Compose support\n\n### Implementation Highlights\n\n- **Type Safety**: Full TypeScript implementation with type definitions in [types/api.ts](src/types/api.ts)\n- **Error Handling**: Centralized error handling in [errorHandler.ts](src/middleware/errorHandler.ts)\n- **Security**: Helmet and CORS middleware with configurable security settings\n- **Logging**: Structured logging with Winston in [logger.ts](src/utils/logger.ts)\n- **Testing**: Comprehensive test suite with unit and integration tests\n\n### Feature Architecture\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Idle\n    Idle --\u003e InstanceCreation: POST /api/instances\n    InstanceCreation --\u003e InstancePolling: Start monitoring\n    InstancePolling --\u003e InstanceReady: Instance available\n    InstancePolling --\u003e InstanceFailed: Creation failed\n    InstanceReady --\u003e WebhookSent: Send notification\n    WebhookSent --\u003e Idle: Complete\n    InstanceFailed --\u003e ErrorHandled: Handle error\n    ErrorHandled --\u003e Idle: Complete\n    \n    note right of InstancePolling\n      Uses jobQueueService to\n      manage polling workflow\n    end note\n    \n    note right of WebhookSent\n      Uses webhookClient to\n      send notifications\n    end note\n```\n\n### API Workflow\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant API\n    participant Service\n    participant NovitaAPI\n    participant Webhook\n    \n    Client-\u003e\u003eAPI: POST /api/instances\n    API-\u003e\u003eService: Process request\n    Service-\u003e\u003eNovitaAPI: Create instance\n    NovitaAPI--\u003e\u003eService: Instance ID\n    Service-\u003e\u003eService: Start polling workflow\n    loop Poll every 30s\n        Service-\u003e\u003eNovitaAPI: Check status\n        NovitaAPI--\u003e\u003eService: Status update\n    end\n    Service-\u003e\u003eWebhook: Send ready notification\n    Webhook--\u003e\u003eService: Confirmation\n    Service--\u003e\u003eAPI: Return success\n    API--\u003e\u003eClient: Instance details\n```\n\nSources:\n- [README.md](README.md)\n- [package.json](package.json)\n- [src/index.ts](src/index.ts)\n- [Dockerfile](Dockerfile)\n- [docker-compose.yml](docker-compose.yml)\n\u003c/blog\u003e","gmt_create":"2025-09-16T12:22:10.926942+08:00","gmt_modified":"2025-09-16T12:22:10.926942+08:00","id":"46408958-dcb7-4c6c-89fe-e71da8829f88","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":""},"wiki_readme":{"content":"No readme file","gmt_create":"2025-09-16T12:21:33.515429+08:00","gmt_modified":"2025-09-16T12:21:33.515429+08:00","id":"913582f2-6297-4655-b198-1c5b36bf7d69","repo_id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":""},"wiki_repo":{"id":"c02ea427-6c35-4e0b-b023-d835ff4e97bf","workspace_path":"","name":"novitai","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── client-examples\\n│   ├── nodejs\\n│   │   └── package.json\\n│   ├── python\\n│   │   ├── requirements.txt\\n│   │   └── setup.py\\n│   └── README.md\\n├── scripts\\n│   ├── backup.sh\\n│   ├── deploy-dev.sh\\n│   ├── deploy-prod.sh\\n│   └── health-check.sh\\n├── src\\n│   ├── __tests__\\n│   │   ├── fixtures\\n│   │   │   └── index.ts\\n│   │   ├── app.test.ts\\n│   │   ├── e2e.test.ts\\n│   │   ├── performance.test.ts\\n│   │   └── setup.ts\\n│   ├── clients\\n│   │   ├── __tests__\\n│   │   │   ├── novitaClient.test.ts\\n│   │   │   └── webhookClient.test.ts\\n│   │   ├── README.md\\n│   │   ├── novitaClient.ts\\n│   │   └── webhookClient.ts\\n│   ├── config\\n│   │   ├── __tests__\\n│   │   │   └── config.test.ts\\n│   │   ├── examples\\n│   │   │   └── basic-usage.ts\\n│   │   ├── README.md\\n│   │   └── config.ts\\n│   ├── examples\\n│   │   ├── httpClientExample.ts\\n│   │   ├── jobQueueExample.ts\\n│   │   ├── productServiceExample.ts\\n│   │   └── templateServiceExample.ts\\n│   ├── middleware\\n│   │   ├── __tests__\\n│   │   │   ├── errorHandler.test.ts\\n│   │   │   ├── metricsMiddleware.test.ts\\n│   │   │   └── requestLogger.test.ts\\n│   │   ├── errorHandler.ts\\n│   │   ├── metricsMiddleware.ts\\n│   │   └── requestLogger.ts\\n│   ├── routes\\n│   │   ├── __tests__\\n│   │   │   ├── cache.test.ts\\n│   │   │   ├── health.test.ts\\n│   │   │   ├── instances.test.ts\\n│   │   │   ├── integration.test.ts\\n│   │   │   └── metrics.test.ts\\n│   │   ├── cache.ts\\n│   │   ├── health.ts\\n│   │   ├── instances.ts\\n│   │   └── metrics.ts\\n│   ├── services\\n│   │   ├── __tests__\\n│   │   │   ├── cacheService.test.ts\\n│   │   │   ├── instanceCreationWorkflow.test.ts\\n│   │   │   ├── instanceService.test.ts\\n│   │   │   ├── instanceStartupMonitoring.simple.test.ts\\n│   │   │   ├── instanceStartupMonitoring.test.ts\\n│   │   │   ├── jobIntegration.test.ts\\n│   │   │   ├── jobQueueService.test.ts\\n│   │   │   ├── jobWorkerService.test.ts\\n│   │   │   ├── metricsService.test.ts\\n│   │   │   ├── novitaApiService.test.ts\\n│   │   │   ├── productService.test.ts\\n│   │   │   ├── templateService.test.ts\\n│   │   │   └── workflowIntegration.test.ts\\n│   │   ├── README.md\\n│   │   ├── cacheService.ts\\n│   │   ├── instanceService.ts\\n│   │   ├── jobQueueService.ts\\n│   │   ├── jobWorkerService.ts\\n│   │   ├── metricsService.ts\\n│   │   ├── novitaApiService.ts\\n│   │   ├── productService.ts\\n│   │   └── templateService.ts\\n│   ├── types\\n│   │   ├── __tests__\\n│   │   │   └── validation.test.ts\\n│   │   ├── api.ts\\n│   │   ├── job.ts\\n│   │   └── validation.ts\\n│   ├── utils\\n│   │   ├── __tests__\\n│   │   │   ├── errorHandler.test.ts\\n│   │   │   └── logger.test.ts\\n│   │   ├── errorHandler.ts\\n│   │   └── logger.ts\\n│   └── index.ts\\n├── API_ENDPOINTS_SUMMARY.md\\n├── DEPLOYMENT.md\\n├── DOCKER_DEPLOYMENT_SUMMARY.md\\n├── Dockerfile\\n├── Makefile\\n├── README.md\\n├── docker-compose.example.yml\\n├── docker-compose.override.yml\\n├── docker-compose.prod.yml\\n├── docker-compose.yml\\n├── jest.config.js\\n├── package-lock.json\\n├── package.json\\n└── tsconfig.json\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"d1a9385a697622a27abb7199ea7ac035942bfc8b","last_commit_update":"2025-09-16T09:01:52+08:00","gmt_create":"2025-09-16T12:21:29.496348+08:00","gmt_modified":"2025-09-16T12:45:50.18671+08:00","extend_info":"{\"language\":\"en\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}